<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-144.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>springboot集成swagger碰到的坑（报404） - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">springboot集成swagger碰到的坑（报404）</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>&nbsp; &nbsp; &nbsp; &nbsp;一：项目使用springboot集成swagger进行调试，配置swagger非常简单，主要有三步：</p> <p>1、添加swagger依赖</p> <pre class="has"><code>&lt;!-- 引入 swagger等相关依赖 --&gt; &lt;dependency&gt; 	&lt;groupId&gt;io.springfox&lt;/groupId&gt; 	&lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt; 	&lt;version&gt;2.6.1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; 	&lt;groupId&gt;io.springfox&lt;/groupId&gt; 	&lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt; 	&lt;version&gt;2.6.1&lt;/version&gt; &lt;/dependency&gt;</code></pre> <p>2、进行swagger的配置</p> <pre class="has"><code class="language-java">package com.sailing.springbootmybatis.config;  import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import springfox.documentation.builders.ApiInfoBuilder; import springfox.documentation.builders.PathSelectors; import springfox.documentation.builders.RequestHandlerSelectors; import springfox.documentation.service.ApiInfo; import springfox.documentation.spi.DocumentationType; import springfox.documentation.spring.web.plugins.Docket; import springfox.documentation.swagger2.annotations.EnableSwagger2;  /**  * @author baibing  * @project: springboot-mybatis  * @package: com.sailing.springbootmybatis.config  * @Description: swagger2配置类  * @date 2018/9/25 15：35  */ @Configuration @EnableSwagger2 public class Swagger2Config {      @Bean     public Docket createRestApi(){         return new Docket(DocumentationType.SWAGGER_2)                 .apiInfo(apiInfo())                 .select()                 .apis(RequestHandlerSelectors.basePackage("com.sailing.springbootmybatis.controller"))                 .paths(PathSelectors.any())                 .build();     }      private ApiInfo apiInfo(){         return new ApiInfoBuilder()                 .title("SPRING-BOOT整合MYBATIS--API说明文档")                 .description("2018-8完成版本")                 .contact("Sailing西安研发中心-baibing")                 .version("1.0")                 .license("署名-非商用-相同方式共享 4.0转载请保留原文链接及作者")                 .licenseUrl("https://creativecommons.org/licenses/by-nc-sa/4.0/")                 .build();     } }</code></pre> <p>3、在controller层添加相应的注解（<strong>@Api</strong>和<strong>@ApiOperation</strong> 以及<strong>@ApiIgnore</strong>等）</p> <pre class="has"><code class="language-java">package com.sailing.springbootmybatis.controller;  import com.sailing.springbootmybatis.bean.Userinfo; import com.sailing.springbootmybatis.common.log.LogOperationEnum; import com.sailing.springbootmybatis.common.log.annotation.MyLog; import com.sailing.springbootmybatis.common.response.BuildResponseUtil; import com.sailing.springbootmybatis.common.response.ResponseData; import com.sailing.springbootmybatis.common.websocket.WebSocketServer; import com.sailing.springbootmybatis.service.RedisService; import com.sailing.springbootmybatis.service.UserinfoService; import io.swagger.annotations.Api; import io.swagger.annotations.ApiOperation; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.validation.BindingResult; import org.springframework.web.bind.annotation.*; import springfox.documentation.annotations.ApiIgnore;  import javax.validation.Valid; import java.io.IOException; import java.util.List;  /**  * @author baibing  * @project: springboot-mybatis  * @package: com.sailing.springbootmybatis.controller  * @Description: Userinfo controller 控制层  * @date 2018/9/12 10:07  */ @RestController @Api(value = "USERINFO", description = "用户信息测试controller") public class UserinfoController{      @Autowired     private UserinfoService userinfoService;      @Autowired     private WebSocketServer webSocketServer;      @Autowired     private RedisService redisService;        /**      * 查找指定id对应的用户      * @param id      * @return      */     @RequestMapping(value = "/user/{id}", method = RequestMethod.GET)     @MyLog(type = LogOperationEnum.SELECT,value = "查询指定id的用户信息")     @ApiOperation(value = "查询指定id的用户信息接口", notes = "查询指定id的用户信息接口")     public ResponseData getUser(@PathVariable(value = "id") Integer id){         return userinfoService.findById(id);     }      /**      * 查找所有用户      * @return      */     @RequestMapping(value = "/users", method = RequestMethod.GET)     @MyLog(type = LogOperationEnum.SELECT,value = "查询全部用户信息")     @ApiOperation(value = "查询所有用户信息接口", notes = "查询所有用户信息接口")     public ResponseData getAllUsers(){         return userinfoService.findAllUsers();     }      /**      * 查找所有用户（带分页）      * @param page 当前页数      * @param rows 每页显示条数      * @return      */     @RequestMapping(value = "/users/p", method = RequestMethod.GET)     @ApiOperation(value = "查询所有用户信息接口(带分页)", notes = "查询所有用户信息接口(带分页)")     public ResponseData getAllUsers(Integer page, Integer rows){         return userinfoService.findAllUsers(page, rows);     }      /**      * 新增用户 (带参数校验@Valid)      * 注意：BindingResult 对象必须在 @Valid 的紧挨着的后面，否则接收不到错误信息      * @Valid 可以校验json 也可以校验表单传递的对象属性      * @param userinfo      * @return      */     @RequestMapping(value = "/user", method = RequestMethod.POST)     @MyLog(type = LogOperationEnum.INSERT, value = "新增用户信息")     @ApiOperation(value = "新增用户接口(包含参数校验)", notes = "新增用户接口(包含参数校验)")     public ResponseData saveUserinfo(@RequestBody @Valid Userinfo userinfo, BindingResult bindingResult){         if(bindingResult.hasErrors()){             return BuildResponseUtil.buildFailResponse(bindingResult.getFieldError().getDefaultMessage());         }         return userinfoService.saveUser(userinfo);     }      /**      * 删除指定用户      * @param id 用户id      * @return      */     @RequestMapping(value = "/user/{id}", method = RequestMethod.DELETE)     @ApiOperation(value = "删除指定id的用户信息接口", notes = "删除指定id的用户信息接口")     public ResponseData deleteUser(@PathVariable Integer id){         return userinfoService.deleteUser(id);     }      /**      * 更新用户      * @param userinfo      * @return      */     @RequestMapping(value = "/user", method = RequestMethod.PUT)     @ApiOperation(value = "更新指定id用户信息接口", notes = "更新指定id用户信息接口")     public ResponseData updateUserinfo(@RequestBody Userinfo userinfo){         return userinfoService.updateUser(userinfo);     }      /**      * 给指定用户推送消息      * @param userName 用户名      * @param message 消息      * @throws IOException      */     @RequestMapping(value = "/socket", method = RequestMethod.GET)     @ApiIgnore //使用此注解忽略方法的暴露，也可以用在controller上     @ApiOperation(value = "给指定用户推送socket消息接口", notes = "给指定用户推送socket消息接口")     public void testSocket(@RequestParam String userName,@RequestParam String message){         webSocketServer.sendInfo(userName, message);     }      /**      * 测试redis接口保存String类型action      * @param address      * @return      */     @RequestMapping(value = "/redis", method = RequestMethod.POST)     @ApiIgnore //使用此注解忽略方法的暴露，也可以用在controller上     @ApiOperation(value = "redis中添加String数据接口", notes = "redis中添加String数据接口")     public ResponseData setString(@RequestBody String address){         System.out.println(address);         return redisService.setValue(address);     }      /**      * 测试redis接口保存实体类型action      * @param userinfo      * @return      */     @RequestMapping(value = "/redis/userinfo", method = RequestMethod.POST)     @ApiIgnore //使用此注解忽略方法的暴露，也可以用在controller上     @ApiOperation(value = "redis中添加Userinfo实体接口", notes = "redis中添加Userinfo实体接口")     public ResponseData setEntity(@RequestBody Userinfo userinfo){         return redisService.setEntityValue(userinfo);     }     /**      * 测试redis接口读取实体类型action      * @param key      * @return      */     @RequestMapping(value = "/redis/userinfo/{key}", method = RequestMethod.GET)     @ApiIgnore //使用此注解忽略方法的暴露，也可以用在controller上     @ApiOperation(value = "redis中读取指定key对应的数据接口", notes = "redis中读取指定key对应的数据接口")     public ResponseData getEntity(@PathVariable String key){         return redisService.getEntityValue(key);     }      /**      *      * @param list      * @return      */     @RequestMapping(value = "/redis/userList", method = RequestMethod.POST)     @ApiIgnore //使用此注解忽略方法的暴露，也可以用在controller上     @ApiOperation(value = "redis中添加包含Userinfo实体的集合接口", notes = "redis中添加包含Userinfo实体的集合接口")     public ResponseData setCollection(@RequestBody List&lt;Userinfo&gt; list){         return redisService.setCollectionValue(list);     }      /**      * 测试redis接口读取实体类型action      * @param key      * @return      */     @RequestMapping(value = "/redis/userList/{key}", method = RequestMethod.GET)     @ApiOperation(value = "redis中读取指定key对应的集合数据接口", notes = "redis中读取指定key对应的集合数据接口")     public ResponseData getCollection(@PathVariable String key){         return redisService.getCollectionValue(key);     }  }</code></pre> <p>&nbsp; &nbsp; &nbsp; &nbsp;二：到这里配置就结束了，访问<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://127.0.0.1:8088/yjbj/swagger-ui.html"  rel="nofollow">http://127.0.0.1:端口/项目路径/swagger-ui.html</a>&nbsp;就ok了，&nbsp;页面如下：</p> <div style="text-align:center;"> <figure class="image has"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220830/d3eebebbb024e2d2ee91ef5e30cb6449.jpg"><figcaption>    swagger-ui界面展示</figcaption></figure> </div> <p>&nbsp; &nbsp; &nbsp; &nbsp;三：项目运行了一段时间后访问上面连接突然报<span style="color:#f33b45;">404</span>错误，百思不得其解，但是可以肯定的是加了什么配置导致，最后在<strong>application.yml</strong>中发现了一个配置：</p> <pre class="has"><code class="language-java">spring.mvv.resources.add-mapping:false</code></pre> <p>将其注释掉熟悉的界面又回来了，查阅资料发现这个配置<strong>是不自动给静态资源添加路径，导致swagger-ui.html找不到资源</strong>，知道原因后摸索看能不能在保留以上配置的前提下自己手动给swagger-ui.html添加静态资源路径呢？</p> <pre class="has"><code class="language-java">package com.sailing.springbootmybatis.config;  import org.springframework.context.annotation.Configuration; import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry; import org.springframework.web.servlet.config.annotation.ViewControllerRegistry; import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;  /**  * 在SpringBoot2.0及Spring 5.0 WebMvcConfigurerAdapter已被废弃，目前找到解决方案就有  * 1 直接实现WebMvcConfigurer （官方推荐）  * 2 直接继承WebMvcConfigurationSupport  * @ https://blog.csdn.net/lenkvin/article/details/79482205  */ @Configuration public class WebMvcConfig extends WebMvcConfigurerAdapter {      @Override     public void addResourceHandlers(ResourceHandlerRegistry registry) {         registry.addResourceHandler("swagger-ui.html")                 .addResourceLocations("classpath:/META-INF/resources/");         registry.addResourceHandler("/webjars/**")                 .addResourceLocations("classpath:/META-INF/resources/webjars/");      } }</code></pre> <p>发现通过以上代码手动给swagger-ui.html指定路径也可以解决404的问题。</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-143.htm">Git基础之协作模式详解</a></p>
                                        <p>下一个：<a href="/html/category/article-145.htm">Spark原理篇之Spark Streaming转化操作和输出操作</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">java中RabbitMQ高级应用_java</a></h4>
                <p>目录  1、消息可靠性投递   1.1、确认模式  1.2、退回模式  1.3、确认机制  2、消费端限流  3、消息过期时间  4、死信队列   4.1、死信概念  4.2、延迟队列     1、消</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-211.htm">谨慎使用Arrays.asList()</a></h4>
                <p>经过了两个月的【深入学习Java编程方法】课程学习，对Java的一些新特性有了更多的了解。依旧，坑洼遍地。 Java中的Collection类是一个很好用、很常用的类，省去了当年C语言手动链表的麻烦之</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">C ++中的虚拟基类</a></h4>
                <p>在本教程中，我们将讨论一个程序，以了解C ++中的虚拟基类。 虚拟类主要在多重继承期间使用。为了避免将同一类的多个实例带到同一类中，这随后会引起歧义，因此使用虚拟类。 示例 #include&nbsp</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-258.htm">vue实现自定义全局右键菜单_vue.js</a></h4>
                <p>前段时间公司在做一个webIDE项目，其中有对文件树的各种操作，主要通过右键菜单实现，今天就来记录一下怎么在vue项目中实现全局的自定义右键菜单。效果如图所示：  注意： 需要在项目中找到页面整体布局</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">C\C++ 中 malloc、calloc、realloc 函数的用法</a></h4>
                <p>C\C++ 中 malloc、calloc、realloc 函数的用法 转自：https://www.jianshu.com/p/d6f209b8796d 前言 C\C++提供了底层的内存操作，为程序</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">dataframe数据自动对齐</a></h4>
                <p>import pandas as pd import numpy as np  # Pandas 可以根据索引实现数据自动对齐，索引不重合的部分被置为NaN  df1 = pd.DataFrame(n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-215.htm">你不知道的Python容器</a></h4>
                <p>你不知道的Python容器  你不知道的Python容器  散列表  ChainMap MappingProxyType   线性表 堆 参考资料    昨天阅读了《Python Tricks: Th</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-210.htm">JAVA8 | 日期时间API（LocalDate、LocalDateTime、LocalTime）</a></h4>
                <p>目录      日期 时间 合并日期和时间 时间戳 时间段   Duration Period   操作日期 日期格式化 时区 日历       Java8 引入全新的日期和时间API，主要包括Loc</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">Docker从入门到放弃(1) Docker简介与安装_在线工具</a></h4>
                <p>​ 目录 一、Docker简介 1、Docker是什么： 2、为什么有docke的出现： 3、docker与传统容器的区别： 4、docker基本组成 5、docker工作原理： 二、Docker安装</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>