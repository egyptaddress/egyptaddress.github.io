<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-159.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>SpringBoot教程SpringBoot统一结果封装 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">SpringBoot教程SpringBoot统一结果封装</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>经过了前面几篇文章，SpringBoot中MVC相关的配置其实都已经差不多了，接下来就可以完全进入接口开发阶段了。前面我们写过几个接口，虽然都加了@RestController注解，相当于统一了我们的返回数据的基本形式为JSON，但是由于我们的项目可能是很多人一起开发，所以我们最好能够把我们的返回结果统一一下，让大家都返回一样的数据格式，这样即规范了代码，也方便了前端人员的调用，不然每个人都按照每个人的风格去写，代码会变得非常混乱。</p> <p>那我我们怎么还封装这个结果呢，那就要关注我们返回给前端的数据都要包含哪些信息。</p> <p>一般来讲，首先要有一个code, 用来代表我们这次接口的一个状态，比如 0代表成功，1代表失败，2代表必传参数不对， 4代表系统异常等等。这只是个简单的举例。可能很多人会有疑问，Http协议本身不是已经有了相应的返回码的定义了么，比如200代表成功， 500代表服务器错误，404代表找不到页面，为啥咱们还要在定义呢，这就是划分粒度的问题了，就那200来说，它代表是这次请求成功了，但是它描述不了这次请求中的业务结果，比如用户名已存在，其实业务上就不是一种成功，但http的结果肯定是200，所以我们需要一种描述我们业务状态的编码。</p> <p>除了编码之外，还有要一些提示信息，比如，操作成功，系统异常，用户名已存在等，所以我们再加一个messge字段。</p> <p>还有什么呢，还有我们的核心数据，比如我根据id获取数据，那个这个数据的具体内容，我们肯定是必须要返回给前端呢，所以还要 有个data， 那这个data 用什么类型呢，这个类型肯定是五花八门，所以我们要用一个统一的父类，Object才可以接收所有类型，当然为了便于操作我们可以采用泛型的方式。</p> <p>通过上面的分析，我们的这个类基本上就已经可以设计出来了。</p> <pre><code class="language-java">public class Result<T> implements Serializable {    private static final long serialVersionUID = -3960261604605958516L;      private int code;   private String msg;   private T data;      // get set方法，限于篇幅问题，这里不写了，大家操作的时候自己生成一下。或者使用lombok   public static <T> Result<T> success() {         return new Result<>();     }      /**      * 成功,默认状态码,返回消息,自定义返回数据      *      * @param data 自定义返回数据      * @param <T>  返回类泛型,不能为String      * @return 通用返回Result      */     public static <T> Result<T> success(T data) {         return new Result<>(data);     }      /**      * 成功,默认状态码,自定义返回消息,无返回数据      *      * @param msg 自定义返回消息      * @param <T> 返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> success(String msg) {         return new Result<>(msg);     }      /**      * 成功,默认状态码,自定义返回消息,返回数据      *      * @param msg  自定义返回消息      * @param data 自定义返回数据      * @param <T>  返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> success(String msg, T data) {         return new Result<>(msg, data);     }      /**      * 失败,默认状态码,返回消息,无返回数据      *      * @param <T> 返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> error() {         return new Result<>(ResultCode.ERROR);     }      /**      * 失败,默认状态码,自定义返回消息,无返回数据      *      * @param <T> 返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> error(String msg) {         return new Result<>(ResultCode.ERROR.getCode(), msg);     }      /**      * 失败,自定义状态码,返回消息,无返回数据      *      * @param code 自定义状态码      * @param msg  自定义返回消息      * @param <T>  返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> error(int code, String msg) {         return new Result<>(code, msg);     }      /**      * 失败,使用CodeMsg状态码,返回消息,无返回数据      *      * @param resultCode CodeMsg,参数如下:      *                   <p> code 状态码      *                   <p> msg  返回消息      * @param <T>        返回类泛型      * @return 通用返回Result      */     public static <T> Result<T> error(ResultCode resultCode) {         return new Result<>(resultCode);     }      /**      * 成功构造器,无返回数据      */     private Result() {         this(ResultCode.SUCCESS);     }      /**      * 成功构造器,自定义返回数据      *      * @param data 返回数据      */     private Result(T data) {         this(ResultCode.SUCCESS, data);     }      /**      * 成功构造器,自定义返回消息,无返回数据      *      * @param msg 返回消息      */     private Result(String msg) {         this(ResultCode.SUCCESS.getCode(), msg);     }      /**      * 成功构造器,自定义返回信息,返回数据      *      * @param msg  返回信息      * @param data 返回数据      */     private Result(String msg, T data) {         this(ResultCode.SUCCESS.getCode(), msg, data);     }      /**      * 构造器,自定义状态码,返回消息      *      * @param code 状态码      * @param msg  返回消息      */     private Result(int code, String msg) {         this.code = code;         this.msg = msg;     }      /**      * 构造器,自定义状态码,返回消息,返回数据      *      * @param code 状态码      * @param msg  返回消息      * @param data 返回数据      */     private Result(int code, String msg, T data) {         this(code, msg);         this.data = data;     }      /**      * 构造器,使用CodeMsg状态码与返回信息      *      * @param resultCode CodeMsg,参数如下:      *                   <p> code 状态码      *                   <p> msg  返回消息      */     private Result(ResultCode resultCode) {         this(resultCode.getCode(), resultCode.getMsg());     }      /**      * 构造器,使用CodeMsg状态码与返回信息,自定义返回数据      *      * @param resultCode CodeMsg,参数如下:      *                   <p> code 状态码      *                   <p> msg  返回消息      * @param data       返回数据      */     private Result(ResultCode resultCode, T data) {         this(resultCode);         this.data = data;     }   } 复制代码</code></pre> <p>在定义几个常见的错误：这里为了不写那么多的get，set,我们引入了lombok</p> <pre><code class="language-java">@Data @Builder public class ResultCode implements Serializable {      private static final long serialVersionUID = -6269841958947880397L;      /**      * 状态码      */     private int code;      /**      * 状态信息      */     private String msg;      /**      * 默认成功      */     public final static ResultCode SUCCESS = dispose(ResultCodeEnum.SUCCESS);     /**      * 默认失败      */     public final static ResultCode ERROR = dispose(ResultCodeEnum.ERROR);     /**      * 通用业务异常      */     public final static ResultCode BIZ_ERROR = dispose(ResultCodeEnum.BIZ_ERROR);     /**      * 文件超出最大限制      */     public final static ResultCode FILE_OUT_MAX = dispose(ResultCodeEnum.FILE_OUT_MAX);     /**      * 文件格式不正确      */     public final static ResultCode FILE_FORMAT_ERROR = dispose(ResultCodeEnum.FILE_FORMAT_ERROR);     /**      * 参数错误      */     public final static ResultCode PARAM_ERROR = dispose(ResultCodeEnum.PARAM_ERROR);     /**      * Json解析异常      */     public final static ResultCode JSON_FORMAT_ERROR = dispose(ResultCodeEnum.JSON_FORMAT_ERROR);     /**      * Sql解析异常      */     public final static ResultCode SQL_ERROR = dispose(ResultCodeEnum.SQL_ERROR);     /**      * 网络超时      */     public final static ResultCode NETWORK_TIMEOUT = dispose(ResultCodeEnum.NETWORK_TIMEOUT);     /**      * 未知的接口      */     public final static ResultCode UNKNOWN_INTERFACE = dispose(ResultCodeEnum.UNKNOWN_INTERFACE);     /**      * 请求方式不支持      */     public final static ResultCode REQ_MODE_NOT_SUPPORTED = dispose(ResultCodeEnum.REQ_MODE_NOT_SUPPORTED);     /**      * 系统异常      */     public final static ResultCode SYS_ERROR = dispose(ResultCodeEnum.SYS_ERROR);      private static ResultCode dispose(ResultCodeEnum codeEnum) {         return ResultCode.builder().code(codeEnum.getCode()).msg(codeEnum.getMsg()).build();     }      public ResultCode(int code, String msg) {         this.code = code;         this.msg = msg;     } } 复制代码</code></pre> <pre><code class="language-java">public enum ResultCodeEnum {      SUCCESS(0, "操作成功"),     ERROR(1, "操作失败"),     BIZ_ERROR(1000, "通用业务异常"),     FILE_OUT_MAX(9000, "文件超出最大限制"),     FILE_FORMAT_ERROR(9001, "文件格式不正确"),     PARAM_ERROR(9050, "参数错误"),     JSON_FORMAT_ERROR(9051, "Json解析异常"),     SQL_ERROR(9052, "Sql解析异常"),     NETWORK_TIMEOUT(9510, "网络超时"),     UNKNOWN_INTERFACE(9520, "未知的接口"),     REQ_MODE_NOT_SUPPORTED(9530, "请求方式不支持"),     SYS_ERROR(9999, "系统异常");      /**      * 状态码      */     private final int code;      /**      * 状态信息      */     private final String msg;      public int getCode() {         return code;     }      public String getMsg() {         return msg;     }      ResultCodeEnum(int code, String msg) {         this.code = code;         this.msg = msg;     } } 复制代码</code></pre> <p>这个写完了以后，就可以统一我们的返回结果，以后所有的Controller就都要返回Result类型。比如：</p> <pre><code class="language-java">@GetMapping("/withinRangeResource")     public Result<List<EmergencyExpertResVO>> withinRangeResource(@Valid ResourceRangeReqVO param) {         List<EmergencyExpertResVO> expertResVOS = emergencyExpertBiz.getWithinRangeResource(param);         return Result.success(expertResVOS);     } 复制代码</code></pre> <p>另： 配套项目代码已托管中gitCode:一缕82年的清风 / springboot-learning · GitCode</p> <p>所有文章也会在微信公众号首发更新，欢迎关注： 一缕82年的清风</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-158.htm">技能篇：linux服务性能问题排查及jvm调优思路</a></p>
                                        <p>下一个：<a href="/html/category/article-160.htm">Java-Day05 函数、函数重载、递归函数</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4443.htm">中国农大动物医院哪个医生好 中国农大动物医院哪个医生好一点</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于中国农大动物医院哪个医生好的问题，于是小编就整理了4个相关介绍中国农大动物医院哪个医生好的解答，让我们一起看看吧。北京农大动物医</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3756.htm">接口隔离原则（Interface Segregation Principle，ISP）</a></h4>
                <p>接口隔离原则（Interface Segregation Principle，ISP）要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。  定义  客户端不应该</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4403.htm">dv哪个牌子最好(dv品牌排行榜前十名)</a></h4>
                <p>蝶侠小编给大家带来了哪个的好相关文章，一起来看一下吧。 dv摄像机哪个品牌好  dv摄像机十大品牌排行榜分别是佳能Glad、索尼SONY、松下、欧达Ordro、杰伟世JVC、哥普乐GoPro、大疆DJ</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4369.htm">符合动物医院法定条件有哪些内容和要求呢（动物医院资质级别有哪些）</a></h4>
                <p>摘要：       今天给各位分享符合动物医院法定条件有哪些内容和要求呢的知识，其中也会对动物医院资质级别有哪些进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1342.htm">import axios from ‘axios‘失效的问题</a></h4>
                <p>在搭建vue开发项目的时候，引入axios组件的时候，设置的全局axios总是访问不了，先以为是axios版本冲突问题，后来发现是项目打开层级的问题。 进入下层目录重新打开，解决了！</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4550.htm">宠物领养平台app小程序叫什么来着的（宠物领养 app）</a></h4>
                <p>摘要：       本篇文章给大家谈谈宠物领养平台app小程序叫什么来着的，以及宠物领养 app对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、谁知道领养宠物的app...  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2239.htm">【面试普通人VS高手系列】HashMap是怎么解决哈希冲突的？</a></h4>
                <p>常用数据结构基本上是面试必问的问题，比如HashMap、LinkList、ConcurrentHashMap等。 关于HashMap，有个学员私信了我一个面试题说： “HashMap是怎么解决哈希冲突</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1054.htm">mysql 中插入百万条数据</a></h4>
                <p>文章目录  mysql 中插入百万条数据     1. 创建测试表 2. 开启二进制日志 3. 创建一个生成随机字符串的函数: 4. 调用上边的两个插入函数        mysql 中插入百万条数据</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3424.htm">用gcc查看c源文件的汇编代码   C++性能优化技术导论</a></h4>
                <p>1  用gcc查看c源文件的汇编代码    &nbsp;      gcc -S -o xx.s 2.c &nbsp; http://blog.csdn.net/heiyeshuwu/article/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3729.htm">Git基础之协作模式详解</a></h4>
                <p>目录  1、分布式工作流程 2、集中式工作流 3、分支工作流 4、GitFlow 工作流(最流行) 5、Forking 工作流(偶尔使用) 6、总结   1、分布式工作流程 与传统的集中式版本控制系统</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>