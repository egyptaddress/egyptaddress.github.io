<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-252.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Azure Virtual Desktop创建配置管理详解 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Azure Virtual Desktop创建配置管理详解</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h2>一，引言</h2> <p>Azure 虚拟创面是一项 Azure 服务，可以让我们管理：</p> <p>　　1）VDI（虚拟桌面基础架构）</p> <p>　　2）云端的 RDSH：<span style="box-sizing: border-box; -webkit-font-smoothing: antialiased; scroll-behavior: smooth; color: rgba(64, 66, 73, 1); font-family: Roboto, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif; font-size: 16px; vertical-align: inherit">RDSH 是 RDS（远程桌面服务）中的一个角色。</span><span style="box-sizing: border-box; -webkit-font-smoothing: antialiased; scroll-behavior: smooth; color: rgba(64, 66, 73, 1); font-family: Roboto, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif; font-size: 16px; vertical-align: inherit">这些类型的服务器用于托管用户远程访问的 Windows 桌面或应用程序。</span></p> <p><span style="color: rgba(64, 66, 73, 1); font-family: Roboto, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif"><span style="font-size: 16px">为此我们可以通过使用 Azure Virtual Desktop 做那些操作呢？？</span></span></p> <ul style="box-sizing: inherit; margin: 16px 0 16px 38px; padding: 0; list-style: none; outline-color: inherit; color: rgba(23, 23, 23, 1); font-family: &quot;Segoe UI&quot;, SegoeUI, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 16px"> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">设置多会话 Windows 10 部署，使整个 Windows 10 操作系统获得可伸缩性</li> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">虚拟化 Microsoft 365 应用企业版，并对其进行优化，使其可在多用户虚拟场景中运行</li> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">为 Windows 7 虚拟桌面提供免费的扩展安全更新</li> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">将现有的远程桌面服务 (RDS) 和 Windows Server 桌面与应用迁移到任何计算机</li> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">虚拟化桌面和应用</li> <li style="box-sizing: inherit; margin-top: 0; margin-right: 0; margin-bottom: 0; padding-top: 0; padding-right: 0; padding-bottom: 0; outline: 0 inherit">使用统一的管理体验管理 Windows 10、Windows Server 和 Windows 7 桌面与应用</li> </ul> <p>注意重点：Azure 虚拟桌面不支持 RemoteApp 和桌面连接（RADC）客户端或者远程桌面连接（MSTSC）客户端。</p> <p>支撑的远程桌面客户端推荐：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE4QWr2"  target="_blank" rel="nofollow">Windows 桌面</a></p> <h2>二，正文</h2> <h3>1，创建虚拟网络</h3> <p>Azure Portal 首页点击 “Create a resource”，搜索 “virtual network”</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/2998f1ac534b0031c08ade1e6c5fcfb6.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>输入以下参数</p> <p>Resource group：“Web_Test_VM_RG”</p> <p>Name：“cnbateblogweb-avd-network”</p> <p>Region 选择：“West US”</p> <p>点击 “Next：IP Addresses &gt; ” 配置 IP 地址范围</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/971157a7e7f9f860beb48adb06c49897.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>关于 IP Address 输入以下参数</p> <p>IPv4 address space：“10.1.0.0/16”</p> <p><strong>Subnet</strong></p> <p>　　Subnet name：“avd-subnet01”</p> <p>　　Subnet address range："10.1.0.0/16"</p> <p>点击 “Review + create” 进行创建预览</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ec3ef825639cb2477f6a0a6962320f4c.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>等待校验完成后，点击 “Create” 进行创建</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/647c776fe0ec2abdb313a48bba74b93c.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>创建完成后，我们就可以跳转到改资源进行查看</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8a3b5718790c24955915a66203258dd8.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <h3>2，创建虚拟桌面</h3> <p>搜索 “Azure Virtual Desktop”，并点击图中所指的服务</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/af6e5691f2f4581273562ce389b660ef.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>首先我们需要创建 “host pool” 我们需要点击 “Create a host pool" 进行创建</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9a52f6f2449bf76bd4d1eec67f624635.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>输入以下参数</p> <p>Resource group 选择创建新的："Web_Test_ACD_RG"</p> <p>Host pool name：“cnbateblogweb-avdpool”</p> <p>Location：“West US”</p> <p>Validation environment 默认：“No”</p> <p><strong>Host pool type</strong></p> <p>　　Host pool type：“Personal”</p> <p>　　Assignment type：“Automatic”</p> <p>输入完以上参数后，点击 “Next: Virtual Machines &gt;” 设置虚拟机相关参数</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/36e5cc9e414bbe5be1fccf2e5d2f4dfa.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>编辑以下参数</p> <p>Add Azure virtual machines 选择：“Yes”</p> <p>Resource group：”Web_Test_VM_RG“</p> <p>Name prefix：”allen“</p> <p>Virtual machine location：”West US“</p> <p>Image：”Windows 11 Enterprise“</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/66dd268f9e35be756a1b2eb25088b682.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>Number of VMs：”1“</p> <p>OS disk type：”Standard SSD“</p> <p><strong>Network and security</strong></p> <p>　　virtual network："cnbateblogweb-avd-network"</p> <p>　　Subnet："avd-subnet01"</p> <p>　　Network security group："Basic"</p> <p>　　Public inbound ports："No"</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/76f9c0521e595c8f41995c836418bf38.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p><strong>Domain to join</strong></p> <p><strong></strong>Select which directory you would like to join 选择："Azure Active Directory"</p> <p><strong>Virtual Machine Adminqistrator account</strong></p> <p>　　Username："cnbateblogweb01"</p> <p>　　Password："XXXXXXXXXX"</p> <p>　　Confirm password："XXXXXXXXXX"</p> <p>点击 ”Review + create“ 创建预览</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3d84aa40a1a236fd6d4fdc7e79cd890b.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>验证完成后，点击 ”Create“ 进行创建</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b893d68235fbf08c9b48a054a00c5707.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>稍等片刻，等待创建完成后，点击跳转到改资源进行查看</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7a562a5c7cd268fcca2b9246c70bc6d1.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>可以看到我们创建好的&nbsp; host pools</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7852c0e820fa41e44d0282b23a5081b1.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>将用户分配到 Azure Virtual Desktop 的用户组种，选择 “Manage =》Application groups”，并点击进入</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8f974df289c23ed02bf0fc2d9e6df0c7.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>分配用户，选择 "Manage Assignments"，点击 “Add”</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/37e40554dc176da1fef4afc9b43b9ba3.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>找到之前创建好的用户 “zhangsan”，点击 ”Select“ 进行添加</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/586bd10eb8c9f544a5c4cff700276e5e.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>回到 Azure Virtual Desktop 开始设置桌面工作区。选择 ”Manage =》Workspaces“，点击 ”Create“ 进行创建</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/158ab45b4f9a9aa65669ab4597d79a53.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>输入以下参数</p> <p>Resource group 尽量选择和 Azure Virtual Desktop 的资源组保持一致：”Web_Test_AVD_RG“</p> <p>Workspace name：”cnbateblogweb-sp“</p> <p>Location：”West US“</p> <p>点击 ”Next：Application groups &gt;“ 应用组</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c2b3fa238a65c5623c832693e5e7eb7b.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>在应用程序注册组选项卡下，选择 ”Yes“，然后选择我们之前创建主机池时自动构建的应用程序组</p> <p>Register application groups：”Yes“</p> <p><strong>Host pool Application groups</strong></p> <p>　　Name：”cnbateblogweb-avdpool-DAG“</p> <p>点击 ”Review + create“ 创建预检验</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/96910a444ab94ef7cdb3933381702395.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>预校验完成后，点击 ”Create“ 进行创建</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b3458ac5bd037113c0ca1a85309caa1c.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>创建完成后，点击 ”Go to resource“ 跳转到该资源</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7553d4dacf741434019dcbf351c9929b.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <h3>3，连接 Azure Virtual Desktop</h3> <p>为了快速演示，我将使用 Web 远程方式，以下时登录链接：</p> <p><a title="https://rdweb.wvd.microsoft.com/arm/webclient" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://rdweb.wvd.microsoft.com/arm/webclient"  target="_blank" rel="nofollow"><span>https://rdweb.wvd.microsoft.com/arm/webclient</span></a></p> <p>应用组分配的用户账号进行登录</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a1e42845eebaf710f6ad1f47628beea1.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>点击后，提示我们输入用户名和密码，我们可以之前创建 host pools 的本地管理员账号和已分配虚拟机用户登录角色的用户进行登录</p> <p>登录成功后，我们就可以看到 Windows 11 的界面了</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3224c3105ea35b1c56376f5012e9f245.jpg" alt="Azure Virtual Desktop创建配置管理详解"></p> <p>Bingo，成功！！！</p> <h2>三，结尾</h2> <p><span style="box-sizing: border-box; -webkit-font-smoothing: antialiased; scroll-behavior: smooth; color: rgba(64, 66, 73, 1); font-family: Roboto, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif; font-size: 16px; vertical-align: inherit">RDSH 是 RDS（远程桌面服务）中的一个角色。</span><span style="box-sizing: border-box; -webkit-font-smoothing: antialiased; scroll-behavior: smooth; color: rgba(64, 66, 73, 1); font-family: Roboto, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif; font-size: 16px; vertical-align: inherit">这些类型的服务器用于托管用户远程访问的 Windows 桌面或应用程序。</span></p> <p>&nbsp;Azure Virtual Desktop 的另外一个问题就是费用，<span><span>如果我们想迁移和使用 Azure，或者只是</span><span>通过基础设施的本地管理，那么我们就得考虑怎么合理的计算费用问题了</span></span><em><span>。</span></em></p> <p>参考链接：什么是<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/zh-cn/azure/virtual-desktop/overview?WT.mc_id=AZ-MVP-5004191"  target="_blank" rel="nofollow">Azure Virtual Desktop</a></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-251.htm">Python 认识列表和元组</a></p>
                                        <p>下一个：<a href="/html/category/article-253.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">Vue &#8211; 缓存页面（keepAlive）</a></h4>
                <p>前言  项目主流程缓存优化，主流程页面（组件）切换时保持之前加载的状态，避免反复渲染影响页面性能，同时也可以很大程度上减少接口请求，减小服务器压力。  例如，我们将某个列表类组件内容滑动到第 100 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">C/C++编程：异常处理(exception handling)的原理</a></h4>
                <p>引入原因  问题：很久之前，C程序是使用错误码来处理错误的，那为什么C++还要引入异常呢？  回答：异常不能被忽略。  如果一个函数通过设置一个状态变量来返回错误码来表示一个异常状态，没有办法保证函数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">MySQL——union(合并结果集)、limit(获取部分数据)、关于MySQL中常用数据类型</a></h4>
                <p>博客目录 1、union(合并结果集) 2、limit(获取一张表中某部分数据) 3、表——创建表、删除表 4、关于MySQL中的数据类型  一、union(合并结果集)  将两个查询结果合并(可以是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Kerberos (五) &#8212;&#8212;&#8212; Hive 用户认证配置</a></h4>
                <p>目录  一、前置要求 二、配置认证 三、启动hiveserver2     一、前置要求 A、Hadoop 集群启动 Kerberos 认证 按照上述步骤为Hadoop集群开启Kerberos安全认证</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-210.htm">Code For Better 谷歌开发者之声—— 在 Windows 10 上对 Google Chrome 进行故障排除</a></h4>
                <p>???? 个人网站:【 海拥】【小霸王游戏机】 ???? 风趣幽默的前端学习课程：????28个案例趣学前端 ???? 想寻找共同学习交流、摸鱼划水的小伙伴，请点击【摸鱼学习交流群】 ???? 免费且</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">Java中时间类使用方法总结</a></h4>
                <p>//java.util.Date; Date类用法Date date = new Date();System.out.println(date);System.out.println("=======</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-242.htm">SpringSecurity核心服务详解</a></h4>
                <p>现在我们对 Spring Security 体系结构及其核心类有了一个高层次的概述，让我们更仔细地看一两个核心接口及其实现，特别是AuthenticationManager&nbsp;、UserDet</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">request和response——请求响应对象</a></h4>
                <p>请求对象——request 获取get请求的值  一次请求，返回一个响应。 地址栏：http://127.0.0.1:8000/day3/get_request?lan=python 问号：代表请求参</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">vue的自动化路由+分模块管理+路由懒加载</a></h4>
                <p>近期单独做了一个系统项目，项目不大但是页面太多了，为了后期维护管理容易，做了个自动化加载路由以及模块化的管理。在此记录一下。 直接撸代码 1.首先看目录  router下的index.js是路由配置文</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Springboot使用@Cacheable注解实现数据缓存</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cach</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>