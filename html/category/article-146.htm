<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-146.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Python学习笔记3.2-python内置函数大全 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Python学习笔记3.2-python内置函数大全</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>学习python不可避免的首先要了解python的内置函数，熟悉了这些以后可以给编程带来很大的方便。</p> <p><strong>1、数学运算类</strong></p> <table> <thead> <tr> <th>函数名</th> <th>函数功能</th> <th>备注</th> </tr> </thead> <tbody> <tr> <td>abs(x)</td> <td>求绝对值</td> <td>1、参数可以是整型，也可以是复数2、若参数是复数，则返回复数的模</td> </tr> <tr> <td>complex([real[, imag]])</td> <td>创建一个复数</td> <td></td> </tr> <tr> <td>divmod(a, b)</td> <td>分别取商和余数</td> <td>注意：整型、浮点型都可以</td> </tr> <tr> <td>float([x])</td> <td>将一个字符串或数转换为浮点数。</td> <td>如果无参数将返回0.0</td> </tr> <tr> <td>int([x[, base]])</td> <td>将一个字符转换为int类型</td> <td>base表示进制</td> </tr> <tr> <td>long([x[, base]])</td> <td>将一个字符转换为long类型</td> <td></td> </tr> <tr> <td>pow(x, y[, z])</td> <td>返回x的y次幂</td> <td></td> </tr> <tr> <td>range([start], stop[, step])</td> <td>产生一个序列</td> <td>默认从0开始</td> </tr> <tr> <td>round(x[, n])</td> <td>四舍五入</td> <td></td> </tr> <tr> <td>sum(iterable[, start])</td> <td>对集合求和</td> <td></td> </tr> <tr> <td>oct(x)</td> <td>将一个数字转化为8进制</td> <td></td> </tr> <tr> <td>hex(x)</td> <td>将整数x转换为16进制字符串</td> <td></td> </tr> <tr> <td>chr(i)</td> <td>返回整数i对应的ASCII字符</td> <td></td> </tr> <tr> <td>bin(x)</td> <td>将整数x转换为二进制字符串</td> <td></td> </tr> <tr> <td>bool([x])</td> <td>将x转换为Boolean类型</td> <td></td> </tr> </tbody> </table> <p><strong>2. 集合类操作</strong></p> <table> <thead> <tr> <th>函数名称</th> <th>函数功能</th> <th>备注</th> </tr> </thead> <tbody> <tr> <td>basestring()</td> <td>str和unicode的超类</td> <td>不能直接调用，可以用作isinstance判断</td> </tr> <tr> <td>format(value [, format_spec])</td> <td>格式化输出字符串</td> <td>格式化的参数顺序从0开始，如“I am {0},I like {1}”</td> </tr> <tr> <td>unichr(i)</td> <td>返回给定int类型的unicode</td> <td></td> </tr> <tr> <td>enumerate(sequence [, start = 0])</td> <td>返回一个可枚举的对象</td> <td>该对象的next()方法将返回一个tuple</td> </tr> <tr> <td>iter(o[, sentinel])</td> <td>生成一个对象的迭代器，第二个参数表示分隔符</td> <td></td> </tr> <tr> <td>max(iterable[, args…][key])</td> <td>返回集合中的最大值</td> <td></td> </tr> <tr> <td>min(iterable[, args…][key])</td> <td>返回集合中的最小值</td> <td></td> </tr> <tr> <td>dict([arg])</td> <td>创建数据字典</td> <td></td> </tr> <tr> <td>list([iterable])</td> <td>将一个集合类转换为另外一个集合类</td> <td></td> </tr> <tr> <td>set()</td> <td>set对象实例化</td> <td></td> </tr> <tr> <td>frozenset([iterable])</td> <td>产生一个不可变的set</td> <td></td> </tr> <tr> <td>str([object])</td> <td>转换为string类型</td> <td></td> </tr> <tr> <td>sorted(iterable[, cmp[, key[, reverse]]])</td> <td>队集合排序</td> <td></td> </tr> <tr> <td>tuple([iterable])</td> <td>生成一个tuple类型</td> <td></td> </tr> <tr> <td>xrange([start], stop[, step])</td> <td>xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一个xrange对象</td> <td>它的行为与列表相似，但是只在需要时才计算列表值，当列表很大时，这个特性能为我们节省内存</td> </tr> </tbody> </table> <p><strong>3. 逻辑判断</strong></p> <table> <thead> <tr> <th>函数名称</th> <th>函数功能</th> <th>备注</th> </tr> </thead> <tbody> <tr> <td>all(iterable)</td> <td>集合中的元素都为真的时候为真</td> <td>特别的，若为空串返回为True</td> </tr> <tr> <td>any(iterable)</td> <td>1、集合中的元素有一个为真的时候为真</td> <td>特别的，若为空串返回为False</td> </tr> <tr> <td>cmp(x, y)</td> <td>如果x &lt; y ,返回负数；x == y, 返回0；x &gt; y,返回正数</td> <td></td> </tr> </tbody> </table> <p><strong>4. 映射</strong></p> <table> <thead> <tr> <th>函数名称</th> <th>函数功能</th> <th>备注</th> </tr> </thead> <tbody> <tr> <td>callable(object)</td> <td>检查对象object是否可调用</td> <td>1、类是可以被调用的2、实例是不可以被调用的，除非类中声明了<strong>call</strong>方法</td> </tr> <tr> <td>classmethod()</td> <td>注解，用来说明这个方式是个类方法</td> <td>类方法即可被类调用，也可以被实例调用，类方法类似于Java中的static方法，类方法中不需要有self参数</td> </tr> <tr> <td>compile(source, filename, mode[, flags[, dont_inherit]])</td> <td>将source编译为代码或者AST对象</td> <td>代码对象能够通过exec语句来执行或者eval()进行求值。</td> </tr> <tr> <td>dir([object])</td> <td>1、不带参数时，返回当前范围内的变量、方法和定义的类型列表；2、带参数时，返回参数的属性、方法列表。3、如果参数包含方法<strong>dir</strong>()，该方法将被调用。当参数为实例时。4、如果参数不包含<strong>dir</strong>()，该方法将最大限度地收集参数信息delattr(object, name) 删除object对象名为name的属性</td> <td></td> </tr> <tr> <td>eval(expression [, globals [, locals]])</td> <td>计算表达式expression的值</td> <td></td> </tr> <tr> <td>execfile(filename [, globals [, locals]])</td> <td>用法类似exec()，不同的是execfile的参数filename为文件名，而exec的参数为字符串。</td> <td></td> </tr> <tr> <td>filter(function, iterable)</td> <td>构造一个序列，等价于[ item for item in iterable if function(item)]</td> <td>1、参数function：返回值为True或False的函数，可以为None2、参数iterable：序列或可迭代对象</td> </tr> <tr> <td>getattr(object, name [, defalut])</td> <td>获取一个类的属性</td> <td></td> </tr> <tr> <td>globals()</td> <td>返回一个描述当前全局符号表的字典</td> <td></td> </tr> <tr> <td>hasattr(object, name)</td> <td>判断对象object是否包含名为name的特性</td> <td></td> </tr> <tr> <td>hash(object)</td> <td>如果对象object为哈希表类型，返回对象object的哈希值</td> <td></td> </tr> <tr> <td>id(object)</td> <td>返回对象的唯一标识</td> <td></td> </tr> <tr> <td>isinstance(object, classinfo)</td> <td>判断object是否是class的实例</td> <td></td> </tr> <tr> <td>issubclass(class, classinfo)</td> <td>判断是否是子类</td> <td></td> </tr> <tr> <td>len(s)</td> <td>返回集合长度</td> <td></td> </tr> <tr> <td>locals()</td> <td>返回当前的变量列表</td> <td></td> </tr> <tr> <td>map(function, iterable, …)</td> <td>遍历每个元素，执行function操作</td> <td></td> </tr> <tr> <td>memoryview(obj)</td> <td>返回一个内存镜像类型的对象</td> <td></td> </tr> <tr> <td>next(iterator[, default])</td> <td>类似于iterator.next()</td> <td></td> </tr> <tr> <td>object()</td> <td>基类</td> <td></td> </tr> <tr> <td>property([fget[, fset[, fdel[, doc]]]])</td> <td>属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter</td> <td></td> </tr> <tr> <td>reduce(function, iterable[, initializer])</td> <td>合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推</td> <td></td> </tr> <tr> <td>reload(module)</td> <td>重新加载模块</td> <td></td> </tr> <tr> <td>setattr(object, name, value)</td> <td>设置属性值</td> <td></td> </tr> <tr> <td>repr(object)</td> <td>将一个对象变换为可打印的格式</td> <td></td> </tr> <tr> <td>slice（）</td> <td></td> <td></td> </tr> <tr> <td>staticmethod</td> <td>声明静态方法，是个注解</td> <td></td> </tr> <tr> <td>super(type[, object-or-type])</td> <td>引用父类</td> <td></td> </tr> <tr> <td>type(object)</td> <td>返回该object的类型</td> <td></td> </tr> <tr> <td>vars([object])</td> <td>返回对象的变量，若无参数与dict()方法类似</td> <td></td> </tr> <tr> <td>bytearray([source [, encoding [, errors]]])</td> <td>返回一个byte数组</td> <td>1、如果source为整数，则返回一个长度为source的初始化数组；2、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；3、如果source为可迭代类型，则元素必须为[0 ,255]中的整数；4、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.</td> </tr> <tr> <td>zip([iterable, …])</td> <td></td> <td></td> </tr> </tbody> </table> <p><strong>5.IO操作</strong></p> <table> <thead> <tr> <th>函数名称</th> <th>函数功能</th> <th>备注</th> </tr> </thead> <tbody> <tr> <td>file(filename [, mode [, bufsize]])</td> <td>file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，文件将被创建。</td> <td>添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode参数中，将允许对文件同时进行读写操作1、参数filename：文件名称。2、参数mode：’r’（读）、’w’（写）、’a’（追加）。3、参数bufsize：如果为0表示不进行缓冲，如果为1表示进行行缓冲，如果是一个大于1的数表示缓冲区的大小 。</td> </tr> <tr> <td>input([prompt])</td> <td>获取用户输入</td> <td>推荐使用raw_input，因为该函数将不会捕获用户的错误输入</td> </tr> <tr> <td>open(name[, mode[, buffering]])</td> <td>打开文件</td> <td></td> </tr> <tr> <td>print</td> <td>打印函数</td> <td></td> </tr> <tr> <td>raw_input([prompt])</td> <td>设置输入</td> <td>输入都是作为字符串处理</td> </tr> </tbody> </table> <p><strong>6. help()–帮助信息</strong></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-145.htm">springboot分层打包docker镜像</a></p>
                                        <p>下一个：<a href="/html/category/article-147.htm">ASP.NET Core使用EF创建关系模型_实用技巧</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2240.htm">webpack 执行npm run 时，因为版本依赖报的那些错</a></h4>
                <p>环境介绍 webpack 4.34.0 webpack-dev-server 3.7.0 报错 Error: invalid "instanceof" keyword value Promise   </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3730.htm">vue-v-model 常用修饰符</a></h4>
                <p>&lt;div id="app"&gt;     &lt;h1&gt;懒加载lazy&lt;/h1&gt;     &lt;h3&gt;不让输入框实时同步&lt;/h3&gt;     &lt;inp</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3122.htm">什么是https和http（https和http的区别）_在线工具</a></h4>
                <p>前言 因为工作需要，需要用到大量的关于 HTTP 协议的知识，目前掌握的关于 HTTP 请求以及协议的知识都是零散的，打算针对知识盲区系统的学习一些，理清概念。 为什么会出现 HTTPS 因为 HTT</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">Vue中 Vue.prototype 详解及使用</a></h4>
                <p>我们可能会在很多组件里用到数据/实用工具，但是不想污染全局作用域。这种情况下，可以通过在原型上定义它们使其在每个 Vue 的实例中可用。 1. 基本示例 在main.js中添加一个变量到 Vue.pr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1342.htm">import axios from ‘axios‘失效的问题</a></h4>
                <p>在搭建vue开发项目的时候，引入axios组件的时候，设置的全局axios总是访问不了，先以为是axios版本冲突问题，后来发现是项目打开层级的问题。 进入下层目录重新打开，解决了！</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2529.htm">Python 路径处理(os.path模块)</a></h4>
                <p>dest_file = r'D:\PythonProject\TestPython\test.py' # 实际存在 dest_fake_file = r'X:\PythonProject\TestPy</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1954.htm">FreeRTOS进阶之任务创建完全解析_操作系统</a></h4>
                <p>目录  前言 1.创建任务堆栈和任务TCB 2.初始化任务TCB必要的字段 3.初始化任务堆栈 4.进入临界区 5.当前任务数量增加1 6.为第一次运行做必要的初始化 7.更新当前正在运行的任务TCB</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1351.htm">Rabbit MQ 怎么保证可靠性、幂等性、消费顺序</a></h4>
                <p>RabbitMQ如何保证消息的可靠性 RabbitMQ消息丢失的三种情况 生产者弄丢消息时的解决方法  方法一：生产者在发送数据之前开启RabbitMQ的事务(采用该种方法由于事务机制，会导致吞吐量下</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2824.htm">如何使用线程池执行定时任务？</a></h4>
                <p>在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadSchedul</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">16</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>