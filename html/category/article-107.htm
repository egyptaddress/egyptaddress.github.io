<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-107.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>celery不能以守护进程方式运行自己，需要使用下面的工具：</p> <p><span style="font-size:14px; color:#ff0000"><strong>通用的初始化脚本&nbsp;</strong></span></p> <p>脚本代码:<a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/generic-init.d/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow">extra/generic-init.d/</a><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">&nbsp;</span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><span style="font-size:10px">这个目录包含了celery worker程序通用的初始化脚本，这些脚本应该运行在Linux,FreeBSD,OpenBSD和其它类UNIX平台。</span></span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><span style="font-size:10px"><br /></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>初始化脚本:celeryd</strong></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="color:#cc33cc"><strong>使用方法：</strong></span><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"><em>/etc/init.d/celeryd {start|stop|restart|status}</em></span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><strong><span style="color:#cc33cc">配置文件:</span></strong><span style="color:rgb(62,67,73); font-family:monospace; font-size:17px">/etc/default/celeryd</span></span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="font-family:monospace">要配置这个脚本能够正常运行你的worker,你至少需要配置worker启动后需要使用的目录（查找包含app的模块和你的配置模块）。</span></span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">worker守护化的配置脚本为/etc/default/celeryd,这是一个shell脚本。你可以为这个脚本添加环境变量和配置选项。添加了环境变量之后，你必须export它们(比如 export DISPLAY=":0")。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><br /></span></span></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>需要管理员权限</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">初始化脚本和配置脚本必须使用root用户。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">权限不足的用户不能够使用初始化脚本，他们可以使用celery multi工具（或者celery worker --detach）。</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"></span></span></p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi start worker1 <span class="se" style="color:rgb(102,102,102); font-weight:bold; background-color:rgb(255,240,240)">\</span> <span class="go" style="color:rgb(136,136,136)">    -A proj \</span> <span class="go" style="color:rgb(136,136,136)">    --pidfile="$HOME/run/celery/%n.pid" \</span> <span class="go" style="color:rgb(136,136,136)">    --logfile="$HOME/log/celery/%n%I.log"</span>  <span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi restart worker1 <span class="se" style="color:rgb(102,102,102); font-weight:bold; background-color:rgb(255,240,240)">\</span> <span class="go" style="color:rgb(136,136,136)">    -A proj \</span> <span class="go" style="color:rgb(136,136,136)">    --logfile="$HOME/log/celery/%n%I.log" \</span> <span class="go" style="color:rgb(136,136,136)">    --pidfile="$HOME/run/celery/%n.pid</span>  <span class="gp" style="color:rgb(198,93,9); font-weight:bold">$</span> celery multi stopwait worker1 --pidfile<span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"</span><span class="nv" style="color:rgb(153,102,51)">$HOME</span><span class="s2" style="background-color:rgb(255,240,240)">/run/celery/%n.pid"</span></pre> <p> </p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>配置举例</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">这是一个python工程的配置举例</span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">/etc/default/celeryd</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background-color:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Names of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)">#   most people will only start one node:</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"worker1"</span> <span class="c1" style="color:rgb(136,136,136)">#   but you can also start multiple and configure settings</span> <span class="c1" style="color:rgb(136,136,136)">#   for each in CELERYD_OPTS (see `celery multi --help` for examples):</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="worker1 worker2 worker3"</span> <span class="c1" style="color:rgb(136,136,136)">#   alternatively, you can specify the number of nodes to start:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES=10</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># App instance to use</span> <span class="c1" style="color:rgb(136,136,136)"># comment out this line if you don't use an app</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_APP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"proj"</span> <span class="c1" style="color:rgb(136,136,136)"># or fully qualified:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_APP="proj.tasks:app"</span>  <span class="c1" style="color:rgb(136,136,136)"># Where to chdir at start.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># Set logging level to DEBUG</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_LOG_LEVEL="DEBUG"</span>  <span class="c1" style="color:rgb(136,136,136)"># %n will be replaced with the first part of the nodename.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span>  <span class="c1" style="color:rgb(136,136,136)"># Workers should run as an unprivileged user.</span> <span class="c1" style="color:rgb(136,136,136)">#   You need to create this user manually (or you can choose</span> <span class="c1" style="color:rgb(136,136,136)">#   a user/group combination that already exists, e.g. nobody).</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_USER</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_GROUP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># If enabled pid and log directories will be created if missing,</span> <span class="c1" style="color:rgb(136,136,136)"># and owned by the userid/group configured.</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_CREATE_DIRS</span><span class="o" style="color:rgb(51,51,51)">=</span>1</pre> <p><span style="font-size:14px; color:#ff0000"><strong>使用登陆shell</strong></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">你可以通过使用登陆shell来继承CELERYD_USER环境变量。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="nv" style="color:rgb(153,102,51)">CELERYD_SU_ARGS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"-l"</span></pre> <p><span style="font-size:10px">注意，并不建议这样使用，只有当必须这样做时再这样使用。</span> </p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px"><br /></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">Django用户现在可以使用上面示例的模版，但是要确保定义celery app实例的模块也为<code class="xref std std-envvar docutils literal" style="text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px; font-weight:bold; background-color:transparent"><span class="pre"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://django.readthedocs.org/en/latest/topics/settings.html#envvar-DJANGO_SETTINGS_MODULE"  title="(in Django v1.11)" style="font-size:17px; color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px" rel="nofollow">DJANGO_SETTINGS_MODULE</a>设置</span></code>了一个默认值，可以参考:<span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">&nbsp;</span><a target="_blank" class="reference internal" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/django/first-steps-with-django.html#django-first-steps"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow"><span class="std std-ref">First steps with Django</span></a><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px">.</span></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px"><span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px"><br /></span></span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:14px; color:#ff0000"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"><strong>可用的选项</strong></span></span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_APP</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">使用的app实例(app参数的值).如果你还在使用老的API或者django-celery,你可以省略这个配置。</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_BIN</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">celery程序的绝对或者相对路径.比如:</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px"></span></span></span></p> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px"> <li style="line-height:1.4em"><code class="file docutils literal">celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal">/usr/local/bin/celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal">/virtualenvs/proj/bin/celery</code></li> <li style="line-height:1.4em"><code class="file docutils literal"><span class="pre">/virtualenvs/proj/bin/python</span>&nbsp;<span class="pre">-m</span>&nbsp;<span class="pre">celery</span></code></li> </ul> <p> CELERY_NODES </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">启动的节点列表（以空格分隔）</span></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">CELERY_OPTS</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">worker的其它命令行参数，通过celery -help查看参数列表。这个选项还支持multi的扩展语法用来配置私有节点的配置。通过celery multi --help来查看多节点的的配置举例。</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">CELERY_CHDIR</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px">启动后改变到的目录，默认为当前目录。</span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px"><span style="font-size:14px">CELERYD_PID_FILE</span></span><br /></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px">PID文件的全路径，默认为/var/run/celery/%n.pid</span></span></span></p> <p><span style="font-family:monospace; font-size:12px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_LOG_FILE</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">worker日志文件的全路径。默认为/var/log/celery/%n%I.log.注意：使用%I是重要的，因为prefork池中的多个进程如果使用相同的日志文件将会产生竞争。</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">CELERY_LOG_LEVEL</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">worker的日志级别，默认为INFO</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYD_USER</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行worker的用户，默认为当前用户</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYD_GROUP</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行worker的组，默认为当前组</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_DIRS</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建目录（日志目录和pid文件目录）。默认只在指定了logfile/pidfile时创建目录。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_RUNDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建pidfile目录，默认只在指定了pidfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_LOGDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建logfile目录，默认只在指定logfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><br /></span></span></p> <p><span style="font-family:monospace; color:#ff0000"><span style="line-height:23.8px"><strong>初始化脚本：celerybeat</strong></span></span></p> <p><span style="font-family:Optima,Segoe,Segoe UI,Candara,Calibri,Arial,sans-serif"><span style="font-size:10px"><span style="color:#cc33cc"><strong>使用方法:&nbsp;</strong></span></span></p> <p></span> </p> <table class="docutils field-list" style="font-size:17px; color:rgb(62,67,73); border:none; border-collapse:collapse; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <tbody> <tr class="field-odd field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)"><cite>/etc/init.d/celerybeat {start|stop|restart}</cite></td> </tr> </tbody> </table> <p><span style="color:#cc33cc"><strong><br /> 配置文件:</strong></span></p> <table class="docutils field-list" style="border:none; border-collapse:collapse; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"> <tbody> <tr class="field-even field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)"> <code class="file docutils literal">/etc/default/celerybeat</code>&nbsp;or&nbsp;<code class="file docutils literal">/etc/default/celeryd</code> </td> </tr> </tbody> </table> <p><span style="font-size:14px; color:#ff0000"><strong>配置举例：</strong></span></p> <p>这是一个python工程的配置举例</p> <p>/etc/default/celerybeat</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># App instance to use</span> <span class="c1" style="color:rgb(136,136,136)"># comment out this line if you don't use an app</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_APP</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"proj"</span> <span class="c1" style="color:rgb(136,136,136)"># or fully qualified:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_APP="proj.tasks:app"</span>  <span class="c1" style="color:rgb(136,136,136)"># Where to chdir at start.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYBEAT_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra arguments to celerybeat</span> <span class="nv" style="color:rgb(153,102,51)">CELERYBEAT_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--schedule=/var/run/celery/celerybeat-schedule"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span><br /> <br /> 你需要使用上面的配置模版，但是要保证DJANGO_SETTINGS_MODULE变量已经设置（而且export）,还有CELERYD_CHDIR在工程目录设置： </p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="nb" style="color:rgb(0,112,32)">export</span> <span class="nv" style="color:rgb(153,102,51)">DJANGO_SETTINGS_MODULE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"settings"</span>  <span class="nv" style="color:rgb(153,102,51)">CELERYD_CHDIR</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/MyProject"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>可用的选项</strong></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERY_APP</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">使用的app实例(app参数的值).</span></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERYBEAT_OPTS</span></span></span></p> <p>celery beat的附加参数，通过celery beat --help查看完整的选项列表.</p> <p></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px"><span style="font-size:14px">CELERYBEAT_PID_FILE</span></span><br /></span></span></p> <p><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:10px"><span style="line-height:23.8px"><span style="font-family:monospace; line-height:23.8px">PID文件的全路径，默认为/var/run/celeryd.pid</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; line-height:23.8px">CELERYBEAT_LOG_FILE</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">日志文件的全路径。默认为/var/log/celeryd.log.</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"><span style="font-size:10px">CELERYBEAT_LOG_LEVEL</span></span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">日志级别，默认为INFO</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYBEAT_USER</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行beat的用户，默认为当前用户</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERYBEAT_GROUP</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">运行beat的组，默认为当前组</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_DIRS</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建目录（日志目录和pid文件目录）。默认只在指定了logfile/pidfile时创建目录。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_RUNDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建pidfile目录，默认只在指定了pidfile位置时创建。</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">CELERY_CREATE_LOGDIR</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px">总是创建logfile目录，默认只在指定logfile位置时创建。</span></span></p> <p></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>问题排查</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">如果你不能让初始化脚本正常运行，你可以尝试以详细模式来运行:</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">#</span> sh -x /etc/init.d/celeryd start</pre> <p><span style="font-size:10px">这会显示一些为什么不能运行的的提示信息</span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px">如果worker启动时显示ok，但是很快就退出了，这样日志文件中不会有任何信息，可能启动过程中有错误。但是以守护进程方式运行时，标准输出被关闭了，你就看不到任何信息了。如果遇到这种情况，你可以使用C_FAKEFORK环境变量来跳过守护进程方式：</span></span></p> <p><span style="font-family:monospace"><span style="line-height:23.8px"></span></span></p> <pre style="font-size:0.9em; font-weight:bold; color:rgb(62,67,73); overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; background-color:rgb(240,255,235)"><span class="gp" style="color:rgb(198,93,9); font-weight:bold">#</span> <span class="nv" style="color:rgb(153,102,51)">C_FAKEFORK</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="m" style="color:rgb(102,0,238); font-weight:bold">1</span> sh -x /etc/init.d/celeryd start</pre> <p><span style="font-size:10px">这样你就可以看到错误了。</span> </p> <p><span style="font-size:10px; font-family:monospace; line-height:23.8px">通常情况下，错误是由于读或者写文件权限不足造成的，也有可能是配置模块，用户模块或者第三库中有语法错误，甚至是celery自身的错误（如果你发现了bug,请报告它)<br /></span></p> <p><span style="font-size:10px; font-family:monospace; line-height:23.8px"><br /></span></p> <p><span style="font-family:monospace; font-size:14px; color:#ff0000"><span style="line-height:23.8px"><strong>使用systemd</strong></span></span></p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"></span></span></p> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px; color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/systemd/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/systemd/</a></li> </ul> <p><span style="color:#cc33cc"><strong>使用方法:</strong></span><br /> <span style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px"><em>systemctl {start|stop|restart|status} celery.service</em></span> </p> <p><span style="font-family:monospace; font-size:10px"><span style="line-height:23.8px"><span style="font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"><span style="color:#cc33cc"><strong>配置文件:</strong></span><br /></span></span></span> </p> <table class="docutils field-list" id="generic-systemd-celery" style="font-style:italic; font-size:17px; color:rgb(62,67,73); border:none; border-collapse:collapse; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <tbody> <tr class="field-even field"> <td class="field-body" style="padding:0px; border:1px solid rgb(136,136,136)">/etc/conf.d/celery</td> </tr> </tbody> </table> <p></p> <p><span style="color:#cc33cc"><strong>服务文件:</strong></span>celery.service</p> <p>这是一个systemd文件的举例:</p> <p>/etc/systemd/system/celery.service:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="o" style="color:rgb(51,51,51)">[</span>Unit<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">Description</span><span class="o" style="color:rgb(51,51,51)">=</span>Celery Service <span class="nv" style="color:rgb(153,102,51)">After</span><span class="o" style="color:rgb(51,51,51)">=</span>network.target  <span class="o" style="color:rgb(51,51,51)">[</span>Service<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">Type</span><span class="o" style="color:rgb(51,51,51)">=</span>forking <span class="nv" style="color:rgb(153,102,51)">User</span><span class="o" style="color:rgb(51,51,51)">=</span>celery <span class="nv" style="color:rgb(153,102,51)">Group</span><span class="o" style="color:rgb(51,51,51)">=</span>celery <span class="nv" style="color:rgb(153,102,51)">EnvironmentFile</span><span class="o" style="color:rgb(51,51,51)">=</span>-/etc/conf.d/celery <span class="nv" style="color:rgb(153,102,51)">WorkingDirectory</span><span class="o" style="color:rgb(51,51,51)">=</span>/opt/celery <span class="nv" style="color:rgb(153,102,51)">ExecStart</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi start $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  -A $CELERY_APP --logfile=${CELERYD_LOG_FILE} \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --pidfile=${CELERYD_PID_FILE} $CELERYD_OPTS'</span> <span class="nv" style="color:rgb(153,102,51)">ExecStop</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi stopwait $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --pidfile=${CELERYD_PID_FILE}'</span> <span class="nv" style="color:rgb(153,102,51)">ExecReload</span><span class="o" style="color:rgb(51,51,51)">=</span>/bin/sh <span class="s1" style="background-color:rgb(255,240,240)">'${CELERY_BIN} multi restart $CELERYD_NODES \</span> <span class="s1" style="background-color:rgb(255,240,240)">  -A $CELERY_APP --pidfile=${CELERYD_PID_FILE} --logfile=${CELERYD_LOG_FILE} \</span> <span class="s1" style="background-color:rgb(255,240,240)">  --loglevel="${CELERYD_LOG_LEVEL}" $CELERYD_OPTS'</span>  <span class="o" style="color:rgb(51,51,51)">[</span>Install<span class="o" style="color:rgb(51,51,51)">]</span> <span class="nv" style="color:rgb(153,102,51)">WantedBy</span><span class="o" style="color:rgb(51,51,51)">=</span>multi-user.target</pre> <p> 当你将上面的文件放到/etc/systemd/system目录后，你需要运行systemctl daemon-reload来让systemd识别这个文件。在你修改了这个文件后，你也需要重新运行这个命令。 </p> <p>要配置用户，组,chdir等配置，请修改配置文件中的User,Group,WorkingDirectory选项。</p> <p>你还可以使用systemd-tmpfiles来创建工作目录（用于日志和pid）</p> <p>文件:/etc/tmpfiles.d/celery.conf:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)">d /var/run/celery <span class="m" style="color:rgb(102,0,238); font-weight:bold">0755</span> celery celery - d /var/log/celery <span class="m" style="color:rgb(102,0,238); font-weight:bold">0755</span> celery celery -</pre> <p> </p> <p><span style="font-size:14px; color:#ff0000"><strong>配置举例</strong></span></p> <p>下面是一个python工程的配置举例</p> <p>/etc/conf.d/celery:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Name of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)"># here we have a single node</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"w1"</span> <span class="c1" style="color:rgb(136,136,136)"># or we could have three nodes:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="w1 w2 w3"</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute or relative path to the 'celery' command:</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/usr/local/bin/celery"</span> <span class="c1" style="color:rgb(136,136,136)">#CELERY_BIN="/virtualenvs/def/bin/celery"</span>  <span class="c1" style="color:rgb(136,136,136)"># How to call manage.py</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_MULTI</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"multi"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># - %n will be replaced with the first part of the nodename.</span> <span class="c1" style="color:rgb(136,136,136)"># - %I will be replaced with the current child process index</span> <span class="c1" style="color:rgb(136,136,136)">#   and is important when using the prefork pool to avoid race conditions.</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span></pre> <p><span style="font-size:14px; color:#ff0000"><strong>Django配置举例</strong></span> </p> <p>下面是一个使用django-celery的配置举例:</p> <pre style="overflow-x:auto; overflow-y:hidden; font-family:Consolas,Menlo,'Deja Vu Sans Mono','Bitstream Vera Sans Mono',monospace; font-size:0.9em; padding:7px 10px; margin-top:15px; margin-bottom:15px; border:1px solid rgb(199,236,184); line-height:1.3em; color:rgb(62,67,73); background:rgb(240,255,235)"><span class="c1" style="color:rgb(136,136,136)"># Name of nodes to start</span> <span class="c1" style="color:rgb(136,136,136)"># here we have a single node</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_NODES</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"w1"</span> <span class="c1" style="color:rgb(136,136,136)"># or we could have three nodes:</span> <span class="c1" style="color:rgb(136,136,136)">#CELERYD_NODES="w1 w2 w3"</span>  <span class="c1" style="color:rgb(136,136,136)"># Absolute path to "manage.py"</span> <span class="nv" style="color:rgb(153,102,51)">CELERY_BIN</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/opt/Myproject/manage.py"</span>  <span class="c1" style="color:rgb(136,136,136)"># How to call manage.py</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_MULTI</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"celery multi"</span>  <span class="c1" style="color:rgb(136,136,136)"># Extra command-line arguments to the worker</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_OPTS</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"--time-limit=300 --concurrency=8"</span>  <span class="c1" style="color:rgb(136,136,136)"># - %n will be replaced with the first part of the nodename.</span> <span class="c1" style="color:rgb(136,136,136)"># - %I will be replaced with the current child process index</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_LOG_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/log/celery/%n%I.log"</span> <span class="nv" style="color:rgb(153,102,51)">CELERYD_PID_FILE</span><span class="o" style="color:rgb(51,51,51)">=</span><span class="s2" style="background-color:rgb(255,240,240)">"/var/run/celery/%n.pid"</span></pre> <p> 通过在celery.services里使用环境变量来添加类似DJANGO_SETTINGS_MODULE的环境变量。 </p> <p><span style="font-size:14px; color:#ff0000"><strong><br /></strong></span></p> <p><span style="font-size:14px; color:#ff0000"><strong>以超级用户(root)身份运行worker:</strong></span></p> <p>以超级用户身份运行worker是一个非常危险的举动。总会有一种解决方案来避免使用root。Celery在用pickle作消息序列化时可能运行任意的代码----------这很危险，尤其是用root用户时。</p> <p>默认情况下,celery不会用root用户运行worker.相关的错误信息在日志可能不可见，除非你使用了C_FAKEFORK。</p> <p>使用C_FORCE_ROOT来强制celery使用root用户来运行worker。</p> <p>当使用C_FORCE_ROOT来运行worker时，可能会出现"OK"后直接退出且没有任何错误的情况。这可能是由于不经意间使用root用户运行工程在一个新的开发环境或者生产环境。</p> <div class="section" id="supervisor" style="color:rgb(62,67,73); font-size:17px; font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif"> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pypi.python.org/pypi/supervisor/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">supervisor</a><a target="_blank" class="headerlink" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#supervisor"  title="Permalink to this headline" style="color:rgb(221,221,221); text-decoration:none; visibility:hidden; padding:0px 4px" rel="nofollow"></a><br /> </h2> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/supervisord/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/supervisord/</a></li> </ul> </div> <div class="section" id="launchd-os-x" style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px">  <span id="daemon-launchd"></span> </p> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="toc-backref" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#id23"  style="text-decoration:none" rel="nofollow"><code class="docutils literal" style="font-weight:bold; background-color:transparent"><span class="pre">launchd</span></code>&nbsp;(OS X)</a><a target="_blank" class="headerlink" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#launchd-os-x"  title="Permalink to this headline" style="color:rgb(221,221,221); text-decoration:none; visibility:hidden; padding:0px 4px" rel="nofollow"></a><br /> </h2> <ul class="simple" style="margin:10px 0px 10px 30px; padding:0px"> <li style="line-height:1.4em"><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/celery/celery/tree/3.1/extra/osx/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213)" rel="nofollow">extra/osx</a></li> </ul> </div> <div class="section" id="windows" style="color:rgb(62,67,73); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px">  <span id="daemon-windows"></span> </p> <h2 style="font-family:Futura,'Trebuchet MS',Arial,sans-serif; font-weight:normal; margin:30px 0px 10px; padding:0px; font-size:30.6px"> <a target="_blank" class="toc-backref" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://docs.celeryproject.org/en/master/tutorials/daemonizing.html#id24"  style="text-decoration:none" rel="nofollow">Windows</a><br /> </h2> </div> <p> 下面有一个非常好的外部教程: </p> <p><a target="_blank" class="reference external" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.calazan.com/windows-tip-run-applications-in-the-background-using-task-scheduler/"  style="color:rgb(52,134,19); text-decoration:none; border-bottom-width:1px; border-bottom-style:dashed; border-bottom-color:rgb(220,240,213); font-family:Optima,Segoe,'Segoe UI',Candara,Calibri,Arial,sans-serif; font-size:17px; line-height:23.8px" rel="nofollow">http://www.calazan.com/windows-tip-run-applications-in-the-background-using-task-scheduler/</a></p> <div style="top:2370px">   </div> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-106.htm">从0开始学VUE&#8211;使用Django+Vue 构建一个Web项目 登陆界面的实现</a></p>
                                        <p>下一个：<a href="/html/category/article-108.htm">nginx+tomcat负载均衡集群</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">SpringBoot实战数据访问整合Mybatis和Redis</a></h4>
                <p>前言 在开发中我们通常会对数据库的数据进行操作，SpringBoot对关系性和非关系型数据库的访问操作都提供了非常好的整合支持。SpringData是spring提供的一个用于简化数据库访问、支持云服</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-239.htm">ubuntu 18及以上版本配置IP的方法，你get了吗_在线工具</a></h4>
                <p>本文讲讲 Ubuntu 18 及以上版本配置 IP 的方法，为什么它值得一讲，因为以 Ubuntu 16 为首的版本的配置方法已经不适用了，如果你还不知道，那本文正好 get 一个新技能。 Ubunt</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在日常开发中，我学使用原生JavaScript获取元素的时候，最常用的方法就document.getEl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">指针的高级运用——指针进阶</a></h4>
                <p>文章目录  学习目标 1.1 动态内存分配   引子 1.1动态分配内存函数 1.2malloc函数 1.3 calloc 函数 1.4 realloc函数 1.5 free函数 1.6 动态内存编程</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-218.htm">利用Python实现RSA加密解密方法实例_python</a></h4>
                <p>目录  前言 一、安装模块 二、生成密钥对 三、加密 四、解密 五、完整代码 总结    前言  加密技术在数据安全存储，数据传输中发挥着重要作用，能够保护用户隐私数据安全，防止信息窃取。RSA是一种</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-237.htm">Spring Security教程（13）&#8212;- 验证码功能的实现</a></h4>
                <p>有三中方法可以实现验证码的功能 第一种是自定义一个filter，放在SpringSecurity过滤器之前，在用户登录的时候会先经过这个filter，然后在这个filter中实现对验证码进行验证的功能</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">Spring Security 一键接入验证码登录和小程序登录</a></h4>
                <p>最近实现了一个多端登录的Spring Security组件，用起来非常丝滑，开箱即用，可插拔，而且灵活性非常强。我觉得能满足大部分场景的需要。目前完成了手机号验证码和微信小程序两种自定义登录，加上默认</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></h4>
                <p>前几天有个老项目找到我，有多老呢？比我工作年限都长，见到这个项目我还得叫一声前辈。 这个项目目前使用非常稳定，十多年了没怎么更新过，现在客户想加一个小功能：在线预览Word文档。 首先想到的是用第三方</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>