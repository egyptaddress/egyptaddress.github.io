<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-197.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Nacos基本使用：注册中心、配置中心 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Nacos基本使用：注册中心、配置中心</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h1><a id="_0" rel="nofollow"></a>导语</h1> <ul> <li>注意：本文是建立在Nacos安装成功的基础上讲解。建议安装Nacos后，对照系统页面学习此文章。</li> <li>1、本文采取<code>Nacos 2.0.3</code>单例形式、服务单例形式来讲解，不涉及集群相关特定知识点。</li> <li>2、本文分为三部分来讲解Nacos的基本使用： <ul> <li>一、Nacos页面；</li> <li>二、Nacos作为注册中心使用；</li> <li>三、Nacos作为配置中心使用。</li> </ul> </li> <li>3、如有错误，请务必指出，感谢！</li> </ul> <h1><a id="Nacos_8" rel="nofollow"></a>一、Nacos页面</h1> <ul> <li>主要讲解Nacos的一些通用性配置，如用户、角色配置等。</li> </ul> <h2><a id="namespace_10" rel="nofollow"></a>命名空间（namespace）</h2> <ul> <li>【重要】：Nacos所有配置的最顶层分组，项目中需要用到该字段值。</li> <li>默认的<code>namespace</code>是<code>public</code>。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/ed64f8d6288840f9d9f82c6d121ac993.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> <li>命名空间ID：可以不填，会自动生成一个不规则值，也可以自定义，不能重复。</li> <li>命名空间名：自定义一个名称，帮助识别分组。</li> <li>描述：字面意思</li> </ul> <h3><a id="_17" rel="nofollow"></a>新增后检查</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/4089eede6885b7f7faed1a9a49f75572.jpg" alt="Nacos基本使用：注册中心、配置中心"></p> <ul> <li>命名空间新增后，随便点点页面，你会在很多地方可以找到该分组，如上图【配置管理】–【配置列表】中。</li> </ul> <h2><a id="Nacos_21" rel="nofollow"></a>Nacos用户相关配置</h2> <h3><a id="_22" rel="nofollow"></a>创建用户</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/3997ec3e7c0de284085824cb8fc02379.jpg" alt="Nacos基本使用：注册中心、配置中心"></p> <ul> <li>上图为Nacos系统页面，启动Nacos成功后，访问Nacos页面，默认的登录用户账号密码都是<code>nacos</code>。</li> <li>进入页面后，找到【权限控制】–【用户列表】，在该页面可以创建用户，只需要输入账号和密码即可创建。</li> </ul> <h3><a id="_27" rel="nofollow"></a>创建角色</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/0e0111dbd42dda0d14b0553c4d50a732.jpg" alt="Nacos基本使用：注册中心、配置中心"></p> <ul> <li>如图进入【权限控制】–【角色管理】，点击绑定角色弹出图中窗口，可以自定义一个新的角色名，也可以填已经存在的角色名，用户名必须是已存在的用户。</li> <li>注意：之所以说<code>可以自定义一个新的角色名，也可以填已经存在的角色名</code>的，因为这里即可以视为角色和用户的关系维护，也可以视为新增角色。</li> <li>一般我们对角色、用户的理解可能是：先有用户和角色，再给用户指定相应的角色。但是在这里不太一样，可以理解为角色创建时，即绑定了用户：必须先有用户，创建角色时，必须指定一个已存在的用户。</li> </ul> <h3><a id="_32" rel="nofollow"></a>权限管理</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/d80f2fbabec42f57dab3a00c7b6db423.jpg" alt="Nacos基本使用：注册中心、配置中心"></p> <ul> <li>如图进入【权限控制】–【权限管理】，即角色权限的维护页面。</li> <li>角色名：已存在的一个角色名</li> <li>资源：命名空间（namespace）</li> <li>动作：只读、只写、读写</li> </ul> <h1><a id="Nacos_38" rel="nofollow"></a>二、Nacos作为注册中心使用</h1> <h2><a id="_39" rel="nofollow"></a>创建项目</h2> <ol> <li>创建一个普通的SpringCloud项目，引入如下Nacos的maven依赖：</li> </ol> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></code></pre> <ol start="2"> <li>项目中创建<code>bootstrap.yml</code>配置文件，添加如下Yml配置：</li> </ol> <pre><code class="prism language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token key atrule">nacos</span><span class="token punctuation">:</span><span class="token comment"># 【注册中心】相关配置</span><span class="token key atrule">discovery</span><span class="token punctuation">:</span><span class="token comment"># 命名空间（大分组）</span><span class="token key atrule">namespace</span><span class="token punctuation">:</span> cjbgd_nacos<span class="token comment"># 分组名称，默认为【DEFAULT_GROUP】</span><span class="token key atrule">group</span><span class="token punctuation">:</span> CJBGD_DEV<span class="token comment"># 注册中心地址</span><span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span></code></pre> <ol start="3"> <li>启动类上增加注解：<code>@EnableDiscoveryClient</code></li> </ol> <h2><a id="_62" rel="nofollow"></a>启动项目</h2> <ul> <li>项目启动成功后，可以到Nacos页面中看到如下图的结果<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/25d416eb7151348ff674db0af10446cf.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> </ul> <h1><a id="Nacos_65" rel="nofollow"></a>三、Nacos作为配置中心使用</h1> <blockquote> <ul> <li>nacos作为配置中心，主要分两部分：1、配置管理；2、配置引用。</li> <li>配置管理：使用Nacos页面管理配置文件。</li> <li>配置引用：在项目中引用想要的配置。</li> </ul> </blockquote> <h2><a id="_69" rel="nofollow"></a>配置管理</h2> <h3><a id="_70" rel="nofollow"></a>新增配置文件</h3> <ul> <li>Nacos作为配置中心，必须先在Nacos管理页面新增一些配置。</li> </ul> <ol> <li>在【配置管理】–【配置列表】页面中，点击右侧加号，进入配置新增页面<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/c841c726932cec75805f6e054412f463.jpg" alt="Nacos基本使用：注册中心、配置中心"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/b15b3745832621ccdbf78171a97a35f0.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> <li>在新增页面中填写相应信息。 <ul> <li>Data ID：配置文件名。【如果在引用时，想要某个项目缺省式的引用到该配置文件，<code>Data ID</code>应该与服务的<code>spring.application.name</code>保持一致】</li> <li>Group：配置分组，默认为<code>DEFAULT_GROUP</code></li> <li>描述：描述</li> <li>配置格式：按需选择，现在一般都用<code>yaml</code>，即<code>yml</code></li> <li>配置内容：配置内容</li> </ul> </li> <li>填写示例<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/27ebc4f51005d0d94aead6b4b55edb5f.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> </ol> <h4><a id="_83" rel="nofollow"></a>注意</h4> <ul> <li>Nacos配置新增保存成功后，新增页面不会自动关闭，只会弹出成功提示框。即这个新增页面不会主动关闭，而且不会清空已填写的内容，会一直开着，直到你手动返回。</li> <li>如果你以为你新增失败了，再次点击保存，会弹出已存在同名配置的错误提示。</li> <li>且新增页面只能用来新增配置，新增后想要修改必须返回列表，点击对应配置后边的【编辑】按钮。</li> <li>这是个使用习惯的问题，对我来说刚使用的时候不是很友好，用多了也就无所谓了。</li> </ul> <h3><a id="_89" rel="nofollow"></a>配置导出</h3> <ul> <li>在微服务时代，微服务越多吗，配置文件也就越多，在开发环境、正式环境中，总不能每次改动都是都在Nacos的编辑页面修改配置吧，所以配置导入导出就很有必要。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/984768be001ca49744a425a951dcaa9f.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> <li>如上图，主要就是两种选择： <ul> <li>导出查询结果：根据查询条件，把查出的所有配置一起导出。</li> <li>导出选中的配置：导出选中的配置。</li> </ul> </li> <li>至于有个【新版】，我猜测是分页数据导出的优化？由于我的配置文件较少，没有做测试，有想法的可以试试。</li> <li>导出的是一个zip压缩包，打开可以看到导出文件如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/d5f4944148b11432511d26bf7d595931.jpg" alt="Nacos基本使用：注册中心、配置中心"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/716263e3502ed1ae31c2e70b2484a0f7.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> </ul> <h3><a id="_100" rel="nofollow"></a>配置导入</h3> <ul> <li>细心地同学看导出文件时候，会发现没有导出命名空间（namespace）的信息，这也意味着，导出的配置可以导入到任意的命名空间中，导入前点到想要导入的命名空间即可。</li> <li>如下图，先进入<code>cjbgd_nacos</code>的命名空间中，再点击【<code>导入配置</code>】，弹出的窗口会自动显示导入的空间信息，且不能更改。</li> <li>上传的文件，直接选中导出的压缩包即可。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220904/8f9f55fe72c0ffe16e1cf79cca089461.jpg" alt="Nacos基本使用：注册中心、配置中心"></li> </ul> <h2><a id="_105" rel="nofollow"></a>配置引用</h2> <h3><a id="_106" rel="nofollow"></a>引用配置</h3> <ul> <li>项目中想用配置中心，还要写相应配置，告诉项目我要用哪个配置中心、哪个配置文件。【没有希洛克打啥希洛克！？没有奥兹玛打啥奥兹玛！？突然感觉有点道理。。。】</li> <li>配置示例：</li> </ul> <pre><code class="prism language-yml"><span class="token key atrule">spring</span><span class="token punctuation">:</span><span class="token key atrule">cloud</span><span class="token punctuation">:</span><span class="token key atrule">nacos</span><span class="token punctuation">:</span><span class="token comment"># 【配置中心】相关配置</span><span class="token key atrule">config</span><span class="token punctuation">:</span><span class="token comment"># 命名空间（大分组）</span><span class="token key atrule">namespace</span><span class="token punctuation">:</span> cjbgd_nacos<span class="token comment"># 配置中心地址</span><span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">8848</span><span class="token comment"># 配置文件的data-id，默认使用服务名（spring.application.name）</span><span class="token comment">#name: gateway.yaml</span><span class="token comment"># 配置文件类型：test/json/xml/yaml/properties</span><span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml<span class="token comment"># 分组名称，默认为【DEFAULT_GROUP】</span><span class="token key atrule">group</span><span class="token punctuation">:</span> CJBGD_PRO<span class="token comment"># 自动刷新配置，默认为true</span><span class="token key atrule">refresh-enabled</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token comment"># 共享配置引用</span><span class="token key atrule">shared-configs</span><span class="token punctuation">:</span><span class="token comment"># 配置ID</span><span class="token punctuation">-</span><span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>datasource<span class="token punctuation">-</span>dbcp2<span class="token punctuation">-</span>pro.yaml<span class="token comment"># 配置组名称，默认为【DEFAULT_GROUP】</span><span class="token key atrule">group</span><span class="token punctuation">:</span> SHARED_PRO<span class="token key atrule">refresh</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token punctuation">-</span><span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>redis<span class="token punctuation">-</span>pro.yaml<span class="token key atrule">group</span><span class="token punctuation">:</span> SHARED_PRO<span class="token key atrule">refresh</span><span class="token punctuation">:</span><span class="token boolean important">true</span><span class="token punctuation">-</span><span class="token key atrule">data-id</span><span class="token punctuation">:</span> shared<span class="token punctuation">-</span>info<span class="token punctuation">-</span>pro.yaml<span class="token key atrule">group</span><span class="token punctuation">:</span> SHARED_PRO<span class="token key atrule">refresh</span><span class="token punctuation">:</span><span class="token boolean important">true</span></code></pre> <ul> <li>上边我把我用到的所有配置全部贴出来了，注释也都写的很明白，不做太细的讲解，只说几个个人理解：</li> </ul> <ol> <li><code>config.name</code>：应该填写配置中心中对应配置的<code>data-id</code>，可以缺省，缺省时默认使用本服务的<code>spring.application.name</code>的值。</li> <li><code>config.file-extension</code>：配置文件拓展名，会自动和<code>config.name</code>组合，用<code>.</code>拼接为一个<code>data-id</code>到配置中心查找配置。</li> <li><code>config.shared-configs</code>：声明引用哪些公共的配置。下边可以显式引用多个配置中心的配置文件。</li> <li><code>group</code>：默认值为<code>DEFAULT_GROUP</code>，当配置文件较多时，建议自定义一些<code>group</code>，对配置文件进行分组管理，使用起来也更加清晰明了。</li> </ol> <h3><a id="_146" rel="nofollow"></a>项目启动日志</h3> <pre><code class="prism language-shell"><span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.224  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.n.client.config.impl.ClientWorker<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>subscribe<span class="token punctuation">]</span> gateway+CJBGD_DEV+cjbgd_nacos<span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.224  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.nacos.client.config.impl.CacheData<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>add-listener<span class="token punctuation">]</span> ok,<span class="token assign-left variable">tenant</span><span class="token operator">=</span>cjbgd_nacos,<span class="token assign-left variable">dataId</span><span class="token operator">=</span>gateway,<span class="token assign-left variable">group</span><span class="token operator">=</span>CJBGD_DEV,<span class="token assign-left variable">cnt</span><span class="token operator">=</span><span class="token number">1</span><span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.225  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.n.client.config.impl.ClientWorker<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>subscribe<span class="token punctuation">]</span> gateway.yaml+CJBGD_DEV+cjbgd_nacos<span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.225  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.nacos.client.config.impl.CacheData<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>add-listener<span class="token punctuation">]</span> ok,<span class="token assign-left variable">tenant</span><span class="token operator">=</span>cjbgd_nacos,<span class="token assign-left variable">dataId</span><span class="token operator">=</span>gateway.yaml,<span class="token assign-left variable">group</span><span class="token operator">=</span>CJBGD_DEV,<span class="token assign-left variable">cnt</span><span class="token operator">=</span><span class="token number">1</span><span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.225  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.n.client.config.impl.ClientWorker<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>subscribe<span class="token punctuation">]</span> gateway-dev.yaml+CJBGD_DEV+cjbgd_nacos<span class="token number">2022</span>-04-12<span class="token number">11</span>:54:14.225  INFO<span class="token number">65808</span> ---<span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.nacos.client.config.impl.CacheData<span class="token builtin class-name">:</span><span class="token punctuation">[</span>fixed-localhost_8848-cjbgd_nacos<span class="token punctuation">]</span><span class="token punctuation">[</span>add-listener<span class="token punctuation">]</span> ok,<span class="token assign-left variable">tenant</span><span class="token operator">=</span>cjbgd_nacos,<span class="token assign-left variable">dataId</span><span class="token operator">=</span>gateway-dev.yaml,<span class="token assign-left variable">group</span><span class="token operator">=</span>CJBGD_DEV,<span class="token assign-left variable">cnt</span><span class="token operator">=</span><span class="token number">1</span></code></pre> <ul> <li>debug模式启动项目，观察启动日志会发现上面的日志，可以看到他在从配置中心加载哪些配置。</li> <li>但是没有发现<code>shared-configs</code>引用的相关日志，可能开发者任务缺省的形式才有必要打印日志，而<code>shared-configs</code>都是显式的将各种信息填写到配置文件中了，所以没必要打印日志。</li> </ul> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-196.htm">使用API访问开启kerberos集群下的HDFS</a></p>
                                        <p>下一个：<a href="/html/category/article-198.htm">js的二级菜单</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4369.htm">符合动物医院法定条件有哪些内容和要求呢（动物医院资质级别有哪些）</a></h4>
                <p>摘要：       今天给各位分享符合动物医院法定条件有哪些内容和要求呢的知识，其中也会对动物医院资质级别有哪些进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1926.htm">分享C++三种类型new类型的运算符使用详情_C 语言_</a></h4>
                <p>目录  1.new操作符 2.::operator new  2.1原始调用 2.2重载1 2.3重载2  3.place new     1.new操作符 new operator，平时用的最多的n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1925.htm">Spring Ioc源码分析系列&#8211;Ioc的基础知识准备_在线工具</a></h4>
                <p>Spring Ioc源码分析系列--Ioc的基础知识准备  本系列文章代码基于Spring Framework 5.2.x  Ioc的概念 在Spring里，Ioc的定义为The IoC Contai</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4292.htm">动物注射疫苗属于什么免疫（动物疫苗是什么意思）</a></h4>
                <p>摘要：       今天给各位分享动物注射疫苗属于什么免疫的知识，其中也会对动物疫苗是什么意思进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、狗狗要打哪些疫苗.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1939.htm">Springboot整合Spring Retry实现重试机制</a></h4>
                <p>在项目开发过程中，经常会有这样的情况：第一次执行一个操作不成功，考虑到可能是网络原因造成，就多执行几次操作，直到得到想要的结果为止，这就是重试机制。 Springboot可以通过整合Spring Re</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">feign post 参数对象不加@RequestBody的用法</a></h4>
                <p>最近在做小程序调支付服务接口的一个功能，这个feign接口传参真的太费事。 代码我就改造了下，不直接上真实代码。 比如小程序调支付服务的订单查询接口，支付服务那边的controller的订单查询方法是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">JavaScript如何将字符串转换为分层对象</a></h4>
                <p>假设我们有一种特殊的字符串，其中包含成对的字符，像这样- const&nbsp;str&nbsp;=&nbsp;"AABBCCDDEE"; 我们需要基于此字符串构造一个对象，该字符串应如下所示： co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1940.htm">vue2 自定义指令 实现全屏 、对话框拖拽</a></h4>
                <p>模块下载 用于全屏 npm i screenfull@5.1.0 -S   新建文件 新建directives.js文件，复制下面代码 import Vue from "vue";  // 全屏 im</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4095.htm">Docker基础 — 36、CMD指令和ENTRYPOINT指令的区别</a></h4>
                <p>目录  1、CMD指令和ENTRYPOINT指令说明 2、CMD指令只有最后一条生效的原因 3、CMD指令演示 4、ENTRYPOINT指令演示 5、总结   CMD指令和ENTRYPOINT指令作用</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>