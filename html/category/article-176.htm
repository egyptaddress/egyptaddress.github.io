<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-176.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>HTML页面的加载顺序 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">HTML页面的加载顺序</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <div style=""><span style="line-height:34.1248px">1.首先要了解页面的结构（包含哪些元素？哪些计算机语言<span style="color:#000000; font-style:normal; font-weight:normal">能够在页面中运行</span>&nbsp;）</span></div> <div style=""><span style="line-height:34.1248px">（1）html</span></div> <div style=""><span style="line-height:34.1248px"></span></p> <div style="margin:0px">   &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;不仅可以包含文字，还可以包含图片、链接，甚至音乐、程序等非文字元素的标记语言</div> <div style="margin:0px">   &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;（展示给用户，不能太单调，css）</div> <div style="margin:0px">   （2）css</div> <div style="margin:0px"><span style="color:inherit; line-height:34.1248px; font-size:1rem">是一种用来表现HTML的计算机语言，能使HTML页面变得更加美观</span></div> <div style="margin:0px"><span style="color:inherit; line-height:34.1248px; font-size:1rem">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;（要展示给用户光漂亮是不够的，用户还要能够动态的操作HTML页面，也就是让浏览器和用户之间的交互不仅仅是用户能浏览html中的内容，还要能对html页面操作，JavaScript）</span></div> <div style="margin:0px"><span style="color:inherit; line-height:34.1248px; font-size:1rem">（3）JavaScript</span></div> <div style="margin:0px"><span style="color:inherit; line-height:34.1248px; font-size:1rem"></span><span style="color:inherit; font-size:1rem; line-height:34.1248px">用来给HTML网页增加动态功能、<span style="color:#000000; font-style:normal; font-weight:normal">交互行为</span></span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;是一种解释性脚本语言（不进行预编译）</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;目前我们熟悉的语言Java、JavaScript、C、C++，都属于高级编程语言</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;①计算机不能理解高级语言，也</span><span style="color:inherit; font-size:1rem; line-height:34.1248px">就不能直接执行高级语言了</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;②</span><span style="color:inherit; font-size:1rem; line-height:34.1248px">计算机只能直接理解机器语言，所以任何语言，都必须将其<span style="color:#ff00">翻译</span>成机器语言，计算机才能运行高级语言编写的程序</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;③</span><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#0080">翻译的方式</span>有两种，一个是<span style="color:#ff00">编译</span>，一个是<span style="color:#ff00">解释</span>。</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1）编译：Java语言的运行先经过编译，但是JAVA语言的编译不是直接编译成计算机能识别的语言，而是编译成JAVA虚拟机能识别的class文件</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JAVA语言就是典型的翻译方式为编译的编程语言，</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 虽然不是编译成计算机能直接识别的语言，但是同其他以编译为翻译方式的高级编程语言的原理大体上是相同的。</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 最明显：C/C++，</span><span style="color:inherit; font-size:1rem; line-height:34.1248px">可以编译成二进制代码,以可执行文件的形式存在（</span><span style="color:inherit; font-size:1rem; line-height:34.1248px">exe文件）</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 都是先编译再运行，而且是一次编译到处运行，效率非常高。（只需要在第一次运行的时候编译一次）</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2）解释：</span><span style="color:inherit; font-size:1rem; line-height:34.1248px">解释性<span style="color:#000000; font-style:normal; font-weight:normal">脚本</span>语言的程序不需要编译，解释性<span style="color:#000000; font-style:normal; font-weight:normal">脚本</span>语言在运行程序的时候才翻译</span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">解释性<span style="color:#000000; font-style:normal; font-weight:normal">脚本</span>语言有专门的解释器来负责解释，不过每次都需要翻译，效率比较低。</span></span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; JavaScript&nbsp;就<span style="color:#000000; font-style:normal; font-weight:normal">是一种解释性脚本语言</span></span></span></span></div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;④JavaScript也有自己专门的解释器——JavaScript引擎，它存在于浏览器端，作为浏览器的一部分</span></span></div> <div style="margin:0px">   一句话：html（超文本标记语言）、css（层叠 样式表）、JavaScript脚本语言这三样东西在浏览器端相互配合、相辅相成形成了比较成熟的前端界面</div> <div style="margin:0px"><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">（4）这三样东西在HTML页面中的位置<br /></span></span></p> <pre><code class="language-html"></code></pre> <pre name="code" class="html"><code class="language-html">html的基本结构 &lt;html&gt;     &lt;head&gt;         &lt;!-- 头部中包含的标记是页面的标题、序言、说明等内容，它本身不作为内容来显示，但影响网页显示的效果 --&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;!-- 显示实际内容 --&gt;     &lt;/body&gt; &lt;/html&gt;</code></pre> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">①html：贯穿整个页面</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; ②css：三种声明方式</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;外联样式表：在head便签中 用link标签的href属性来引用后缀名为.css的css样式文件</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;内联样式表：在head标签下的style标签中，选择器 + 样式声明</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;内部样式表：在标签的style属性中添加css样式声明</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; ③JavaScript：在&lt;script&gt;标签中，可以在head标签中，也可以在body标签中（区别一会再说）</span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px">小总结：</span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px">以上内容总结出一句话：目前为止，在整个html页面中，可以写html代码、css样式、JS脚本语言</span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 位置：html贯穿整个页面，</span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;css可以定义在head头标签中，也可以在定义在html标签的属性中</span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">JavaScript定义在&lt;script&gt;标签中，<span style="color:#000000; font-style:normal; font-weight:normal">&lt;script&gt;标签既能在head标签中定义也能在body标签中定义</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">问题1：JQuery、EasyUI也可以写在html页面中</span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><em>jQuery</em>是一个快速、简洁的JavaScript框架（本质上也是<span style="color:#000000; font-style:normal; font-weight:normal">JavaScript</span>）</span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;EasyUI：类库中都是以 .css和.js结尾的文件。别人写好的css样式和<span style="color:#000000; font-style:normal; font-weight:normal">JavaScript（<span style="color:#000000; font-style:normal; font-weight:normal">本质上也是css和</span><span style="color:#000000; font-style:normal; font-weight:normal">JavaScript</span>）</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;所以追其根源，html页面中就是 html、css、JavaScript</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">问题2：jsp中能编写Java代码</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;jsp是特殊的Servlet，本质是Java，是Java就要运行在服务器端，浏览器是不能解析Java代码的</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;为什么用浏览器访问jsp时能在浏览器端显示呢?</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;分两种情况：</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;①对于html文件，当我们用浏览器访问时能自动解析，解析完毕就会将内容展示在浏览器上</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;②对于jsp，<span style="color:#000000; font-style:normal; font-weight:normal">当我们用浏览器访问时，</span>我们写好的jsp文件会生成.java文件，服务器运行JAVA文件，会把jsp中编写的html代码，发送给浏览器</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;可以这样理解，我们编写的HTML文件被浏览器直接解析</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;而<span style="color:#000000; font-style:normal; font-weight:normal">我们编写的</span>jsp，是借助JAVA代码将html代码发给浏览器，浏览器再解析</span></span></span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px"><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;本质上都是浏览器解析html代码（这里的html代码，包括刚才说的html、css、JavaScript）</span></span></span></div> <div style="">    2.加载顺序</div> <pre><code class="language-html">&lt;html&gt;     &lt;head&gt;         &lt;!-- 引用外部JS文件 --&gt;         &lt;script src="..........."&gt;&lt;/script&gt;         &lt;!--引用外部css样式 --&gt;         &lt;link href="............."/&gt;         &lt;style&gt;                ..............         &lt;/style&gt;         &lt;script&gt;                ..............         &lt;/script&gt;     &lt;/head&gt;     &lt;body&gt;         &lt;script&gt;                ..............         &lt;/script&gt;     &lt;/body&gt; &lt;/html&gt;</code></pre> <div style="">    从上到下运行，先<span style="color:#000000; font-style:normal; font-weight:normal">解析</span>head标签中的代码，</div> <div style="">    （1）head标签中会包含一些引用外部文件的代码，从开始运行就会下载这些被引用的外部文件</div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;当遇到script标签的时候</span></div> <div style="">    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;浏览器暂停解析（不是暂停下载），将控制权交给JavaScript引擎（解释器）</div> <div style="">    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />    如果<code class="highlighter-rouge" style="margin:8px 0px">&lt;script&gt;</code>标签引用了外部脚本，就下载该脚本，否则就直接执行，执行完毕后将控制权交给浏览器渲染引擎</div> <div style="">    （2）当head中代码解析完毕，会开始解析body中的代码</div> <div style="">    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;如果此时head中引用的外部文件没有下载完，将会继续下载</div> <div style="">    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;浏览器解析body代码中的元素，会按照head中声明一部分样式去解析</div> <div style="">    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;如果此时遇到body标签中的&lt;script&gt;，同样会<span style="color:#000000; font-style:normal; font-weight:normal">将控制权交给JavaScript引擎来解析JavaScript</span></div> <div style=""><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;解析<span style="color:#000000; font-style:normal; font-weight:normal">完毕后将控制权交还给浏览器渲染引擎。</span></span></div> <div style=""><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;当body中的代码全部执行完毕、并且整个页面的css样式加载完毕后，css会重新渲染整个页面的html元素。</span></span></div> <div style=""><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">（3）按照之前的描述，&lt;script&gt;写到body标签内靠后比较好，</span></span></div> <div style=""><span style="color:rgb(0,0,0); font-style:normal; font-weight:normal"><span style="color:rgb(0,0,0); font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;因为<span style="color:#000000; font-style:normal; font-weight:normal">JavaScript 会操作html元素，</span>&nbsp;如果在body加载完之前写<span style="color:rgb(0,0,0); font-style:normal; font-weight:normal">JavaScript&nbsp;会造成<span style="color:#000000; font-style:normal; font-weight:normal">JavaScript&nbsp;找不到页面元素</span></span></span></span></div> <div style=""><span style="color:#000000; font-style:normal; font-weight:normal"><span style="color:#000000; font-style:normal; font-weight:normal">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;但是我们经常将<span style="color:#000000; font-style:normal; font-weight:normal">&lt;script&gt;写到head中，body中不会有大量的js代码，body中的html代码结构会比较清晰</span></span></span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;window.onload： 等待页面中的所有内容加载完毕之后才会执行</span></div> <div style=""><span style="color:inherit; font-size:1rem; line-height:34.1248px">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$(document).ready()： 页面中所有DOM结构绘制完毕之后就能够执行</span></div> <div style=""><span style="font-size:1rem; line-height:34.1248px; color:inherit">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;可以这样理解：<span style="color:#000000; font-style:normal; font-weight:normal">window.onload 和<span style="color:#000000; font-style:normal; font-weight:normal">$(document).ready()/$(function(){}); 相当于 &nbsp;写在body 内 &nbsp;最靠后的<span style="color:#000000; font-style:normal; font-weight:normal">&lt;script&gt; 代码段</span></span></span></span></div> </div> </div> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-175.htm">Redis 缓存击穿（失效）、缓存穿透、缓存雪崩怎么解决？</a></p>
                                        <p>下一个：<a href="/html/category/article-177.htm">vue项目实现自定义tabBar组件的封装</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-211.htm">MaxCompute SQL函数详解 ODPS SQL函数详解之日期相关函数</a></h4>
                <p>MaxCompute SQL函数详解 ODPS SQL函数详解 日期函数  to_date函数  返回类型：datetime   语法：to_date(类型 参数1,类型 参数2); 	 to_dat</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">最大生成树Bad Cowtractors_在线工具</a></h4>
                <p>题目链接：http://poj.org/problem?id=2377；     仔细阅读题目，你会发现一个词-" as large as possible"，这个词的意思是尽可能最大；  来，我们翻</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Spark连接Hive，进行Hive数据表的读写操作</a></h4>
                <p>基础环境   Hadoop安装-1，hadoop安装-2  spark安装 Hive安装   配置  将Hive的conf目录下的hive-site-xml文件拷贝到spark的conf目录下； 将H</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">SpringBoot实战数据访问整合Mybatis和Redis</a></h4>
                <p>前言 在开发中我们通常会对数据库的数据进行操作，SpringBoot对关系性和非关系型数据库的访问操作都提供了非常好的整合支持。SpringData是spring提供的一个用于简化数据库访问、支持云服</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-223.htm">C语言：关键字&#8212;union（声明共用体类型）</a></h4>
                <p>C语言32个关键字 有32个关键字详细说明，还有跳转链接！   一、union 简介 union 是C语言中一种声明共用体的数据类型。union(共用体)在某种程度上类似struct(结构体)的一种数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Springboot 设置过滤器以及重复读取request里的body</a></h4>
                <p>需求：request的content-type为applciation/json，进入controller之前需要把body中的参数取出来做一次处理，然后和hearder中的另一个参数做对比。 思路：</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Springboot使用@Cacheable注解实现数据缓存</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cach</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-242.htm">SpringSecurity核心服务详解</a></h4>
                <p>现在我们对 Spring Security 体系结构及其核心类有了一个高层次的概述，让我们更仔细地看一两个核心接口及其实现，特别是AuthenticationManager&nbsp;、UserDet</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>