<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-244.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Spring按业务模块输出日志到不同的文件_在线工具 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Spring按业务模块输出日志到不同的文件_在线工具</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="一背景">一、背景</h1> <p>在我们开发的过程中，可能存在如下情况：<br /> 1、<code>有些时候我们需要调用第三方的接口</code>，一般情况下，调用接口，我们都会记录请求的入参和响应的。如果我们自己系统的日志和第三方的日志混合到一个日志文件中，那么可能查找日志就比较麻烦了。<code>那么我们是否可以将第三方系统的日志单独放到另外的文件中呢？</code></p> <p>2、或者有些时候我们系统需要进行数据迁移，如果某条数据迁移失败了，<code>是否单独放到一个日志文件中比较清晰呢？</code></p> <h1 id="二需求">二、需求</h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/1c0fc481fcfae2c81f9fc4485664be25.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /> 从上图中可以看到我们的需求比较简单</p> <p>1、系统启动日志和 <code>login</code> 模块日志记录到 <code>springboot-spring.log</code> 文件中。<br /> 2、第三方业务(<code>QQ</code>)模块的日志记录到 <code>springboot-qq.log</code>文件中。<br /> 3、第三方业务(<code>QQ</code>)模块提供了一个<code>login(loginName)</code>方法，<code>方法的入参loginName</code>需要记录到<code>springboot-qqLoginName.log</code>文件中，模拟<code>一、背景</code>中提到的数据迁移失败，记录失败的数据到单独的日志文件中。</p> <h1 id="三技术实现">三、技术实现</h1> <h2 id="1采用的日志框架">1、采用的日志框架</h2> <p>此处使用<code>logback</code>来完成日志的记录，因为<code>SpringBoot</code>应用程序默认的就是采用的logback来记录日志。</p> <h2 id="2如果实现分模块分文件记录日志">2、如果实现分模块、分文件记录日志</h2> <h3 id="1-编写appender这个可以简单的理解日志需要输出到哪里">1、 编写<code>appender</code>，这个可以简单的理解日志需要输出到哪里。</h3> <p>比如：</p> <pre><code class="language-xml">&lt;!-- 此处定义的日志输出到控制台 --&gt; &lt;appender name="stdout" class="ch.qos.logback.core.ConsoleAppender"&gt;     &lt;encoder&gt;         &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;      &lt;/encoder&gt; &lt;/appender&gt;  &lt;!-- 此处定义日志输出到 springboot-qq-日期.第几个.log 文件中 --&gt; &lt;appender name="qqAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;     &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;         &lt;fileNamePattern&gt;logs/springboot-qq-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;     &lt;/rollingPolicy&gt;     &lt;/appender&gt; </code></pre> <h3 id="2如何实现模块输出日志">2、如何实现模块输出日志</h3> <p>此处就需要我们来配置 <code>logger</code>了。logger的<code>name</code>属性指定到具体的全包名，然后引用我们上面定义的<code>appender</code>即可。</p> <pre><code class="language-xml">&lt;!-- 在QQ这个包下的日志单独使用 qqAppender 来输出 --&gt; &lt;logger name="com.huan.springboot.qq" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <p>配置logger，logger的name为需要单独生成文件的那个包的全包名，然后在里面引用上面定义的appender</p> <h3 id="3如果实现将loginname输出到指定的文件">3、如果实现将loginName输出到指定的文件</h3> <p>其实还是使用 <code>logger</code> 来实现，logger的<code>name</code>需要和 <code>LoggerFactory.getLogger("此处写具体logger的name的值")</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/424b74b3629fec6486ac6a01971ab162.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /><strong>注意：</strong><br /> 此处可能有一个坑，就是可能会丢失类名，那么我们如何进行解决呢？可以通过<code>MDC</code>来解决。</p> <pre><code class="language-xml">.... %X{CLASSNAME}#%method:%L -%msg%n </code></pre> <pre><code class="language-java">MDC.put("CLASSNAME", QQService.class.getName()); qqLoginName.info("登录用户:[{}]", loginName); </code></pre> <p>即<code>xml</code>中使用<code>%X{CLASSNAME}</code>，在<code>java</code>代码中使用<code>MDC</code>存入<code>CLASSNAME</code>的值。</p> <h1 id="四代码实现">四、代码实现</h1> <h2 id="1编写xml日志文件">1、编写xml日志文件</h2> <h3 id="1编写appender">1、编写appender</h3> <h4 id="1输出日志到控制台">1、输出日志到控制台</h4> <pre><code class="language-xml">&lt;appender name="stdout" class="ch.qos.logback.core.ConsoleAppender"&gt;     &lt;encoder&gt;         &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;         &lt;charset&gt;UTF-8&lt;/charset&gt;     &lt;/encoder&gt; &lt;/appender&gt; </code></pre> <h4 id="2编写login模板的日志">2、编写<code>login</code>模板的日志</h4> <pre><code class="language-xml">&lt;appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-spring-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h4 id="3编写qq模板的日志">3、编写<code>qq</code>模板的日志</h4> <pre><code class="language-xml">&lt;appender name="qqAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-qq-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %logger{50}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h4 id="4编写qq模块loginname单独输出到文件的日志">4、编写qq模块loginName单独输出到文件的日志</h4> <pre><code class="language-xml">&lt;appender name="qqLoginNameAppender" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;         &lt;rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;             &lt;fileNamePattern&gt;logs/springboot-qqLoginName-%d{yyyy-MM-dd}-.%i.log&lt;/fileNamePattern&gt;             &lt;maxHistory&gt;7&lt;/maxHistory&gt;             &lt;maxFileSize&gt;1MB&lt;/maxFileSize&gt;             &lt;totalSizeCap&gt;2GB&lt;/totalSizeCap&gt;         &lt;/rollingPolicy&gt;         &lt;encoder&gt;             &lt;pattern&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} [${PID:- }] [%thread] %-5level %X{CLASSNAME}#%method:%L -%msg%n&lt;/pattern&gt;             &lt;charset&gt;UTF-8&lt;/charset&gt;         &lt;/encoder&gt;     &lt;/appender&gt; </code></pre> <h3 id="2配置日志输出到具体位置">2、配置日志输出到具体位置</h3> <h4 id="1配置login模块">1、配置login模块</h4> <pre><code class="language-xml">&lt;root level="INFO"&gt;     &lt;appender-ref ref="stdout"/&gt;     &lt;appender-ref ref="file"/&gt; &lt;/root&gt; </code></pre> <p><code>login</code>模块属于我们自己的系统模块，此处使用 <code>root</code>标签来配置。</p> <h4 id="2配置qq模块">2、配置qq模块</h4> <pre><code class="language-xml">&lt;!-- 在QQ这个包下的日志单独使用 qqAppender 来输出 --&gt; &lt;logger name="com.huan.springboot.qq" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <p>此处<code>name</code>的值直接指定到了<code>qq</code>的全包名路径。</p> <h4 id="3配置loginname单独输出到文件">3、配置loginName单独输出到文件</h4> <pre><code class="language-xml">&lt;!-- 将所有的QQ登录名防止在另外的文件中 --&gt; &lt;logger name="qqLoginName" level="info" additivity="false"&gt;     &lt;appender-ref ref="qqLoginNameAppender"/&gt;     &lt;appender-ref ref="stdout"/&gt; &lt;/logger&gt; </code></pre> <h2 id="2编写qq模块的代码">2、编写QQ模块的代码</h2> <pre><code class="language-java">@Component public class QQService {      private static final Logger log = LoggerFactory.getLogger(QQService.class);      // getLogger("qqLoginName") 里的 qqLoginName 需要和 logback-spring.xml 中 logger的name一致，才会应用     private static final Logger qqLoginName = LoggerFactory.getLogger("qqLoginName");      public void login(String loginName) {         log.info("QQ业务: 用户:[{}]开始使用QQ来登录系统", loginName);          MDC.put("CLASSNAME", QQService.class.getName());         qqLoginName.info("登录用户:[{}]", loginName);     } } </code></pre> <h2 id="3编写login模块的代码">3、编写login模块的代码</h2> <pre><code class="language-java">@RestController public class LoginController {      private static final Logger log = LoggerFactory.getLogger(LoginController.class);      @Resource     private QQService qqService;      @GetMapping("login/{loginName}")     public String login(@PathVariable("loginName") String loginName) {         log.info("自己业务：用户:[{}]进行登录", loginName);         qqService.login(loginName);         return "ok";     } } </code></pre> <h1 id="五运行结果">五、运行结果</h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/d385f7ff93445e2ea107f444d624a537.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"><br /> 可以看到得到了我们期望的结果。</p> <h1 id="六完整代码">六、完整代码</h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/huan1993/spring-cloud-parent/tree/master/springboot/springboot-logger-split-file"  target="_blank"  rel="nofollow">https://gitee.com/huan1993/spring-cloud-parent/tree/master/springboot/springboot-logger-split-file</a></p> <h1 id="七一个小知识点">七、一个小知识点</h1> <p>在SpringBoot中，如果我们要覆盖默认的logback配置，推荐使用<code>logback-spring.xml</code>来配置。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220506/0b39cdd8382ecf1b88ef3d3802e9d03e.jpg" alt="Spring按业务模块输出日志到不同的文件_在线工具"></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-243.htm">tomcat服务器项目迁移到另外一台tomcat服务器</a></p>
                                        <p>下一个：<a href="/html/category/article-245.htm">Docker从入门到放弃(1) Docker简介与安装_在线工具</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-208.htm">数据类产品设计和实现思路_在线工具</a></h4>
                <p>数据类产品 对数据类产品(或服务)的需求是信息化发展到一定阶段的必然产物, 在信息化时代, 现实世界的大部分活动都已经(或即将)被投射成数据, 在这个大背景下, 数据产品的作用也越来越大.  对于所有</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">Kafka启动报错处理：/opt/module/kafka/bin/kafka-run-class.sh: 第 258 行:exec: java: 未找到</a></h4>
                <p>今天在学习Kafka的时候，写了个脚本，用于集群中kafka的群起。发现启动不了。???? 去掉-daemon参数后，继续启动，看到了它报的错误(日志中也有显示)。找不到java？？？ 看了相关资料后</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Redis的数据淘汰策略和数据过期后的删除策略</a></h4>
                <p>Redis的数据淘汰策略  volatile-lru（least recently used）：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰 vol</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">git 回滚到之前某一commit</a></h4>
                <p>git log git reset –hard 8ff24a6803173208f3e606e32dfcf82db9ac84d8</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Azure DevOps 中 Dapr项目自动部署流程实践</a></h4>
                <p>注：本文中主要讨论 .NET6.0项目在 k8s 中运行的 Dapr 的持续集成流程, 但实际上不是Dapr的项目部署到K8s也是相同流程，只是k8s的yaml配置文件有所不同 流程选择 基于 Dap</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">dataframe数据自动对齐</a></h4>
                <p>import pandas as pd import numpy as np  # Pandas 可以根据索引实现数据自动对齐，索引不重合的部分被置为NaN  df1 = pd.DataFrame(n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">Redis 如何保证数据库和缓存双写一致性？</a></h4>
                <p>前言  数据库和缓存（比如：redis）双写数据一致性问题，是一个跟开发语言无关的公共问题。尤其在高并发的场景下，这个问题变得更加严重。 我很负责的告诉大家，该问题无论在面试，还是工作中遇到的概率非常</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">2、java mybatis 命名空间</a></h4>
                <p>命名空间： 在之前版本的 MyBatis 中，命名空间（Namespaces）的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。 命名空间的作用有两个，一个是利用更长的全限定</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">通俗易懂：窗口函数案例详解</a></h4>
                <p>什么是窗口函数 相信很多人都比较熟悉 SQL 聚合函数的语法，比如 count(), sum(), max()等， 窗口函数类似聚合函数，不同的是窗口函数不改变原有的行。 窗口函数是数据分析和数据开发</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-237.htm">Vue3实现跑马灯效果_vue.js</a></h4>
                <p>本文实例为大家分享了Vue3实现跑马灯效果的具体代码，供大家参考，具体内容如下 先看效果：  html部分代码  &lt;div class="app"&gt;              &lt;p </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>