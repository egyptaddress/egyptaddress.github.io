<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-108.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>nginx+tomcat负载均衡集群 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">nginx+tomcat负载均衡集群</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>nginx+tomcat负载均衡集群</h3> <ul> <li><a href="#1_tomcat_7" rel="nofollow">1. tomcat简介</a></li> <li><a href="#2_tomcat_19" rel="nofollow">2. tomcat名称的由来</a></li> <li><a href="#3_nginxtomcat_23" rel="nofollow">3. nginx+tomcat负载均衡部署</a></li> <li> <ul> <li><a href="#31_nginx_53" rel="nofollow">3.1 部署nginx</a></li> <li><a href="#32_tomcat_168" rel="nofollow">3.2 部署tomcat</a></li> <li> <ul> <li><a href="#321_servicesystemctltomcat_203" rel="nofollow">3.2.1 编写service文件使用systemctl控制tomcat</a></li> </ul> </li> <li><a href="#33_tomcat2_253" rel="nofollow">3.3 tomcat2的机器也做同样的操作</a></li> <li><a href="#34_Tomcat_314" rel="nofollow">3.4 Tomcat相关配置说明</a></li> <li><a href="#35_tomcat_348" rel="nofollow">3.5 tomcat配置文件说明</a></li> <li><a href="#36_tomcat_375" rel="nofollow">3.6 tomcat主配置文件说明</a></li> <li><a href="#37_tomcat_server_418" rel="nofollow">3.7 tomcat server的组成部分</a></li> </ul> </li> </ul> </div> <p> 首先祝大家端午快乐</p> <p><strong>相信大家能来看这篇文章，说明对nginx和tomcat是有一定了解的，所以这里就不浪费大家时间了，不再过多的介绍nginx和tomcat了</strong></p> <p><em>大家要是不懂或者对nginx感兴趣可以去看我之前的博客。但是我对tomcat也不是很了解，但是我会在接下来的内容种尽我所能给大家讲一下tomca。</em></p> <h1> <a id="1_tomcat_7" rel="nofollow"></a>1. tomcat简介</h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html"  rel="nofollow">jdk下载地址</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://archive.apache.org/dist/tomcat/tomcat-9/"  rel="nofollow">tomca下载地址</a></p> <p>Tomcat是Apache 软件基金会的Jakarta 项目中的一个核心项目由Apache、Sun 和其他一些公司及个人共同开发而成。</p> <p>由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5 支持最新的Servlet 2.4 和JSP 2.0 规范。</p> <p>因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为比较流行的Web 应用服务器。</p> <p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。</p> <h1> <a id="2_tomcat_19" rel="nofollow"></a>2. tomcat名称的由来</h1> <p>Tomcat最初是由Sun的软件架构师詹姆斯·邓肯·戴维森开发的。后来他帮助将其变为开源项目，并由Sun贡献给了apache软件基金会。由于大部分开源软件项目O’Reilly都会出一本相关的书，并且将其封面设计成某个动物的素描，因此他希望将此项目以一个动物的名字命名。因此他希望这种动物能够自己照顾自己，最终他将其命名为tomcat。<br /> O’Reilly出版的介绍Tomcat的书籍的封面也被设计成了一个公猫的形象。而tomcat的logo兼吉祥物也被设计为一只公猫。</p> <h1> <a id="3_nginxtomcat_23" rel="nofollow"></a>3. nginx+tomcat负载均衡部署</h1> <p><strong>环境说明</strong></p> <table> <thead> <tr> <th>主机名</th> <th>IP地址</th> <th>系统</th> <th>软件版本</th> </tr> </thead> <tbody> <tr> <td>nginx</td> <td>192.168.182.142</td> <td>redhat8.2</td> <td>nginx-1.20.1</td> </tr> <tr> <td>tomcat1</td> <td>192.168.182.143</td> <td>redhat8.2</td> <td>tomcat-9.0.54</td> </tr> <tr> <td>tomcat2</td> <td>192.168.182.144</td> <td>redhat8.2</td> <td>tomcat-9.0.54</td> </tr> </tbody> </table> <p><strong>环境准备</strong><br /> // 以下操作三台主机都要做</p> <pre><code>[root@nginx ~]# systemctl disable --now firewalld  //关闭防火墙  [root@nginx ~]# systemctl status firewalld.service   //确认防火墙为关闭状态 ● firewalld.service - firewalld - dynamic firewall daemon    Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)    Active: inactive (dead)      Docs: man:firewalld(1)  [root@nginx ~]# vim /etc/selinux/config  //修改selinux状态  [root@nginx ~]# tail -8 /etc/selinux/config //关闭selinux SELINUX=disabled  //此处为disabled即可 # SELINUXTYPE= can take one of these three values: #     targeted - Targeted processes are protected, #     minimum - Modification of targeted policy. Only selected processes are protected.  #     mls - Multi Level Security protection. SELINUXTYPE=targeted </code></pre> <h2> <a id="31_nginx_53" rel="nofollow"></a>3.1 部署nginx</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://nginx.org/en/download.html"  rel="nofollow">nginx下载地址</a></p> <p>// 这里我就使用脚本部署nginx，下面是脚本</p> <pre><code>[root@nginx opt]# pwd /opt  [root@nginx opt]# mkdir packages  [root@nginx packages]# ls nginx-1.20.1.tar.gz  [root@nginx opt]# tree /opt/  //上传nginx脚本 /opt/ ├── nginx.sh └── packages     └── nginx-1.20.1.tar.gz  1 directory, 2 files  // 执行nginx脚本 #!/bin/bash route=/usr/local server=/usr/lib/systemd/system  id nginx &amp;&gt;/dev/null if [ $? -ne 0 ];then  useradd -r -M -s /sbin/nologin nginx fi  yum -y install pcre-devel pcre gcc gcc-c++ openssl-devel zlib zlib-devel make vim wget openssl openssl-devel gd-devel mkdir /var/log/nginx chown -R nginx.nginx /var/log/nginx if [ ! -d $route/nginx-1.20.1 ];then     tar xf packages/nginx-1.20.1.tar.gz -C $route fi  cd $route/nginx-1.20.1 if [ ! -d $route/nginx ];then     ./configure --prefix=/usr/local/nginx \         --user=nginx \         --group=nginx \         --with-debug \         --with-http_ssl_module \         --with-http_realip_module \         --with-http_image_filter_module \         --with-http_gunzip_module \         --with-http_gzip_static_module \         --with-http_stub_status_module \         --http-log-path=/var/log/nginx/access.log \         --error-log-path=/var/log/nginx/error.log     make &amp;&amp; make install fi  cd $server cat &gt; nginx.service &lt;&lt; EOF [Unit] Description=Nginx server daemon After=network.target   [Service] Type=forking ExecStart=/usr/local/nginx/sbin/nginx  ExecStop=/usr/local/nginx/sbin/nginx -s quit ExecReload=/bin/kill -HUP \$MAINPID  [Install] WantedBy=multi-user.target EOF  echo 'export PATH=/usr/local/nginx/sbin:$PATH' &gt; /etc/profile.d/nginx.sh source /etc/profile.d/nginx.sh  systemctl daemon-reload systemctl enable --now nginx.service if [ $? -eq 0 ];then     echo "nginx is ok" else     echo "nginx is error" fi  [root@nginx nginx]# systemctl status nginx.service   //查看nginx状态为开启状态 ● nginx.service - Nginx server daemon    Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)    Active: active (running) since Fri 2022-06-03 12:54:06 CST; 4min 45s ago   Process: 33707 ExecStart=/usr/local/nginx/sbin/nginx (code=exited, status=0/SUCCESS)  Main PID: 33708 (nginx)     Tasks: 2 (limit: 11301)    Memory: 2.7M    CGroup: /system.slice/nginx.service            ├─33708 nginx: master process /usr/local/nginx/sbin/nginx            └─33709 nginx: worker process  6月 03 12:54:06 nginx systemd[1]: Starting Nginx server daemon... 6月 03 12:54:06 nginx systemd[1]: Started Nginx server daemon </code></pre> <pre><code>// nginx的访问日志与错误日志的位置 [root@nginx nginx]# pwd /var/log/nginx  [root@nginx nginx]# ls access.log  error.log  // 除访问日志和错误日志外的其他文件位置 [root@nginx nginx]# pwd /usr/local/nginx  [root@nginx nginx]# ls client_body_temp  conf  fastcgi_temp  html  logs  proxy_temp  sbin  scgi_temp  uwsgi_temp </code></pre> <h2> <a id="32_tomcat_168" rel="nofollow"></a>3.2 部署tomcat</h2> <p>// 下载jdk包<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html"  rel="nofollow">jdk下载地址</a> 选择第六个下载</p> <pre><code> [root@tomcat1 opt]# ls jdk-8u202-linux-x64.tar.gz [root@tomcat1 opt]# tar zxf jdk-8u202-linux-x64.tar.gz -C /usr/local/  //解压到/usr/local目录  //配置jdk环境变量 [root@tomcat1 ~]# cat /etc/profile.d/jdk.sh  export JAVA_HOME=/usr/local/jdk1.8.0_202 export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar export PATH=$JAVA_HOME/bin:$PATH  [root@tomcat1 ~]# source /etc/profile.d/jdk.sh  //使用source使其生效  [root@tomcat1 ~]# java -version  //能看到版本号说明成功 java version "1.8.0_202" Java(TM) SE Runtime Environment (build 1.8.0_202-b08) Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode) </code></pre> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.54/bin/apache-tomcat-9.0.54.tar.gz"  rel="nofollow">tomcat9.0.54版本下载地址</a></p> <pre><code>// 下载tomcat包 [root@tomcat1 ~]# wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.54/bin/apache-tomcat-9.0.54.tar.gz -P /opt/  [root@tomcat1 opt]# tar zxf apache-tomcat-9.0.54.tar.gz -C /usr/local/  [root@tomcat1 local]# ln -s apache-tomcat-9.0.54/ tomcat9  //做个软链接方便后续的操作 </code></pre> <h3> <a id="321_servicesystemctltomcat_203" rel="nofollow"></a>3.2.1 编写service文件使用systemctl控制tomcat</h3> <pre><code>在我写完service启动tomcat时报错了，报错内容如下 6月 03 16:49:10 tomcat1 catalina.sh[2629]: Neither the JAVA_HOME nor the JRE_HOME environment variable is defined  //这个的意思时说没有JAVA_HOME和JRE_HOME这两个变量 6月 03 16:49:10 tomcat1 catalina.sh[2629]: At least one of these environment variable is needed to run this program  //这个的意思时说运行tomcat需要有这两个变量中的一个即可  // 解决措施如下 [root@tomcat1 bin]# pwd   /usr/local/tomcat9/bin   //这个是tomcat的安装目录  [root@tomcat1 bin]# vim setclasspath.sh #  Set JAVA_HOME or JRE_HOME if not already set, ensure any provided settings #  are valid and consistent with the selected start-up options and set up the #  endorsed directory. # ----------------------------------------------------------------------------- // 添加下面两行内容，这个是你的jdk的安装目录，根据自己的安装目录进行变化 export JAVA_HOME=/usr/local/jdk1.8.0_202 export JRE_HOME=/usr/local/jdk1.8.0_202/jre </code></pre> <p><code>这里建议，添加完环境变量后使用此命令[root@tomcat1 bin]# source setclasspath.sh重新读取一下</code></p> <pre><code>// 这个是service文件 [root@tomcat1 bin]# cat /usr/lib/systemd/system/tomcat.service  [Unit] Description=Tomcat server daemon After=network.target sshd-keygen.target  [Service] Type=forking ExecStart=/usr/local/tomcat9/bin/catalina.sh start ExecStop=/usr/local/tomcat9/bin/catalina.sh stop ExecReload=/bin/kill -HUP $MAINPID  [Install] WantedBy=multi-user.target  // 使用下面的命令刷新一下配置信息 [root@tomcat1 bin]# systemctl daemon-reload [root@tomcat1 bin]# systemctl enable tomcat  //设置开机自启  [root@tomcat1 bin]# systemctl status tomcat.service //启动成功 ● tomcat.service - Tomcat server daemon    Loaded: loaded (/usr/lib/systemd/system/tomcat.service; enabled; vendor preset: disabled)    Active: active (running) since Fri 2022-06-03 16:59:57 CST; 12min ago   Process: 2813 ExecStart=/usr/local/tomcat9/bin/catalina.sh start (code=exited, status=0/SUCCESS)  Main PID: 2819 (java)     Tasks: 19 (limit: 11301)    Memory: 101.0M </code></pre> <h2> <a id="33_tomcat2_253" rel="nofollow"></a>3.3 tomcat2的机器也做同样的操作</h2> <p><em>上面有下载jdk的地址这里就不写了</em></p> <pre><code>// 配置jdk的环境变量 [root@tomcat2 local]# cat /etc/profile.d/jdk.sh  export JAVA_HOME=/usr/local/jdk1.8.0_202 export CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar export PATH=$JAVA_HOME/bin:$PATH  // 重新加载一下使其生效 [root@tomcat2 local]# source /etc/profile.d/jdk.sh  // 看到版本号说明成功 [root@tomcat2 local]# java -version java version "1.8.0_202" Java(TM) SE Runtime Environment (build 1.8.0_202-b08) Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode) </code></pre> <pre><code>// 下载tomcat包 [root@tomcat2 ~]# wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.54/bin/apache-tomcat-9.0.54.tar.gz -P /opt/  // 解压tomcat包 [root@tomcat2 opt]# tar zxf apache-tomcat-9.0.54.tar.gz -C /usr/local/  // 做软连接，方便后面操作 [root@tomcat2 local]# ln -s apache-tomcat-9.0.54/ tomcat9  // 添加环境变量 [root@tomcat2 bin]# vim setclasspath.sh #  Set JAVA_HOME or JRE_HOME if not already set, ensure any provided settings #  are valid and consistent with the selected start-up options and set up the #  endorsed directory. # ----------------------------------------------------------------------------- export JAVA_HOME=/usr/local/jdk1.8.0_202 export JRE_HOME=/usr/local/jdk1.8.0_202/jre  // 编写service文件控制tomcat [root@tomcat2 tomcat9]# cat /usr/lib/systemd/system/tomcat.service  [Unit] Description=Tomcat server daemon After=network.target sshd-keygen.target  [Service] Type=forking ExecStart=/usr/local/tomcat9/bin/catalina.sh start ExecStop=/usr/local/tomcat9/bin/catalina.sh stop ExecReload=/bin/kill -HUP $MAINPID  [Install] WantedBy=multi-user.target  // 需要说明一下 执行完没问题之后请执行 source /etc/profile.d/nginx.sh //这样便可以使用nginx命令了 然后再执行下面两条命令 [root@tomcat2 bin]# systemctl daemon-reload  [root@tomcat2 bin]# systemctl enable tomcat </code></pre> <h2> <a id="34_Tomcat_314" rel="nofollow"></a>3.4 Tomcat相关配置说明</h2> <pre><code>// tomcat主目录 [root@tomcat2 tomcat9]# pwd /usr/local/tomcat9  [root@tomcat2 tomcat9]# ll 总用量 128 drwxr-x--- 2 root root  4096 6月   3 17:50 bin   -rw-r----- 1 root root 18970 9月  28 2021 BUILDING.txt drwx------ 3 root root   254 6月   3 17:49 conf -rw-r----- 1 root root  6210 9月  28 2021 CONTRIBUTING.md drwxr-x--- 2 root root  4096 6月   3 17:38 lib -rw-r----- 1 root root 57092 9月  28 2021 LICENSE drwxr-x--- 2 root root   197 6月   3 17:49 logs -rw-r----- 1 root root  2333 9月  28 2021 NOTICE -rw-r----- 1 root root  3372 9月  28 2021 README.md -rw-r----- 1 root root  6898 9月  28 2021 RELEASE-NOTES -rw-r----- 1 root root 16507 9月  28 2021 RUNNING.txt drwxr-x--- 2 root root    30 6月   3 17:38 temp drwxr-x--- 7 root root    81 9月  28 2021 webapps drwxr-x--- 3 root root    22 6月   3 17:49 work </code></pre> <table> <thead> <tr> <th>目录</th> <th>作用</th> </tr> </thead> <tbody> <tr> <td>bin</td> <td>存放linux或windows平台上启动和关闭tomca的脚本文件</td> </tr> <tr> <td>conf</td> <td>存放tomcat服务器的各种全局配置文件，其中最重要的是server.xml和web.xml</td> </tr> <tr> <td>lib</td> <td>存放tomcat运行时所需要的库文件(JARS)</td> </tr> <tr> <td>logs</td> <td>存放tomcat执行时的LOG文件</td> </tr> <tr> <td>webapps</td> <td>tomcat的主要web发布目录(包括应用程序示例)</td> </tr> <tr> <td>work</td> <td>存放jsp编译后产生的class文件</td> </tr> <tr> <td>temp</td> <td>用来存放Tomcat执行过程中产生的临时文件。清除此文件不会影响Tomcat服务器。</td> </tr> </tbody> </table> <h2> <a id="35_tomcat_348" rel="nofollow"></a>3.5 tomcat配置文件说明</h2> <pre><code>[root@tomcat2 conf]# ll 总用量 232 drwxr-x--- 3 root root     23 6月   3 17:49 Catalina -rw------- 1 root root  13052 9月  28 2021 catalina.policy -rw------- 1 root root   7276 9月  28 2021 catalina.properties -rw------- 1 root root   1400 9月  28 2021 context.xml -rw------- 1 root root   1149 9月  28 2021 jaspic-providers.xml -rw------- 1 root root   2313 9月  28 2021 jaspic-providers.xsd -rw------- 1 root root   4144 9月  28 2021 logging.properties -rw------- 1 root root   7589 9月  28 2021 server.xml -rw------- 1 root root   2756 9月  28 2021 tomcat-users.xml -rw------- 1 root root   2558 9月  28 2021 tomcat-users.xsd -rw------- 1 root root 172359 9月  28 2021 web.xm </code></pre> <table> <thead> <tr> <th>目录或文件</th> <th>作用</th> </tr> </thead> <tbody> <tr> <td>catalina.policy</td> <td>权限控制配置文件</td> </tr> <tr> <td>catalina.properties</td> <td>tomcat属性配置文件</td> </tr> <tr> <td>context.xml</td> <td>上下文配置文件</td> </tr> <tr> <td>logging.properties</td> <td>日志log相关配置文件</td> </tr> <tr> <td>server.xml</td> <td>主配置文件</td> </tr> <tr> <td>tomcat-users.xml</td> <td>manager-gui管理用户配置文件(tomcat安装后提供一个manager-gui的管理界面，通过配置该文件可以开启访问)</td> </tr> <tr> <td>web.xml</td> <td>tomcat的servlet、servlet-mapping、filter、MIME等相关配置</td> </tr> </tbody> </table> <h2> <a id="36_tomcat_375" rel="nofollow"></a>3.6 tomcat主配置文件说明</h2> <p>server.xml为tomcat的主配置文件，通过配置该文件，可以修改tomcat的启动端口、网站目录、虚拟主机、开启https等常用功能。<br /> server.xml主要由 &lt;Server&gt;、&lt;Service&gt;、&lt;Connector/&gt;、&lt;Engine&gt;、&lt;Host&gt;、&lt;Context&gt;、&lt;/Context&gt;、&lt;/Host&gt;、&lt;/Engine&gt;、&lt;/service&gt;、&lt;/Server&gt;</p> <pre><code>&lt;Server port="8005" shutdown="SHUTDOWN"&gt; // tomcat关闭端口，默认只对本机地址开放，可以在本机通过telnet 127.0.0.1 8005的方式进行访问   69     &lt;Connector port="8080" protocol="HTTP/1.1"  70                connectionTimeout="20000"  71                redirectPort="8443" /&gt; // tomcat启动的默认端口号8080，可以根据需要进行修改  115     &lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt; 116     &lt;!-- 117     &lt;Connector protocol="AJP/1.3" 118                address="::1" 119                port="8009" 120                redirectPort="8443" /&gt; // tomcat启动AJP1.3连接器时默认的端口号，可以根据需要进行更改  152       &lt;Host name="localhost"  appBase="webapps" 153             unpackWARs="true" autoDeploy="true"&gt; 155         &lt;!-- SingleSignOn valve, share authentication between web applications 156              Documentation at: /docs/config/valve.html --&gt; 157         &lt;!-- 158         &lt;Valve className="org.apache.catalina.authenticator.SingleSignOn" /&gt; 159         --&gt; 160  161         &lt;!-- Access log processes all example. 162              Documentation at: /docs/config/valve.html 163              Note: The pattern used is equivalent to using pattern="common" --&gt; 164         &lt;Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs" 165                prefix="localhost_access_log" suffix=".txt" 166                pattern="%h %l %u %t &amp;quot;%r&amp;quot; %s %b" /&gt; 167  168       &lt;/Host&gt; 169     &lt;/Engine&gt; 170   &lt;/Service&gt; 171 &lt;/Server&gt; // 以上内容为tomcat定义虚拟主机时的配置及日志配置 </code></pre> <h2> <a id="37_tomcat_server_418" rel="nofollow"></a>3.7 tomcat server的组成部分</h2> <pre><code>server: server元素代表了整个Catalina的servlet容器  service: service是这样一个集合，它是由一个或者多个connector组成，以及一个engine，负责处理所有connector所获得的客户请求。  connector: 一个connector在某个指定的端口上侦听客户端请求，并将获得的请求交给engine来处理，从engine处获得回应并返回客户。  tomcat有两个典型的connector，一个直接侦听来自browser的http请求，一个监听来自其他的webserver的请求。  coyote http/1.1 connector在端口8080处监听来自browser的http请求。 coyote JK2 connector在端口8009处监听来自其他webserver(apache)的servlet/jsp代理请求  engine: engine可以配置多个虚拟主机(virtual host)，每个虚拟主机都有一个域名，当engine获得一个请求时，他把该请求匹配到某个host上，然后把该请求交给该host来处理 engine有一个默认虚拟主机，当请求无法匹配带任何一个host上的时候，将交给该默认host处理  host: 一个host代表一个虚拟主机，每个虚拟主机和某个网络域名相匹配。 每个虚拟主机下都可以部署(deploy)一个或者多个web app，每个web app对应一个context，有一个context patj。 当host获得一个请求时，将把该请求匹配到某个context上，然后把该请求交给该context来处理，匹配的方法是"最长匹配"，所以一个path==" "的context将成为该host的默认context 所有无法和其他context的路径名匹配的请求都将最终和该默认context匹配  context: 一个context对应一个web application，一个web application由一个或者多个servlet组成。  </code></pre> <p><strong>下面开始配置</strong></p> <pre><code>// 为了区分做以下修改 [root@tomcat1 ~]# cat index.jsp  &lt;html&gt; &lt;head&gt;         &lt;title&gt;test page&lt;/title&gt; &lt;/head&gt; &lt;body&gt;         &lt;%         out.println("this is a tomcat1");         %&gt; &lt;/body&gt; &lt;/html&gt;  [root@tomcat1 ~]# mkdir /web [root@tomcat1 ~]# mv index.jsp /web/ [root@tomcat1 ~]# systemctl restart tomcat.service </code></pre> <p>通过IP加端口号进行访问<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230223/fd57e1256c78e053703bc6ad8bfef7a9.jpg" alt="nginx+tomcat负载均衡集群"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230223/b565415a3f99b90ae467638f8426155a.jpg" alt="nginx+tomcat负载均衡集群"></p> <p>// 在nginx上配置负载均衡</p> <pre><code>33     #gzip  on;  34     upstream tomcat-server {  35              server 192.168.182.143:8080;  36              server 192.168.182.144:8080;  37 }  47         location / {  48             root   html;  49             index  index.html index.htm;  50             proxy-pass http://tomcat_server;  51         }  // 配置完成之后，建议使用nginx -t检查语法错误 没有问题之后可以使用nginx -s reload //重新加载配置文件 也可以使用systemctl restart nginx.service  //重启nginx服务 </code></pre> <p>测试，输入nginx主机的IP地址，通过不断刷新页面进行跳转。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230223/0eccbaae5bfa3e2b7622553ae3d37e53.jpg" alt="nginx+tomcat负载均衡集群"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230223/b087dccaf9abc97a22ae759fa5636c64.jpg" alt="nginx+tomcat负载均衡集群"></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-107.htm">Celery教程&#8212;&#8212;&#8212;&#8212;-以守护进程方式运行worker</a></p>
                                        <p>下一个：<a href="/html/category/article-109.htm">微任务和宏任务哪个先执行_在线工具</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑</a></h4>
                <p>前提： 由于业务需要在entity Product已经实现了@version的乐观锁的基础上再加上了悲观锁的控制 @Lock(value = LockModeType.PESSIMISTIC_WRIT</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">VS code vue安装Vetur后还是没有高亮显示之离线安装插件</a></h4>
                <p>前言 因为公司项目是在云桌面开发，没有网络，需要在有网络的电脑安装vscode及插件然后压缩复制到云桌面，但是 安装了Vetur 压缩过去后vue文件代码还是没有高亮，试过很多种方法，但是都无效。然后</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">聊聊系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响</a></h4>
                <p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家介绍的是系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响。 　　软件看门狗模块（WDOG）在 MCU 应用里可以说是非常基础</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">SpringBoot实战数据访问整合Mybatis和Redis</a></h4>
                <p>前言 在开发中我们通常会对数据库的数据进行操作，SpringBoot对关系性和非关系型数据库的访问操作都提供了非常好的整合支持。SpringData是spring提供的一个用于简化数据库访问、支持云服</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">Spring Security 一键接入验证码登录和小程序登录</a></h4>
                <p>最近实现了一个多端登录的Spring Security组件，用起来非常丝滑，开箱即用，可插拔，而且灵活性非常强。我觉得能满足大部分场景的需要。目前完成了手机号验证码和微信小程序两种自定义登录，加上默认</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">指针的高级运用——指针进阶</a></h4>
                <p>文章目录  学习目标 1.1 动态内存分配   引子 1.1动态分配内存函数 1.2malloc函数 1.3 calloc 函数 1.4 realloc函数 1.5 free函数 1.6 动态内存编程</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">SpringBoot扩展点EnvironmentPostProcessor_在线工具</a></h4>
                <p>一、背景 之前项目中用到了Apollo配置中心，对接Apollo配置中心后，配置中心的属性就可以在程序中使用了，那么这个是怎么实现的呢？配置中心的属性又是何时加载到程序中的呢？那么我们如果找到了这个是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-237.htm">Spring Security教程（13）&#8212;- 验证码功能的实现</a></h4>
                <p>有三中方法可以实现验证码的功能 第一种是自定义一个filter，放在SpringSecurity过滤器之前，在用户登录的时候会先经过这个filter，然后在这个filter中实现对验证码进行验证的功能</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">ElasticSearch学习：springboot集成ElasticSearch</a></h4>
                <p>跟其他的菲关系类型数据库一样集成springboot，在生成代码时，勾选web和非关系数据库里面的ElasticSearch就可以。 demo的git地址我放在下面：git es demo 代码 这里</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>