<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-86.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>k8s 部署pod到指定node - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">k8s 部署pod到指定node</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h5><a id="k8s_0" rel="nofollow"></a>k8s指定节点部署</h5> <blockquote> <p>在一些业务场景中，会需要将一些pod部署到指定node，按照默认的调度规则，pod会优先分配到负载较小的node中，难免会出现多个pod资源竞争的情况。<br /> k8s有两种常用的方法可以实现将指定pod分配到指定node中。</p> </blockquote> <ul> <li> <p>nodeName</p> <p>在部署的yaml文件中，对xxx.spec.nodeName指定节点名称，则该pod将只会在该node上进行部署：</p> </li> </ul> <pre><code class="prism language-shell">$<span class="token function">vim</span> websvr.yaml</code></pre> <pre><code class="prism language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token punctuation">-</span>deployment<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">matchLabels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">replicas</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token key atrule">template</span><span class="token punctuation">:</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">labels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">nodeName</span><span class="token punctuation">:</span> k8s<span class="token punctuation">-</span>node1<span class="token comment">#指定节点名称</span><span class="token key atrule">containers</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">image</span><span class="token punctuation">:</span> websvr<span class="token punctuation">:</span>v1<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">containerPort</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP<span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token key atrule">targetPort</span><span class="token punctuation">:</span><span class="token number">3000</span></code></pre> <pre><code class="prism language-shell">$ kubectl apply -f websvr1.yaml  NAME                                  READY   STATUS    RESTARTS   AGE   IP             NODE        NOMINATED NODE   READINESS GATES websvr1-deployment-54cffcc8b4-jw9fl<span class="token number">1</span>/1     Running<span class="token number">0</span>          15s<span class="token number">10.244</span>.36.90   k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr1-deployment-54cffcc8b4-s97ln<span class="token number">1</span>/1     Running<span class="token number">0</span>          15s<span class="token number">10.244</span>.36.92   k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr1-deployment-54cffcc8b4-wglpb<span class="token number">1</span>/1     Running<span class="token number">0</span>          15s<span class="token number">10.244</span>.36.91   k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span></code></pre> <p>可以看到websvr只部署在了k8s-node1上，那么如果现在有三个node，一个pod需要部署在其中两个不同node中，是不是要指定两个node的名称呢，其实这种场景可以使用第二种指定分配的方法：</p> <ul> <li> <p>nodeSelector</p> <p>和nodeName不同，nodeSelector是可以指定某一种类型的node进行分配，这种类型在k8s里被称为标签（label）</p> </li> </ul> <pre><code class="prism language-shell"><span class="token comment">#查看当前node</span> $ kubectl get node -o wide  NAME                STATUS   ROLES                  AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE         KERNEL-VERSION                 CONTAINER-RUNTIME k8s-elasticsearch   Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 16h   v1.21.0<span class="token number">172.16</span>.66.167<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        CentOS Linux<span class="token number">8</span><span class="token number">4.18</span>.0-305.19.1.el8_4.x86_64   docker://20.10.9 k8s-master          Ready    control-plane,master   43h   v1.21.0<span class="token number">172.16</span>.66.169<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        CentOS Linux<span class="token number">8</span><span class="token number">4.18</span>.0-305.19.1.el8_4.x86_64   docker://20.10.9 k8s-node1           Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 43h   v1.21.0<span class="token number">172.16</span>.66.168<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        CentOS Linux<span class="token number">8</span><span class="token number">4.18</span>.0-305.19.1.el8_4.x86_64   docker://20.10.9 k8s-node2           Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 43h   v1.21.0<span class="token number">172.16</span>.66.170<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        CentOS Linux<span class="token number">8</span><span class="token number">4.18</span>.0-305.19.1.el8_4.x86_64   docker://20.10.9<span class="token comment">#给k8s-node1 k8s-node2打上标签websvr</span> $ kubectl label nodes k8s-node1 k8s-node2<span class="token assign-left variable">type</span><span class="token operator">=</span>websvr<span class="token comment">#查看type=websvr标签的node</span> $ kubectl get node -l<span class="token assign-left variable">type</span><span class="token operator">=</span>websvr  NAME        STATUS   ROLES    AGE   VERSION k8s-node1   Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   43h   v1.21.0 k8s-node2   Ready<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   43h   v1.21.0<span class="token comment">#以下附带标签的其他操作：</span><span class="token comment">#修改标签</span> $ kubectl label nodes k8s-node1 k8s-node2<span class="token assign-left variable">type</span><span class="token operator">=</span>webtest --overwrite<span class="token comment">#查看node标签</span> $ kubectl get nodes k8s-node1 k8s-node2 --show-labels<span class="token comment">#删除标签</span> $ kubectl label nodes k8s-node1 k8s-node2 type-</code></pre> <p>修改部署yaml</p> <pre><code class="prism language-shell">$<span class="token function">vim</span> websvr1.yaml</code></pre> <pre><code class="prism language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token punctuation">-</span>deployment<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">matchLabels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">replicas</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token key atrule">template</span><span class="token punctuation">:</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">labels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span><span class="token comment">#选择标签为type:websvr的node部署</span><span class="token key atrule">type</span><span class="token punctuation">:</span> websvr<span class="token key atrule">containers</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">image</span><span class="token punctuation">:</span> websvr<span class="token punctuation">:</span>v1<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">containerPort</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr1<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr1<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP<span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">3000</span><span class="token key atrule">targetPort</span><span class="token punctuation">:</span><span class="token number">3000</span></code></pre> <p>同理修改websvr2.yaml</p> <pre><code class="prism language-shell">$<span class="token function">vim</span> websvr2.yaml</code></pre> <pre><code class="prism language-yaml"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr2<span class="token punctuation">-</span>deployment<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">matchLabels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr2<span class="token key atrule">replicas</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token key atrule">template</span><span class="token punctuation">:</span><span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">labels</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr2<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">nodeSelector</span><span class="token punctuation">:</span><span class="token comment">#选择标签为type:websvr的node部署</span><span class="token key atrule">type</span><span class="token punctuation">:</span> websvr<span class="token key atrule">containers</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr2<span class="token key atrule">image</span><span class="token punctuation">:</span> websvr<span class="token punctuation">:</span>v2<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">containerPort</span><span class="token punctuation">:</span><span class="token number">3001</span><span class="token punctuation">---</span><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service<span class="token key atrule">metadata</span><span class="token punctuation">:</span><span class="token key atrule">name</span><span class="token punctuation">:</span> websvr2<span class="token punctuation">-</span>service<span class="token key atrule">spec</span><span class="token punctuation">:</span><span class="token key atrule">selector</span><span class="token punctuation">:</span><span class="token key atrule">app</span><span class="token punctuation">:</span> websvr2<span class="token key atrule">ports</span><span class="token punctuation">:</span><span class="token punctuation">-</span><span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP<span class="token key atrule">port</span><span class="token punctuation">:</span><span class="token number">3001</span><span class="token key atrule">targetPort</span><span class="token punctuation">:</span><span class="token number">3001</span></code></pre> <pre><code class="prism language-shell">$ kubectl apply -f websvr1.yaml  $ kubectl apply -f websvr2.yaml  $ kubectl get pods -o wide  NAME                                  READY   STATUS    RESTARTS   AGE     IP               NODE        NOMINATED NODE   READINESS GATES websvr1-deployment-67fd6cf9d4-cfstc<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m22s<span class="token number">10.244</span>.36.93     k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr1-deployment-67fd6cf9d4-lx6tr<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m22s<span class="token number">10.244</span>.169.151   k8s-node2<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr1-deployment-67fd6cf9d4-zxznp<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m22s<span class="token number">10.244</span>.169.152   k8s-node2<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr2-deployment-67dfc4f674-dz44b<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m10s<span class="token number">10.244</span>.36.95     k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr2-deployment-67dfc4f674-wjg5x<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m10s<span class="token number">10.244</span>.169.153   k8s-node2<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span> websvr2-deployment-67dfc4f674-xdk9m<span class="token number">1</span>/1     Running<span class="token number">0</span>          2m10s<span class="token number">10.244</span>.36.94     k8s-node1<span class="token operator">&lt;</span>none<span class="token operator">&gt;</span><span class="token operator">&lt;</span>none<span class="token operator">&gt;</span></code></pre> <p>可以看到此时两个websvr deployment已经部署在指定的node节点上</p> <p>若有不正确，欢迎指出</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-85.htm">软件的23种设计模式的通俗解释</a></p>
                                        <p>下一个：<a href="/html/category/article-87.htm">一劳永逸，解决.NET发布云服务器的时区问题_在线工具</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">echarts根据数据动态生成不同条数的折线图</a></h4>
                <p>一、功能需求背景 1、后台可自定义折线图的折线名称、数据、数量（几条） 2、满足不同折线图之间随意切换 3、折线图可鼠标拖动缩放和滚动条收缩查看 4、同一页面涉及多个echarts 二、功能涉及ech</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-239.htm">Vue假数据应用——表格的添加、删除、搜索</a></h4>
                <p>Vue实现假数据的添加、删除、搜索 HTML &lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;script type="text/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">PyQt5之MenuBar菜单控件的使用（三）</a></h4>
                <p>文章目录  MenuBar 详解 一、定义   1.QMenuBar类 2.QMenu类 2.QAction类   二、创建一个菜单栏     MenuBar 详解 在PyQt5中，菜单栏、主菜单和菜</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">SpringBoot配置跨域Cors</a></h4>
                <p>01、同源策略 同源策略[same origin policy]是浏览器的一个安全功能，不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源。 同源策略是浏览器安全的基石。  什么是源 源[or</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">[js] 回调函数 回调地狱 Promise async/await</a></h4>
                <p>1. 回调函数 callback   一种封装代码的手段   什么是 callback , 概念 =&gt; 把 函数A 当做 实参 传递到 函数B 内部 =&gt; 在 函数B 内部以 形参 的方式</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Citus 分布式 PostgreSQL 集群 &#8211; SQL Reference(SQL支持和变通方案)</a></h4>
                <p>由于Citus 通过扩展PostgreSQL 提供分布式功能，因此它与PostgreSQL 结构兼容。这意味着用户可以使用丰富且可扩展的PostgreSQL 生态系统附带的工具和功能来处理使用Citu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">Spring的3级缓存和循环引用的理解_在线工具</a></h4>
                <p>此处是我自己的一个理解，防止以后忘记，如若那个地方理解不对，欢迎指出。  一、背景 在我们写代码的过程中一般会使用 @Autowired 来注入另外的一个对象，但有些时候发生了 循环依赖，但是我们的代</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">Vue内置组件的component标签</a></h4>
                <p>component标签：它的用途是可以动态绑定我们的组件,根据数据不同更换不同的组件. 有一个is属性，is的作用就是显示指定的组件 官方说明：渲染一个“元组件”为动态组件。依 is 的值，来决定哪个</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">如何保证redis和数据库的一致性</a></h4>
                <p>在项目中难免会使用到redis作为缓存，去减轻数据库的访问压力，但是涉及到数据更新时，如果redis和数据库的操作设计出现问题，就会导致redis缓存中和数据库中的数据不一致的情况。那么我们如何去保证</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-219.htm">Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现</a></h4>
                <p>Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现  目录  Golang学习之网络参数请求-Query Params及Path Variables</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">30</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>