<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-160.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<p>阅读Dubbo源码过程中，会发现，Dubbo消费端在做远程调用时，默认通过 Javassist 框架为服务接口生成动态代理类，调用javassist框架下的JavassistProxyFactory类的getProxy(Invoker invoker, Class&lt;?&gt;[] interfaces)方法，动态生成一个存放在JVM中的动态代理类。</p> <div class="ay1code"> <pre class="brush:java;">public &lt;T&gt; T getProxy(Invoker&lt;T&gt; invoker, Class&lt;?&gt;[] interfaces) {      return (T) Proxy.getProxy(interfaces).newInstance(new InvokerInvocationHandler(invoker));  }</pre> </div> <p>那么，问题来了，如果我们想要一睹该动态生成的代理类内部结构是怎样的，如何才能便捷做到的？</p> <p>这就是我想介绍的一款工具，它可以帮助我们查看JDK或者javassist生成的动态代理类，当然，它的功能远不止此，还可以在生产环境进行诊断。</p> <p>Arthas 是Alibaba开源的Java诊断工具，官方在线文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://arthas.aliyun.com/doc/"   target="_blank" rel="nofollow">https://arthas.aliyun.com/doc/</a></p> <p>根据官网上的介绍，它还可以解决以下问题————</p> <p>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决：</p> <p>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</p> <p>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</p> <p>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</p> <p>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</p> <p>是否有一个全局视角来查看系统的运行状况？</p> <p>有什么办法可以监控到JVM的实时运行状态？</p> <p>怎么快速定位应用的热点，生成火焰图？</p> <p>怎样直接从JVM内查找某个类的实例？</p> <p>这些方案本文暂不展开，这里只展开通过该工具查看Dubbo生成的动态代理类。</p> <p>我是直接在使用dubbo-parent源码中的例子，分别启动了提供者与消费者。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/e02fe5cef167d19a7b0cd16bf532838b.jpg"></p> <p>首先，启动提供者方法——</p> <div class="ay1code"> <pre class="brush:java;">public class Application {      public static void main(String[] args) throws Exception {              startWithBootstrap();         }      private static boolean isClassic(String[] args) {          return args.length &gt; 0 &amp;&amp; "classic".equalsIgnoreCase(args[0]);      }      private static void startWithBootstrap() {          ServiceConfig&lt;DemoServiceImpl&gt; service = new ServiceConfig&lt;&gt;();          service.setInterface(DemoService.class);          service.setRef(new DemoServiceImpl());          DubboBootstrap bootstrap = DubboBootstrap.getInstance();          RegistryConfig registryConfig = new RegistryConfig("zookeeper://127.0.0.1:2181");          registryConfig.setTimeout(20000);          ProtocolConfig protocolConfig = new ProtocolConfig();          protocolConfig.setName("dubbo");          protocolConfig.setHost("192.168.100.1");          protocolConfig.setPort(20877);          bootstrap.application(new ApplicationConfig("dubbo-demo-api-provider"))                  .registry(registryConfig)                  .service(service)                  .protocol(protocolConfig)                  .start()                  .await();      }  }  </pre> </div> <p>注意，需要配置RegistryConfig自己的zookeeper， protocolConfig.setHost("xxx.xxx.xxx.xxx")设置成你本地内网的ip即可；</p> <p>DemoServiceImpl类详情——</p> <div class="ay1code"> <pre class="brush:java;">public class DemoServiceImpl implements DemoService {      private static final Logger logger = LoggerFactory.getLogger(DemoServiceImpl.class);        @Override      public String sayHello(String name) {          logger.info("Hello " + name + ", request from consumer: " + RpcContext.getContext().getRemoteAddress());          return "Hello " + name + ", response from provider: " + RpcContext.getContext().getLocalAddress();      }        public CompletableFuture&lt;String&gt; sayHelloAsync(String name) {          return null;    }  </pre> </div> <p>接着，启动消费者，这里可以设置一个休眠时间，这样就可以一直维持消费者运行在内存当中——</p> <div class="ay1code"> <pre class="brush:java;">public class Application {      public static void main(String[] args) {              runWithRefer();      }      private static void runWithRefer() {          RegistryConfig registryConfig = new RegistryConfig("zookeeper://127.0.0.1:2181");          registryConfig.setTimeout(30000);          ProtocolConfig protocolConfig = new ProtocolConfig();          protocolConfig.setName("dubbo");          protocolConfig.setHost("192.168.200.1");          protocolConfig.setPort(20899);          ReferenceConfig&lt;DemoService&gt; reference = new ReferenceConfig&lt;&gt;();          reference.setApplication(new ApplicationConfig("dubbo-demo-api-consumer"));          reference.setRegistry(registryConfig);          reference.setInterface(DemoService.class);          DemoService service = reference.get();          String message = service.sayHello("dubbo");          System.out.println("打印了5555555"+message);          try {              Thread.sleep(100000000);          } catch (InterruptedException e) {              e.printStackTrace();          }  }  </pre> </div> <p>当Dubbo的服务提供者与消费者都正常运行时，说明此时JVM虚拟机内存里已经存在动态生成的代理类，这时，我们就可以开始通过arthas-boot.jar工具进行查看了。</p> <p>首先，将arthas-boot.jar工具下载到你本地，我的是Windows，随便放到一个目录当中，例如——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/9f27f234f65168cc3b60e683c23d9252.jpg"></p> <p>接着，直接在运行着Dubbo消费端进程的IDEA上打开Terminal——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/717516dd54851ea6b75c89eebd2d19e4.jpg"></p> <p>然后，输入 java -jar C:\Users\92493\Downloads\12229238_g\arthas-boot.jar ，arthas正常运行成功话，将列出当前JVM上运行的进程——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/2e9f791797287221572fbdeabe598e45.jpg"></p> <p>可以看到我们刚刚启动的provider进程与consumer进程，这时，只需要输入对应进程前面的编号【5】，就可以将Arthas 关联到启动类为 org.apache.dubbo.demo.consumer.Application的 Java 进程上了——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/f91ea77732546e16025b8a6b6bfb979b.jpg"></p> <p>到这一步，我们就可以通过指令 sc *.proxy *模糊查询带有proxy标志的类名了，动态代理生成的类一般都是以Proxy标志——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/4dc078c2fb3705b5cdf0a1a75c4622a4.jpg"></p> <p>其中，这里的org.apache.dubbo.common.bytecode.proxy0就是消费者生成的动态代理类，我们可以直接反编译去查看它内部结构——</p> <p>[arthas@57676]$ jad org.apache.dubbo.common.bytecode.proxy0</p> <p>控制台就会打印出该动态代理类的内部结构——</p> <div class="ay1code"> <pre class="brush:java;">/*   * Decompiled with CFR.   *    * Could not load the following classes:   * com.alibaba.dubbo.rpc.service.EchoService   * org.apache.dubbo.common.bytecode.ClassGenerator$DC   * org.apache.dubbo.demo.DemoService   * org.apache.dubbo.rpc.service.Destroyable     */     package org.apache.dubbo.common.bytecode;  import com.alibaba.dubbo.rpc.service.EchoService;  import java.lang.reflect.InvocationHandler;  import java.lang.reflect.Method;  import java.util.concurrent.CompletableFuture;  import org.apache.dubbo.common.bytecode.ClassGenerator;  import org.apache.dubbo.demo.DemoService;  import org.apache.dubbo.rpc.service.Destroyable;  public class proxy0 implements ClassGenerator.DC,Destroyable,EchoService,DemoService {  public static Method[] methods;  private InvocationHandler handler;  public String sayHello(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[0], objectArray);      return (String)object;  }  public CompletableFuture sayHelloAsync(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[1], objectArray);      return (CompletableFuture)object;  }  public Object $echo(Object object) {      Object[] objectArray = new Object[]{object};      Object object2 = this.handler.invoke(this, methods[2], objectArray);      return object2;  }  public void $destroy() {      Object[] objectArray = new Object[]{};      Object object = this.handler.invoke(this, methods[3], objectArray);  }  public proxy0() {  }  public proxy0(InvocationHandler invocationHandler) {      this.handler = invocationHandler;    }  }  </pre> </div> <p>在Dubbo案例当中，当我们执行 String message = service.sayHello("dubbo")去调用远程接口时，其实是调用了动态代理生成的方法——</p> <div class="ay1code"> <pre class="brush:java;">public String sayHello(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[0], objectArray);      return (String)object;  }  </pre> </div> <p>举一反三，这个Arthas工具类可以在线上生产环境查看一些我们新部署的代码，看是否是新改动的。</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-159.htm">记一次 Nuxt 3 在 Windows 下的打包问题</a></p>
                                        <p>下一个：<a href="/html/category/article-161.htm">通俗易懂：窗口函数案例详解</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">Java 集合框架ArrayList 储存自定义数组</a></h4>
                <p>package LinkedList;  import java.util.ArrayList; import java.util.Iterator;  import p.bean.Person;  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-218.htm">利用Python实现RSA加密解密方法实例_python</a></h4>
                <p>目录  前言 一、安装模块 二、生成密钥对 三、加密 四、解密 五、完整代码 总结    前言  加密技术在数据安全存储，数据传输中发挥着重要作用，能够保护用户隐私数据安全，防止信息窃取。RSA是一种</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-258.htm">vs code编写web项目</a></h4>
                <p>vs code编写web项目 0.小贴士 1.vs和vscode是不一样的是不一样的 2.在已经存在maven的时候，直接在maven的+创建项目，用ctrl+shoeft+p 搜索不到maven的创</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">聊聊系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响</a></h4>
                <p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家介绍的是系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响。 　　软件看门狗模块（WDOG）在 MCU 应用里可以说是非常基础</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-219.htm">正则表达式-匹配ip及rtsp</a></h4>
                <p>IP地址是指互联网协议地址（英语：Internet Protocol Address，又译为网际协议地址），是IP Address的缩写。IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-209.htm">C#中检查null的语法糖_在线工具</a></h4>
                <p>今天看到已经更新了devblogs，新增的C# 11的!!（用于检查null的语法）经过非常长的讨论，最后取消了。然后我又想起来null检查，这个可以说一说。 函数参数null检查 传统写法 写一个函</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">图解Redis之数据结构篇压缩列表</a></h4>
                <p>前言 &nbsp;&nbsp;&nbsp;&nbsp;同整数集合一样压缩列表也不是基础数据结构，而是 Redis 自己设计的一种数据存储结构。它有点儿类似数组，通过一片连续的内存空间，来存储数据。不过</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>