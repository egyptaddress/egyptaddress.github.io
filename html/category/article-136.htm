<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-136.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>使用 docker + verdaccio 搭建npm私有仓库_在线工具 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">使用 docker + verdaccio 搭建npm私有仓库_在线工具</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<p>本文介绍如何使用 <code>verdaccio</code> 搭建私有npm仓库，以及使用 <code>docker</code> 时如何映射到本地目录，方便简单对仓库进行各种操作。系统环境是 Linux。</p> <h2 id="verdaccio">verdaccio</h2> <p><code>verdaccio</code> 是一个开源的轻量的私有 <code>npm proxy registry</code> (npm 代理资源库)，安装使用都非常方便。<br /> forked自 <code>sinopia@1.4.0</code>。</p> <h3 id="安装">安装</h3> <h4 id="使用-npm--yarn-进行全局安装">使用 <code>npm / yarn</code> 进行全局安装</h4> <ul> <li> <p>Node.js v12+</p> </li> <li> <p>npm 4.x+ 或yarn</p> </li> <li> <p>全局安装</p> <pre><code class="language-bash">npm install -g verdaccio  yarn global add verdaccio </code></pre> </li> <li> <p>启动</p> <pre><code class="language-bash">verdaccio  或者使用 pm2 start verdaccio </code></pre> <p>使用浏览器访问web服务，端口号4873，<code>http://0.0.0.0:4873</code>，访问成功就可以了。</p> </li> </ul> <h4 id="使用-docker-镜像安装">使用 <code>docker</code> 镜像安装</h4> <ul> <li> <p>安装 <code>docker</code>，略</p> </li> <li> <p>在 <code>docker</code> 下安装 <code>verdaccio</code> 镜像<br /> 使用如下命令即可：</p> <pre><code class="language-bash">docker pull verdaccio/verdaccio </code></pre> <p>安装镜像成功：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/a9bec3d49f5012977d83b2a348c1e1e5.jpg" alt="使用 docker + verdaccio 搭建npm私有仓库_在线工具"></p> </li> <li> <p>运行 <code>verdaccio</code>，使用 <code>docker</code> 命令运行镜像，创建 <code>verdaccio</code> 容器</p> <pre><code class="language-bash">// 名称verdaccio， 端口 4873 docker run -it --name verdaccio -p 4873:4873 verdaccio/verdaccio </code></pre> <p>启动容器成功：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/b0fa8ec0e0febeaee7e5031df7ad3c90.jpg" alt="使用 docker + verdaccio 搭建npm私有仓库_在线工具"><br /> 启动成功以后，实际上就可以在浏览器访问了，<code>http://0.0.0.0:4873</code>。<br /> 接下来先介绍几个操作容器的 <code>docker</code> 命令。</p> </li> <li> <p><code>docker</code> 操作容器的部分命令</p> <blockquote> <p>新建并启动：docker run CONTAINER<br /> 启动停止的容器：docker start CONTAINER_ID<br /> 查看容器：docker container ls (docker ps)<br /> 停止容器：docker stop CONTAINER_ID<br /> 删除容器：docker rm CONTAINER_ID</p> </blockquote> </li> <li> <p>映射本地目录</p> <p>首先，创建 <code>/home/verdaccio</code> 目录，以下在该目录下操作。<br /> 其次，创建 <code>conf</code> 目录，并添加 <code>verdaccio</code> 的 <code>config.yaml</code> 配置文件。<br /> 接着处理映射目录，一般有以下两种方式：</p> <ol> <li> <p>直接映射本地目录，启动 <code>verdaccio</code></p> <pre><code class="language-bash">docker run -it --name verdaccio -p 4873:4873 -v /home/verdaccio/storage:/verdaccio/storage -v /home/verdaccio/conf:/verdaccio/conf -v /home/verdaccio/plugins:/verdaccio/plugins verdaccio/verdaccio </code></pre> <p>-v：容器目录映射到本地目录</p> </li> <li> <p>或者使用 <code>docker-compose</code> 启动<br /> 添加 <code>docker-compose.yml</code> 文件，使用 <code>docker-compose up</code> 命令启动</p> <pre><code class="language-yml">version: '3' services:   verdaccio:     image: verdaccio/verdaccio     container_name: "verdaccio"     network--mode: "bridge"     environment:       - VERDACCIO_PORT=4873     ports:       - "4873:4873"     volumes:       - "/home/verdaccio/storage:/verdaccio/storage"       - "/home/verdaccio/conf:/verdaccio/conf"       - "/home/verdaccio/plugins:/verdaccio/plugins"     network_mode: "bridge" </code></pre> </li> </ol> <p><strong>注意：</strong> 本地目录 <code>/home/verdaccio/storage</code> 需要设置权限，不然会因为权限问题而导致操作失败。</p> <pre><code class="language-bash">chown -R 10001:65533 /home/verdaccio/storage </code></pre> <p>本地目录映射成功后，会简化很多操作，比如：<br /> 在 <code>/home/verdaccio</code> 目录下会创建 <code>storage</code> 目录，如果发布了包，则在此目录下的 <code>data</code> 中能找到对应的包文件夹，可以查看所有上传的npm包，<strong>此处也可以直接删除该包</strong>；<br /> 也会在 <code>conf</code> 映射到配置文件，方便我们需要时修改配置信息。</p> </li> <li> <p>拷贝 <code>verdaccio</code> 配置文件</p> <p>如果不想做本地目录映射，也可以使用如下命令，拷贝出 <code>verdaccio</code> 镜像的配置文件。<br /><code>docker cp</code>：在容器和本地文件系统之间，拷贝文件或文件夹。</p> <pre><code class="language-bash">docker cp verdaccio:/verdaccio/conf/config.yaml /home </code></pre> </li> </ul> <h3 id="私有库部署成功">私有库部署成功</h3> <p><code>verdaccio</code> 安装启动成功后，就可以直接网络访问。<br /> 当页面出现下图所示，就表示私有库搭建成功，后续就可以进行私有包的发布下载。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220501/72e50bf198f5a7c18aab6ac7e3537d27.jpg" alt="使用 docker + verdaccio 搭建npm私有仓库_在线工具"></p> <h2 id="发布一个包">发布一个包</h2> <p>有了私有库以后，就可以在其上发布 <code>npm</code> 包。<br /> 但初始化时需要先添加用户，设置用户名和密码等，然后就可以直接发包了。</p> <ul> <li> <p>添加用户</p> <pre><code class="language-bash">npm adduser --registry http://0.0.0.0:4873/ </code></pre> <p>输入用户名、密码和邮箱。</p> </li> <li> <p>publish</p> <p>当需要把某个项目发布到私有库时，直接 <code>publish</code>。</p> <pre><code class="language-bash">npm publish --registry http://0.0.0.0:4873/ </code></pre> <p>发布成功后，刷新页面，就能看到最新发布的包。</p> </li> </ul> <h2 id="install">install</h2> <p>在项目目录下增加 <code>.npmrc</code> 文件，指定仓库地址。</p> <pre><code class="language-text">registry=http://0.0.0.0:4873/ </code></pre> <p>使用 <code>npm install 包名</code>，即可安装私有包了。</p> <h2 id="verdaccio-配置文件解读">verdaccio 配置文件解读</h2> <p>常用配置如下：</p> <pre><code class="language-yml">  # 素有包的保存路径   storage: /verdaccio/storage/data   # 插件的保存路径   plugins: /verdaccio/plugins    # 通过web访问   web:     title: Verdaccio    # 账号密码文件，初始不存在   auth:     htpasswd:       file: /verdaccio/storage/htpasswd       # max_users：1000       # 默认1000，允许用户注册数量。为-1时，不能通过 npm adduser 注册，此时可以直接修改 file 文件添加用户。    # 本地不存在时，读取仓库的地址   uplinks:     npmjs:       url: https://registry.npmjs.org    # 对包的访问操作权限，可以匹配某个具体项目，也可以通配   # access 访问下载；publish 发布；unpublish 取消发布；   # proxy 对应着uplinks名称，本地不存在，去unplinks里取    # $all 表示所有人都可以执行该操作   # $authenticated 已注册账户可操作   # $anonymous 匿名用户可操作   # 还可以明确指定 htpasswd 用户表中的用户，可以配置一个或多个。   packages:     '@*/*':       access: $all       publish: $authenticated       unpublish: $authenticated       proxy: npmjs      '**':       access: $all       publish: $authenticated       unpublish: $authenticated       proxy: npmjs    # 服务器相关   sever:     keepAliveTimeout: 60    middlewares:     audit:       enabled: true    # 日志设定   logs: { type: stdout, format: pretty, level: http } </code></pre> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-135.htm">vue3跨层级通信</a></p>
                                        <p>下一个：<a href="/html/category/article-137.htm">python 列表数据组装sql查询数据</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">Spring的3级缓存和循环引用的理解_在线工具</a></h4>
                <p>此处是我自己的一个理解，防止以后忘记，如若那个地方理解不对，欢迎指出。  一、背景 在我们写代码的过程中一般会使用 @Autowired 来注入另外的一个对象，但有些时候发生了 循环依赖，但是我们的代</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1053.htm">Spring Cloud中使用Feign实现负载均衡详解</a></h4>
                <p>本文属于【夯实Spring Cloud】系列文章，该系列旨在用通俗易懂的语言，带大家了解和学习Spring Cloud技术，希望能给读者带来一些干货。系列目录如下：  【夯实Spring Cloud】</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">SpringMVC访问静态资源的三种方式</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果你的DispatcherServlet拦截 *.do这样的URL，就不存在访问不到静态资源的问题。如果你的Dispatch</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">win11系统怎么设置软件安装来源</a></h4>
                <p>&nbsp; &nbsp;我们为了保证电脑安装软件的安全性，以及不会下载到一些有流氓软件之类的问题出现，可以在电脑中设置应用下载来源，那么win11系统怎么设置软件安装来源呢?今天为大家分享win11</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-239.htm">Vue假数据应用——表格的添加、删除、搜索</a></h4>
                <p>Vue实现假数据的添加、删除、搜索 HTML &lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;script type="text/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">JavaScript如何将字符串转换为分层对象</a></h4>
                <p>假设我们有一种特殊的字符串，其中包含成对的字符，像这样- const&nbsp;str&nbsp;=&nbsp;"AABBCCDDEE"; 我们需要基于此字符串构造一个对象，该字符串应如下所示： co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">[js] 回调函数 回调地狱 Promise async/await</a></h4>
                <p>1. 回调函数 callback   一种封装代码的手段   什么是 callback , 概念 =&gt; 把 函数A 当做 实参 传递到 函数B 内部 =&gt; 在 函数B 内部以 形参 的方式</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">由浅入深，带你用JavaScript实现响应式原理（Vue2、Vue3响应式原理）</a></h4>
                <p>由浅入深，带你用JavaScript实现响应式原理 前言 为什么前端框架Vue能够做到响应式？当依赖数据发生变化时，会对页面进行自动更新，其原理还是在于对响应式数据的获取和设置进行了监听，一旦监听到数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1352.htm">vs code编写web项目</a></h4>
                <p>vs code编写web项目 0.小贴士 1.vs和vscode是不一样的是不一样的 2.在已经存在maven的时候，直接在maven的+创建项目，用ctrl+shoeft+p 搜索不到maven的创</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-525.htm">Firefox中的HTML5输入类型“数字”</a></h4>
                <p>Firefox不支持输入类型编号的min属性，但在Google Chrome中可以正常使用。 示例 让我们看一个例子- &lt;!DOCTYPE&nbsp;html&gt; &lt;html&gt; </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>