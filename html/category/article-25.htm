<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-25.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>写了个开源小中间件——运行时动态日志等级开关 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">写了个开源小中间件——运行时动态日志等级开关</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<blockquote class="pgc-blockquote-abstract"> <p data-track="1">项目地址，走过路过可以点个star ：）<br class="sysbr"/><br />https://github.com/saigu/LogLevelSwitch</p> </blockquote> <h1 class="pgc-h-arrow-right">1.为什么需要LogLevelSwitch</h1> <p data-track="3">随着业务规模不断扩大，每一次线上故障的快速定位都是对开发同学的巨大挑战。</p> <p data-track="4">通过日志进行业务关键逻辑的输出，是定位问题的有效手段之一。但是，过多的日志记录又会对系统造成额外的开销，极端情况下，甚至可能导致系统宕机。</p> <p data-track="5">因此，为了兼顾性能和故障场景下的快速定位，我们需要能够实时调整日志等级，以便输出更多的日志信息排查线上问题，或是减少日志打印带来的性能消耗。</p> <div class="pgc-img"></p> <p class="pgc-img-caption"> </div> <p data-track="6">基于以上背景，我们的LogLevelSwitch诞生了。</p> <blockquote> <p data-track="7">LogLevleSwitch以中间件的形式嵌入应用，基于配置中心的热更新能力，实现了应用运行时动态调整日志等级的能力。</p> </blockquote> <h1 class="pgc-h-arrow-right" data-track="8">2.功能特性</h1> <ul> <li data-track="9">兼容性：支持Log4j、Log4j2、Logback等。</li> <li data-track="10">扩展性：可以使用默认的基于本地配置文件的配置修改方式（仅供本地测试学习使用）。生产上，「强烈推荐」&nbsp;通过SPI接入你自己的配置中心，实现热更新。</li> <li data-track="11">易用性：接入简单，效果拔群，只要5分钟你就能用上。</li> </ul> <h1 class="pgc-h-arrow-right" data-track="12">3.基本架构</h1> <div class="pgc-img"><img decoding="async" src="https://p3.toutiaoimg.com/origin/tos-cn-i-qvj2lq49k0/d28defcc670840bd9654e326e258e46e?from=pc" alt="写了个开源小中间件——运行时动态日志等级开关" class="syl-page-img"/></p> <p class="pgc-img-caption"> </div> <p data-track="66">在应用Application中引入我们的LogLevelSwitch。</p> <p data-track="14">LogLevelSwitch包含两个核心组件，LogContext和SwitchContext。</p> <ul> <li data-track="15">SwitchContext: 保存从配置中心获取的switch开关状态与具体Logger配置信息。通过监听配置中心消息，实时更新switch内容，并实现对Logger等级的修改通知。</li> <li data-track="16">LogContext：保存应用原始的Logger与日志级别信息，并能够根据switch配置 更新 或 复原 Logger的等级。</li> </ul> <h1 class="pgc-h-arrow-right" data-track="17">4.Quick Start</h1> <p data-track="18">话不多说了，快来尝尝鲜吧。</p> <h1 class="pgc-h-arrow-right" data-track="19">4.1 普通spring项目</h1> <p data-track="20">只用三步即可完成。</p> <ul> <li data-track="21">STEP 1: 应用中pom引入依赖</li> </ul> <pre class="syl-page-code hljs xml"><code><span class="hljs-tag"><<span class="hljs-name">dependency><span class="hljs-tag"><<span class="hljs-name">groupId>io.github.saigu<span class="hljs-tag"></<span class="hljs-name">groupId><span class="hljs-tag"><<span class="hljs-name">artifactId>log-switch-core<span class="hljs-tag"></<span class="hljs-name">artifactId><span class="hljs-tag"><<span class="hljs-name">version>1.0.0-beta<span class="hljs-tag"></<span class="hljs-name">version><span class="hljs-tag"></<span class="hljs-name">dependency></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre> <ul> <li data-track="23">STEP 2: 构建config Bean</li> </ul> <pre class="syl-page-code hljs java"><code><span class="hljs-meta">@Configuration<span class="hljs-keyword">public<span class="hljs-class"><span class="hljs-keyword">class<span class="hljs-title">LogLevelSwitchConfig {<span class="hljs-meta">@Bean<span class="hljs-function">LogLevelSwitch<span class="hljs-title">logLevelSwitch<span class="hljs-params">() {<span class="hljs-keyword">return<span class="hljs-keyword">new LogLevelSwitch();     } }</span></span></span></span></span></span></span></span></span></span></span></code></pre> <ul> <li data-track="25">STEP 3: 接入配置中心</li> </ul> <p data-track="26">声明配置中心的SPI实现。</p> <blockquote class="pgc-blockquote-abstract"> <p data-track="27">在resource路径下新建 META-INF/services，创建文件名为<br />io.github.saigu.log.level.sw.listener.ConfigListener的文件，并写入需要的「实现类名」。</p> </blockquote> <p data-track="28">实现一：项目自带的LocalFile配置中心</p> <p data-track="29">如果你还没有自己的配置中心，那就使用我们自带的基于本地配置文件进行本地测试学习。</p> <p data-track="30">「实现类名」为<br />io.github.saigu.log.level.sw.listener.LocalFileListener</p> <blockquote class="pgc-blockquote-abstract"> <p data-track="31">注意，生产上 强烈推荐 通过「实现二」接入你自己的配置中心，实现热更新。</p> </blockquote> <p data-track="32">在resource目录下新建LocalSwitch.json文件：</p> <div class="pgc-img"><img decoding="async" src="https://p3.toutiaoimg.com/origin/tos-cn-i-qvj2lq49k0/622c60a6ac16442ea3fbb1c0b059145e?from=pc" alt="写了个开源小中间件——运行时动态日志等级开关" class="syl-page-img"/></p> <p class="pgc-img-caption"> </div> <p data-track="33">然后填写开关配置：</p> <pre class="syl-page-code hljs json"><code>{<span class="hljs-attr">"status":<span class="hljs-string">"on",<span class="hljs-attr">"loggerBeans": [     {<span class="hljs-attr">"name":<span class="hljs-string">"all",<span class="hljs-attr">"level":<span class="hljs-string">"error"     }   ] }</span></span></span></span></span></span></span></code></pre> <p data-track="35">实现二：自定义SPI扩展配置,接入自己的配置中心</p> <p data-track="36">如果你已经有了自己的配置中心，那就可以通过SPI扩展配置,接入自己的配置中心。</p> <p data-track="37">「实现类名」为你自己的实现类名。</p> <p class="syl-page-br" data-track="38"> <h1 class="pgc-h-arrow-right" data-track="40">4.2 springboot项目</h1> <p data-track="41">两步接入。</p> <ul> <li data-track="42">STEP 1: 应用中pom引入依赖</li> </ul> <pre class="syl-page-code hljs xml"><code><span class="hljs-tag"><<span class="hljs-name">dependency><span class="hljs-tag"><<span class="hljs-name">groupId>io.github.saigu<span class="hljs-tag"></<span class="hljs-name">groupId><span class="hljs-tag"><<span class="hljs-name">artifactId>log-switch-starter<span class="hljs-tag"></<span class="hljs-name">artifactId><span class="hljs-tag"><<span class="hljs-name">version>1.0.0-beta<span class="hljs-tag"></<span class="hljs-name">version><span class="hljs-tag"></<span class="hljs-name">dependency></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre> <ul> <li data-track="44">STEP 2: 接入配置中心<br />同「方式一」</li> </ul> <h1 class="pgc-h-arrow-right" data-track="45">5.关键配置</h1> <p data-track="46">SwitchContext是我们的关键配置：</p> <div class="tableWrapper"> <div class="syl-shadow-provider"> <div class="syl-table-wrap"> <table> <colgroup> <col> <col> <col></colgroup> <tbody> <tr> <td> <p data-track="47">参数名</p> </td> <td> <p data-track="48">含义</p> </td> <td> <p data-track="49">可选值</p> </td> </tr> <tr> <td> <p class="syl-line-pure-english" data-track="50">status</p> </td> <td> <p data-track="51">开关状态</p> </td> <td> <p data-track="52">「off」: 关闭，使用应用 「on」:开启，使用配置中心的配置等级。</p> </td> </tr> <tr> <td> <p class="syl-line-pure-english" data-track="53">List<LoggerBean></p> </td> <td> <p data-track="54">日志等级list</p> </td> <td> <p data-track="55">如果列表的第一个LoggerBean的name为all，则影响全局logger等级</p> </td> </tr> </tbody> </table> </div> </div> </div> <p data-track="56">参考范例：</p> <pre class="syl-page-code hljs json"><code>{<span class="hljs-attr">"status":<span class="hljs-string">"on",<span class="hljs-attr">"loggerBeans": [     {<span class="hljs-attr">"name":<span class="hljs-string">"all",<span class="hljs-attr">"level":<span class="hljs-string">"error"     }   ] }</span></span></span></span></span></span></span></code></pre> <h1 class="pgc-h-arrow-right" data-track="58">6.注意事项</h1> <p data-track="59">为了规范日志使用，同时避免影响降级开关效果，初始化的时候会去检测项目中依赖的日志框架实现。</p> <p data-track="60">请注意，如果日志提示</p> <blockquote> <p data-track="61">“存在多个日志框架实现，建议只保留一个，否则会影响日志降级开关效果”</p> </blockquote> <p data-track="62">说明检测到了应用中引入了多个日志框架实现。</p> <p data-track="63">建议从pom中进行移除多余日志框架，确保采用唯一日志框架实现。</p> <h1 class="pgc-h-arrow-right" data-track="64">7.详细设计 TL;DR</h1> <p data-track="65">本文还是专注于介绍吧，后面再讲讲实现吧，敬请期待。</p> <p data-track="65"> <blockquote><p>都看到最后了，原创不易，点个关注，点个赞吧～</p></blockquote> <blockquote><p>文章持续更新，可以微信搜索「阿丸笔记 」第一时间阅读，回复【笔记】获取Canal、MySQL、HBase、JAVA实战笔记，回复【资料】获取一线大厂面试资料。</p></blockquote> <blockquote><p>知识碎片重新梳理，构建Java知识图谱：github.com/saigu/JavaK…（历史文章查阅非常方便）</p></blockquote> <p data-track="65"> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-24.htm">设计模式学习笔记状态模式及其实现</a></p>
                                        <p>下一个：<a href="/html/category/article-26.htm">python神经网络Keras构建CNN网络训练_python</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3756.htm">接口隔离原则（Interface Segregation Principle，ISP）</a></h4>
                <p>接口隔离原则（Interface Segregation Principle，ISP）要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。  定义  客户端不应该</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4095.htm">Docker基础 — 36、CMD指令和ENTRYPOINT指令的区别</a></h4>
                <p>目录  1、CMD指令和ENTRYPOINT指令说明 2、CMD指令只有最后一条生效的原因 3、CMD指令演示 4、ENTRYPOINT指令演示 5、总结   CMD指令和ENTRYPOINT指令作用</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3424.htm">用gcc查看c源文件的汇编代码   C++性能优化技术导论</a></h4>
                <p>1  用gcc查看c源文件的汇编代码    &nbsp;      gcc -S -o xx.s 2.c &nbsp; http://blog.csdn.net/heiyeshuwu/article/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4479.htm">宠物狗粮上市公司 宠物狗粮上市公司有哪些</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于宠物狗粮上市公司的问题，于是小编就整理了3个相关介绍宠物狗粮上市公司的解答，让我们一起看看吧。我去店里买狗粮，老板推荐”爱贝“给</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1954.htm">FreeRTOS进阶之任务创建完全解析_操作系统</a></h4>
                <p>目录  前言 1.创建任务堆栈和任务TCB 2.初始化任务TCB必要的字段 3.初始化任务堆栈 4.进入临界区 5.当前任务数量增加1 6.为第一次运行做必要的初始化 7.更新当前正在运行的任务TCB</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4293.htm">免费领养宠物的平台小狗有哪些（免费领养宠物的app有哪些）</a></h4>
                <p>摘要：       本篇文章给大家谈谈免费领养宠物的平台小狗有哪些，以及免费领养宠物的app有哪些对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、家中有一只狗想找新主人上哪..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4322.htm">宠物粮食品牌前十排名榜单 宠物粮食品牌前十排名榜单图片</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于宠物粮食品牌前十排名榜单的问题，于是小编就整理了4个相关介绍宠物粮食品牌前十排名榜单的解答，让我们一起看看吧。什么品牌鸽粮性价比</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4292.htm">动物注射疫苗属于什么免疫（动物疫苗是什么意思）</a></h4>
                <p>摘要：       今天给各位分享动物注射疫苗属于什么免疫的知识，其中也会对动物疫苗是什么意思进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、狗狗要打哪些疫苗.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2239.htm">【面试普通人VS高手系列】HashMap是怎么解决哈希冲突的？</a></h4>
                <p>常用数据结构基本上是面试必问的问题，比如HashMap、LinkList、ConcurrentHashMap等。 关于HashMap，有个学员私信了我一个面试题说： “HashMap是怎么解决哈希冲突</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1342.htm">import axios from ‘axios‘失效的问题</a></h4>
                <p>在搭建vue开发项目的时候，引入axios组件的时候，设置的全局axios总是访问不了，先以为是axios版本冲突问题，后来发现是项目打开层级的问题。 进入下层目录重新打开，解决了！</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">24</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>