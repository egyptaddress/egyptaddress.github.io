<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-232.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>使用JSR-303 Validation后端验证 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">使用JSR-303 Validation后端验证</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <h2>&nbsp;</h2> <h2>一、JSR-303简介：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.ibm.com/developerworks/cn/java/j-lo-jsr303/index.html"  rel="nofollow">官网</a><br /> </h2> <p>JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。</p> <p>此实现与 <strong>Hibernate ORM 没有任何关系</strong>。 JSR 303 用于对 Java Bean 中的字段的值进行验证。<br /> Spring MVC 3.x 之中也大力支持 JSR-303，可以在控制器中对表单提交的数据方便地验证。</p> <p>JSR-303可以使用注解的方式进行验证，它内部已经定义好了一系列的限制注解，我们只需要把这些注解标记在需要验证的实体类的属性上或是其对应的get方法上。</p> <p><strong>JSR-303 是一个数据验证的规范，但是 s<strong>pri</strong>ng 并没有对其进行实现，Hibernate Validator 是实现了这一规范的，通过此这个实现来讲 SpringMVC对JSR-303 的支持。</strong><br /> &nbsp;</p> <h2>二、JSR 303 基本的校验规则</h2> <p><strong>空检查</strong><br /><span style="color:#f33b45;">@Null</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 验证<span style="color:#3399ea;">对象</span>是否为null<br /> @NotNull &nbsp; &nbsp;&nbsp; 验证<span style="color:#3399ea;">对象</span>是否不为null, 无法查检长度为0的字符串<br /> @NotBlank &nbsp;&nbsp; 检查约束<span style="color:#3399ea;">字符串</span>是不是Null还有被Trim的长度是否大于0,只对字符串,且会去掉前后空格.<br /><span style="color:#f33b45;">@NotEmpty</span> &nbsp; 检查<span style="color:#3399ea;">约束元素</span>是否为NULL或者是EMPTY.</p> <p><strong>Booelan检查</strong><br /> @AssertTrue &nbsp; &nbsp; 验证 <span style="color:#3399ea;">Boolean 对象</span>是否为 true<br /> @AssertFalse &nbsp;&nbsp; 验证 <span style="color:#3399ea;">Boolean 对象</span>是否为 false</p> <p><strong>长度检查</strong><br /> @Size(min=, max=) &nbsp; &nbsp; &nbsp; 验证<span style="color:#3399ea;">对象</span>（Array,Collection,Map,String）长度是否在给定的范围之内<br /><span style="color:#f33b45;">@Length</span>(min=, max=) &nbsp; 验证<span style="color:#3399ea;">约束字符串</span>是否包含在最小和最大之间。</p> <p><strong>日期检查</strong><br /><span style="color:#f33b45;">@Past</span> &nbsp; &nbsp; &nbsp;&nbsp; 验证<span style="color:#3399ea;"> Date 和 Calendar 对象</span>是否在当前时间之前，验证成立的话被注释的元素一定是一个过去的日期<br /><span style="color:#f33b45;">@Future</span> &nbsp; &nbsp; 验证 <span style="color:#3399ea;">Date 和 Calendar 对象</span>是否在当前时间之后，验证成立的话被注释的元素一定是一个将来的日期<br /> @Pattern &nbsp; 验证 <span style="color:#3399ea;">String 对象</span>是否符合正则表达式的规则，被注释的元素符合制定的正则表达式，regexp:正则表达式 flags: 指定 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Pattern.Flag 的数组，表示正则表达式的相关选项。</p> <p><strong>数值检查</strong><br /> &nbsp; &nbsp; &nbsp; 建议<span style="color:#f33b45;">使用在Stirng,Integer类型，不建议使用在 int 类型上</span>，因为表单值为 空 时无法转换为 int，<br /> @Min &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 验证 <span style="color:#3399ea;">Number 和 String 对象</span>是否大等于指定的值<br /> @Max &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 验证 <span style="color:#3399ea;">Number 和 String 对象</span>是否小等于指定的值<br /><span style="color:#f33b45;">@DecimalMax&nbsp;</span> 被标注的值必须不大于约束中指定的最大值. 这个约束的参数是一个通过BigDecimal定义的最大值的字符串表示. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 小数存在精度（ <span style="color:#3399ea;">Double, float,&nbsp;BigDecimal</span> ）<br /><span style="color:#f33b45;">@DecimalMin</span> &nbsp; 被标注的值必须不小于约束中指定的最小值. 这个约束的参数是一个通过BigDecimal定义的最小值的字符串表示. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 小数存在精度<br /> @Digits &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 验证<span style="color:#3399ea;"> Number 和 String 的构成</span>是否合法<br /> @Digits(integer=,fraction=) &nbsp; 验证字符串是否是符合指定格式的数字，interger指定整数精度，fraction指定小数精度。<br /> @Range(min=, max=) &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 被指定的元素<span style="color:#3399ea;">必须在合适的范围内</span><br /> @Range(min=10000,max=50000,message=”range.bean.wage”)<br /> @Valid &nbsp; &nbsp;&nbsp; 递归的对关联对象进行校验, 如果关联对象是个集合或者数组,那么对其中的元素进行递归校验,如果是一个map,则对其 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 中的值部分进行校验.(是否进行递归验证)<br /> @CreditCardNumber &nbsp; &nbsp; &nbsp;&nbsp;<span style="color:#3399ea;"> 信用卡验证</span><br /><span style="color:#f33b45;">@Email &nbsp;</span> &nbsp; &nbsp;&nbsp; 验证是否是<span style="color:#3399ea;">邮件地址</span>，如果为null,不进行验证，算通过验证。<br /> @ScriptAssert(lang= ,script=, alias=)&nbsp;<br /> @URL(protocol=,host=, port=,regexp=, flags=)&nbsp;</p> <p>&nbsp;</p> <h2>三、demo操作步骤</h2> <p><strong>&nbsp; &nbsp;&nbsp; 1)&nbsp; pom.xml中引入依赖</strong></p> <pre class="has"><code>&lt;!-- JSR-303后台校验, 官方参考实现是Hibernate Validator --&gt;			 		&lt;dependency&gt; 			&lt;groupId&gt;org.hibernate.validator&lt;/groupId&gt; 			&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt; 			&lt;version&gt;6.0.10.Final&lt;/version&gt; 		&lt;/dependency&gt; 		&lt;dependency&gt; 		    &lt;groupId&gt;org.hibernate&lt;/groupId&gt; 		    &lt;artifactId&gt;hibernate-validator-annotation-processor&lt;/artifactId&gt; 		    &lt;version&gt;6.0.10.Final&lt;/version&gt; 		&lt;/dependency&gt;</code></pre> <p><strong>&nbsp;2)&nbsp; </strong>SpringMVC配置文件中需要 <span style="color:#f33b45;">&lt;mvc:annotation-driven "/&gt;</span> 这个标签，自动加载需要的支持类。</p> <p>&nbsp;<strong>3）在JavaBean的属性上加验证注解。</strong></p> <pre class="has"><code>public class User {	 	private int id; 	 	@NotEmpty(message="用户名不能为空") 	@Pattern(regexp="^\\w{6,18}$",message="用户名必须由6到18位的数字字母或者下划线组成") 	private String username; 	 	@NotNull 	@Length(min=6,max=32,message="密码必须为6到32位的字符串") 	private String password; 	 	@Past 	private Date birthday; 	 	@NotNull(message="年龄不能为空") 	@Max(value=1) 	@Min(value=1) 	private Integer age; 	 	@DecimalMax(value="2.5") 	@DecimalMin(value="1.0") 	private Double height; 	 	@Email 	private String email; 	@NotNull 	private Department department; 	</code></pre> <p>&nbsp;&nbsp; <strong>4）在Controller的处理方法的参数前，加<span style="color:#f33b45;">@Valid</span>注解，出错后，错误信息会放置在 <span style="color:#f33b45;">Errors或BindingResult</span> 的对象参数中。</strong></p> <pre class="has"><code>	@ModelAttribute 	public void getJspUser(@RequestParam(value="id",required=false) Integer id,  			@RequestParam(value="department.id",required=false) Integer department_id, Model model) { 		if(id !=null &amp;&amp; department_id != null) { 			User user = userService.get(id); 			Department department = departmentService.get(department_id); 			user.setDepartment(department); 			model.addAttribute("user", user); 		} 	}	           @RequestMapping(value="/add", method = RequestMethod.POST) 	public String add(@Valid User user, BindingResult errors, Model model) { 		//判断数据绑定结果 errors.getErrorCount()&gt;0 也可以 		if(errors.hasFieldErrors()) { 			System.out.println("参数值不合法！"); 			//获得所有的属性错误 			List&lt;FieldError&gt; fieldErrors = errors.getFieldErrors(); 			for (FieldError fieldError : fieldErrors) { 				//把错误信息存放在model对象中 				//model.addAttribute(fieldError.getField(), fieldError.getDefaultMessage()); 				System.out.println(fieldError.getField()+"==="+fieldError.getDefaultMessage()); 				 				model.addAttribute("departments", departmentService.getAllList()); 				return "user-add"; 			} 		} 		userService.add(user); 		return "redirect: /sshweb/users"; 	}</code></pre> <p><strong>&nbsp; &nbsp;&nbsp; 5） jsp&nbsp; 页面</strong></p> <pre class="has"><code>	&lt;h3&gt;新增用户&lt;/h3&gt; 	&lt;form:form action="${pageContext.request.contextPath }/add" method="post" modelAttribute="user"&gt; 		用户名：&lt;form:input path="username"/&gt;  &lt;form:errors path="username"/&gt; &lt;br/&gt; 		用户密码：&lt;form:input path="password"/&gt; &lt;form:errors path="password"/&gt;  &lt;br/&gt; 		email：&lt;form:input path="email"/&gt;  &lt;form:errors path="email"/&gt;&lt;br/&gt; 		用户所属部门：&lt;form:select path="department.id" itemValue="id" itemLabel="departmentname" items="${departments }"/&gt;  &lt;br/&gt; 		生日：&lt;form:input path="birthday"/&gt;  &lt;form:errors path="birthday"/&gt;&lt;br/&gt; 		年龄：&lt;form:input path="age"/&gt;   &lt;form:errors path="age"/&gt;&lt;br/&gt; 		身高：&lt;form:input path="height"/&gt; &lt;form:errors path="height"/&gt;&lt;br/&gt; 		&lt;input type="submit" value="保存"&gt; &lt;br/&gt; 	&lt;/form:form&gt;</code></pre> <p>&nbsp;</p> <p>&nbsp;</p> <p>&nbsp;</p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-231.htm">Java中时间类使用方法总结</a></p>
                                        <p>下一个：<a href="/html/category/article-233.htm">Spring Security 一键接入验证码登录和小程序登录</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-223.htm">C语言：关键字&#8212;union（声明共用体类型）</a></h4>
                <p>C语言32个关键字 有32个关键字详细说明，还有跳转链接！   一、union 简介 union 是C语言中一种声明共用体的数据类型。union(共用体)在某种程度上类似struct(结构体)的一种数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Springboot 设置过滤器以及重复读取request里的body</a></h4>
                <p>需求：request的content-type为applciation/json，进入controller之前需要把body中的参数取出来做一次处理，然后和hearder中的另一个参数做对比。 思路：</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">C/C++编程：异常处理(exception handling)的原理</a></h4>
                <p>引入原因  问题：很久之前，C程序是使用错误码来处理错误的，那为什么C++还要引入异常呢？  回答：异常不能被忽略。  如果一个函数通过设置一个状态变量来返回错误码来表示一个异常状态，没有办法保证函数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">springboot读取resources下文件方式</a></h4>
                <p>项目中很多时候需要读取自定义配置文件，本地开发工具怎么写都成功但是部署到服务其上就出现问题， 异常BOOT-INF/classes!/config.xml (文件名、目录名或卷标语法不正确.)路径中带</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Azure Virtual Desktop创建配置管理详解</a></h4>
                <p>一，引言 Azure 虚拟创面是一项 Azure 服务，可以让我们管理： 　　1）VDI（虚拟桌面基础架构） 　　2）云端的 RDSH：RDSH 是 RDS（远程桌面服务）中的一个角色。这些类型的服务</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-244.htm">vue实现页面刷新动画_vue.js_</a></h4>
                <p>本文实例为大家分享了vue实现页面刷新动画的具体代码，供大家参考，具体内容如下 做一个vue的页面刷新动画，找了好多动画样式，感谢大佬们造的轮子。 主要就是在index.html文件里面写一个动画样式</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-234.htm">数据传输POST心法分享，做前端的你还解决不了这个bug？</a></h4>
                <p>背景 随时随地给大家提供技术支持的葡萄又来了。这次的事情是这样的，提供demo属于是常规操作，但是前两天客户突然反馈压缩传输模块抛出异常，具体情况是压缩内容传输到服务端后无法解压。 由于代码没有发生任</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">最大生成树Bad Cowtractors_在线工具</a></h4>
                <p>题目链接：http://poj.org/problem?id=2377；     仔细阅读题目，你会发现一个词-" as large as possible"，这个词的意思是尽可能最大；  来，我们翻</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>