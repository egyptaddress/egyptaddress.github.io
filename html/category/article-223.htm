<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-223.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Spring Security——【认证、授权、注销及权限控制】 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Spring Security——【认证、授权、注销及权限控制】</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="Spring%20Security%E7%AE%80%E4%BB%8B%EF%BC%9A-toc" style="margin-left:0px;"><a href="#Spring%20Security%E7%AE%80%E4%BB%8B%EF%BC%9A" title="Spring Security简介：" rel="nofollow">Spring Security简介：</a></p> <p id="%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%9A-toc" style="margin-left:0px;"><a href="#%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%9A" title="实验环境搭建：" rel="nofollow">实验环境搭建：</a></p> <p id="%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83-toc" style="margin-left:0px;"><a href="#%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83" title="认证和授权" rel="nofollow">认证和授权</a></p> <p id="%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E5%92%8C%E6%B3%A8%E9%94%80-toc" style="margin-left:0px;"><a href="#%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E5%92%8C%E6%B3%A8%E9%94%80" title="权限控制和注销" rel="nofollow">权限控制和注销</a></p> <hr id="hr-toc"/> <h1 id="Spring%20Security%E7%AE%80%E4%BB%8B%EF%BC%9A">Spring Security简介：</h1> <p>Spring Security 是针对Spring项目的安全框架，也是Spring Boot底层安全模块默认的技术选型，它可以实现强大的Web安全控制，对于安全控制，我们只需要引入&nbsp;spring-boot-starter-security&nbsp;模块，进行少量的配置，即可实现强大的安全管理！</p> <p>记住几个类：</p> <ul> <li> <p>WebSecurityConfigurerAdapter：自定义Security策略</p> </li> <li> <p>AuthenticationManagerBuilder：自定义认证策略</p> </li> <li> <p>@EnableWebSecurity：开启WebSecurity模式</p> </li> </ul> <p>Spring Security的两个主要目标是 “认证” 和 “授权”（访问控制）。</p> <p><strong>“认证”（Authentication）</strong></p> <p>身份验证是关于验证您的凭据，如用户名/用户ID和密码，以验证您的身份。</p> <p>身份验证通常通过用户名和密码完成，有时与身份验证因素结合使用。</p> <p><strong>“授权” （Authorization）</strong></p> <p>授权发生在系统成功验证您的身份后，最终会授予您访问资源（如信息，文件，数据库，资金，位置，几乎任何内容）的完全权限。</p> <p>这个概念是通用的，而不是只在Spring Security 中存在。</p> <p>Spring Security 框架对于认证和授权很好的支持。在用户认证方面，Spring Security 框架支持主流的认证方式，包括 HTTP 基本认证、HTTP 表单验证、HTTP 摘要认证、OpenID 和 LDAP 等。在用户授权方面，Spring Security 提供了基于角色的访问控制和访问控制列表（Access Control List，ACL），可以对应用中的领域对象进行细粒度的控制。</p> <p>下面是spring security官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://spring.io/projects/spring-security"  title="Spring Security" rel="nofollow">Spring Security</a>&nbsp; &nbsp;找到对应的官方文档：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/#jc"  title="Spring Security Reference" rel="nofollow">Spring Security Reference</a></p> <p><img fetchpriority="high" decoding="async" alt="" height="647" src="http://img.555519.xyz/uploads/20230112/ca6e329478800ffa48f361be3daf8c15.jpg"></p> <h1 id="%E5%AE%9E%E9%AA%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%EF%BC%9A">实验环境搭建：</h1> <p>1.新建一个初始的springboot项目web模块，thymeleaf模块</p> <p>2.导入静态资源</p> <p><img decoding="async" alt="" height="585" src="http://img.555519.xyz/uploads/20230112/b585396da87763626fb74bac62b765f9.jpg"></p> <p>&nbsp;3、controller跳转！</p> <p><img decoding="async" alt="" height="532" src="http://img.555519.xyz/uploads/20230112/1e4e52e1ee40dbf19895b7bc85a5a92c.jpg"></p> <p>&nbsp;4、测试实验环境是否成功</p> <h1 id="%E8%AE%A4%E8%AF%81%E5%92%8C%E6%8E%88%E6%9D%83">认证和授权</h1> <p>我们测试的环境，是谁都可以访问，现在我们使用&nbsp;Spring Security&nbsp;增加上认证和授权的功能</p> <p>1、引入 Spring Security 模块</p> <pre><code class="language-XML">&lt;dependency&gt;    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt; &lt;/dependency&gt;</code></pre> <p>2、编写 Spring Security 配置类</p> <p>&nbsp;参考对应的官方文档：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.spring.io/spring-security/site/docs/5.3.0.RELEASE/reference/html5/#jc"  title="Spring Security Reference" rel="nofollow">Spring Security Reference</a></p> <p><img loading="lazy" decoding="async" alt="" height="345" src="http://img.555519.xyz/uploads/20230112/16a7f2013290598f8036c5a3cd1491e3.jpg"></p> <p>3、编写基础配置类</p> <pre><code class="language-java">@EnableWebSecurity // 开启WebSecurity模式 public class SecurityConfig extends WebSecurityConfigurerAdapter {     @Override    protected void configure(HttpSecurity http) throws Exception {           } }</code></pre> <p>4.定义授权的规则:</p> <p>在配置类中看授权的源码:</p> <p><img loading="lazy" decoding="async" alt="" height="208" src="http://img.555519.xyz/uploads/20230112/5131376a4e2499f0821266a83a5583c8.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="262" src="http://img.555519.xyz/uploads/20230112/e1f98ea7233a6fbfbc506b8298792541.jpg"></p> <p>&nbsp;5、测试，发现除了首页都进不去了！因为我们目前没有登录的角色，因为请求需要登录的角色拥有对应的权限才可以！</p> <p>&nbsp;6、在configure()方法中加入以下配置，开启自动配置的登录功能！</p> <p>从源码解释中看</p> <p><img loading="lazy" decoding="async" alt="" height="133" src="http://img.555519.xyz/uploads/20230112/cf27882b4abc58608734d33146f06db9.jpg"></p> <pre><code class="language-java">// 开启自动配置的登录功能 // /login 请求来到登录页 // /login?error 重定向到这里表示登录失败 http.formLogin();</code></pre> <p>&nbsp;7、测试一下：发现，没有权限的时候，会跳转到登录的页面！</p> <p><img loading="lazy" decoding="async" alt="" height="303" src="http://img.555519.xyz/uploads/20230112/5a0bd38e9a83500eb0a7c114c1b1f0aa.jpg"></p> <p>8、查看刚才登录页的注释信息；</p> <p>我们可以定义认证规则，从源码中查看</p> <p><img loading="lazy" decoding="async" alt="" height="222" src="http://img.555519.xyz/uploads/20230112/5d514757fc938abede77b4105a0b180a.jpg"></p> <p>重写configure(AuthenticationManagerBuilder auth)方法</p> <pre><code class="language-java">//定义认证规则 @Override protected void configure(AuthenticationManagerBuilder auth) throws Exception {        //在内存中定义，也可以在jdbc中去拿....    auth.inMemoryAuthentication()           .withUser("kuangshen").password("123456").roles("vip2","vip3")           .and()           .withUser("root").password("123456").roles("vip1","vip2","vip3")           .and()           .withUser("guest").password("123456").roles("vip1","vip2"); }</code></pre> <p>9、测试，我们可以使用这些账号登录进行测试！发现会报错！</p> <p>There is no PasswordEncoder mapped for the id “null”</p> <p>10、原因，我们要将前端传过来的密码进行某种方式加密，否则就无法登录，修改代码</p> <p><img loading="lazy" decoding="async" alt="" height="295" src="http://img.555519.xyz/uploads/20230112/fdddcf415bbad0b6d740946404056297.jpg"></p> <p>&nbsp;11、测试，登录成功，并且每个角色只能访问自己认证下的规则</p> <h1 id="%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E5%92%8C%E6%B3%A8%E9%94%80">权限控制和注销</h1> <p>1、开启自动配置的注销的功能</p> <p><img loading="lazy" decoding="async" alt="" height="58" src="http://img.555519.xyz/uploads/20230112/32214b631cf38222e33072a365b9a958.jpg"></p> <p>2、在前端，增加一个注销的按钮，index.html 导航栏中</p> <pre><code class="language-html">&lt;a class="item" th:href="@{/logout}"&gt;    &lt;i class="sign-out icon"&gt;&lt;/i&gt; 注销 &lt;/a&gt;</code></pre> <p>3、可以去测试一下，登录成功后点击注销，发现注销完毕会跳转到登录页面！</p> <p>4、但是，我们想让他注销成功后，依旧可以跳转到首页，该怎么处理呢？</p> <pre><code class="language-java">// .logoutSuccessUrl("/"); 注销成功来到首页 http.logout().logoutSuccessUrl("/");</code></pre> <p>5、测试，注销完毕后，发现跳转到首页OK</p> <p>6、现在来一个需求：用户没有登录的时候，导航栏上只显示登录按钮，用户登录之后，导航栏可以显示登录的用户信息及注销按钮！还有就是，比如longdi这个用户，它只有 vip2，vip3功能，那么登录则只显示这两个功能，而vip1的功能菜单不显示！这个就是真实的网站情况了！</p> <p>我们需要结合thymeleaf中的一些功能</p> <p>sec：authorize="isAuthenticated()":是否认证登录！来显示不同的页面</p> <p>Maven依赖：</p> <pre><code class="language-XML">&lt;dependency&gt;    &lt;groupId&gt;org.thymeleaf.extras&lt;/groupId&gt;    &lt;artifactId&gt;thymeleaf-extras-springsecurity5&lt;/artifactId&gt;    &lt;version&gt;3.0.4.RELEASE&lt;/version&gt; &lt;/dependency&gt;</code></pre> <p>7、修改我们的 前端页面</p> <p>导入命名空间 xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity5"</p> <p>修改导航栏，增加认证判断</p> <p>8、重启测试，可以登录试试看，登录成功后确实，显示了我们想要的页面；</p> <p>9、如果注销404了，就是因为它默认防止csrf跨站请求伪造，因为会产生安全问题，可以将请求改为post表单提交，或者在spring security中关闭csrf功能；试试在 配置中增加</p> <p><img loading="lazy" decoding="async" alt="" height="59" src="http://img.555519.xyz/uploads/20230112/7ae0353991b0125c447880e27f273fa0.jpg"></p> <p>&nbsp;10、继续将下面的角色功能块认证完成！测试成功！</p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-222.htm">vue 配置全局模块、SASS（自动引入模块）</a></p>
                                        <p>下一个：<a href="/html/category/article-224.htm">go语言panic函数详解</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">java中RabbitMQ高级应用_java</a></h4>
                <p>目录  1、消息可靠性投递   1.1、确认模式  1.2、退回模式  1.3、确认机制  2、消费端限流  3、消息过期时间  4、死信队列   4.1、死信概念  4.2、延迟队列     1、消</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">如何保证Redis缓存和数据库一致性？</a></h4>
                <p>首先我们先了解下缓存是什么？ 缓存就是把低速存储的结果，临时保存在高速存储的技术。 为什么使用redis进行缓存数据？ Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">vue父组件向子组件传值与传递方法</a></h4>
                <p>vue父组件向子组件传值与传递方法 学习笔记 1、父组件向子组件传值（props）  在子组件中，默认是无法访问到父组件中的data上的数据和methods中的方法 父组件可以在引用子组件的时候，通过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">vue写一个简单的文件上传控件</a></h4>
                <p>这篇将介绍如何写一个简单的基于Vue+Element的文件上传控件。 控件将具有 1. 上传队列的列表，显示文件名称，大小等信息，可以显示上传进度实时刷新 2. 取消上传  &nbsp;使用Eleme</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">dataframe数据自动对齐</a></h4>
                <p>import pandas as pd import numpy as np  # Pandas 可以根据索引实现数据自动对齐，索引不重合的部分被置为NaN  df1 = pd.DataFrame(n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">Ribbon（一）远程调用RestTemplate</a></h4>
                <p>目录 一、RestTemplate介绍 二、需求说明 1、业务结构及说明 三、模块搭建 1、新建一个maven项目 2、添加ribbon依赖 3、编辑yml 4、主程序 5、编辑RibbonContr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">postman测试@pathvariable,@requestparam,@requestbody发送情况</a></h4>
                <p>postman测试@pathvariable,@requestparam,@requestbody发送情况  1、三种方式简单说明  1.1、@Pathvariable 通过占位符的方式获取入参，前端</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Android jetpack room+ViewModel+liveData 数据自动更新</a></h4>
                <p>Android jetpack room的使用_安果移不动的博客-CSDN博客 接上篇博客 我们用google推荐的这种方式  &nbsp; 修改： StudentDao package com.an</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">解决antdv的table因数据量过大导致的卡顿问题</a></h4>
                <p>遇到的问题：antdv的table表格使用时因数据量过大，造成标签页切换卡顿的问题 解决办法：绑定滚动事件，页面只显示在可视区域内的数据，没在可视区域内的数据不予展示，dom元素的scrollHeig</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">js数组删除的方法</a></h4>
                <p>js的数组删除，我建议大家使用splice函数，不要使用slice函数，因为slice是返回一个新数组，并不是从原来的数组中删除。 比如： let a=[111,222,333,444]; a.spl</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>