<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-223.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Git 代码管理（代码提交和代码回退） - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Git 代码管理（代码提交和代码回退）</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <h3>Git 代码管理（代码提交和代码回退）</h3> <p>Git的主要功能是代码管理，版本管理，分支管理。</p> <p>在远程代码管理平台上，项目的代码被管理在一个远程代码仓库中，在本地，代码保存在一个本地代码仓库中。通过Git，本地对代码进行修改后，可以提交到远程代码仓库，当远程的代码被他人修改后，也可以拉取代码到本地。</p> <p><strong>一、工作区、暂存区和仓库区</strong></p> <p>将代码从远程代码仓库中拉到本地仓库后，本地仓库的代码与远程仓库的最新代码保持一致。这时候可以在本地仓库中对代码进行修改。修改代码之后，需要按步骤将代码提交并推到远程仓库，要理解这个过程，就要知道工作区、暂存区和仓库区。</p> <p>当不得不回退/回滚代码时，对工作区、暂存区、仓库区的理解更是重要。</p> <p>工作区、暂存区、仓库区是虚拟的概念，并不是物理上有三个独立的空间，其实相当于是代码提交的三个阶段。</p> <p>工作区：开发人员增加、修改、删除代码/文件时，都是在工作区中进行的。工作区有两个状态很重要，修改前(拉取代码后没有做任何修改)和修改后(确定修改内容并保存)。</p> <p>暂存区：是开发人员完成部分功能后将代码和文件暂存的区域。工作区的代码完成后，必须先经过暂存区才能提交。这个区域的代码会生成版本，不过提交后版本就没有了。</p> <p>仓库区：是开发人员完成阶段性的功能后将代码提交的区域，这个区域的代码每次提交都有版本号(版本号很重要)，可以用于查看版本和回退版本。暂存区的代码，必须要经过仓库区才能推到远程仓库。</p> <p><strong>二、工作区、暂存区、仓库区和远程仓库的关系</strong></p> <p><img fetchpriority="high" decoding="async" alt="" class="has" height="377" src="http://img.555519.xyz/uploads3/20220605/00603e66fe7f5e10f37fb54b6b0fb5e6.jpg"></p> <p>一开始从远程仓库中拉取最新代码，代码保存在本地仓库中，开发人员还没有对代码做任何的修改，所以代码处于工作区未修改状态。</p> <p>对代码修改、增加、删除后，保存代码，此时代码仍然在工作区，现在处于修改后的状态。</p> <p>使用 git add . 将修改后的代码添加到暂存区。</p> <p>使用 git commit -m "提交信息" 将暂存区的代码提交到仓库区，每次提交都有对应的版本号。</p> <p>使用 git push 将代码从本地仓库区推到远程代码仓库上。</p> <p>每一个步骤都可以支持回退/回滚。</p> <p>修改后的代码要回退到修改前，使用 git checkout file。新增加的文件要回到修改前，直接rm file。</p> <p>暂存区、仓库区、远程仓库的代码回退/回滚都可以使用&nbsp;git reset 来实现，根据版本号指定回退的版本，HEAD 或 commit-id。</p> <p>git reset 有三个参数：</p> <p>--hard 会将代码回退到修改前的状态，就相当于上次拉完代码的状态。所有增加、修改、删除的内容都不在了。（这个操作要慎重）</p> <p>--mixed 会将代码回退到修改后的状态，可以再次对代码增加、修改、删除，保存，添加到暂存区，提交到仓库区。</p> <p>--soft 会将代码回退到暂存区，可以继续往前回退，也可以重新提交到仓库区。</p> <p>如果代码已经推到了远程仓库，reset 回滚后重新推代码时，一定要加 --force 或 -f 参数，才能将本地仓库的版本覆盖远程仓库的代码，避免代码冲突。（这个操作也要慎重，要与团队做好沟通，否则会把其他人的代码也覆盖了）</p> <p><strong>三、Git代码管理（提交和回退）</strong></p> <p>本文中，有一个叫 GitProject 的项目代码托管在 Github 上，在 Windows 本地已经配置好了本地代码仓库，这个项目是一个新建的项目，里面没有任何代码(只有一个 README 文件)。</p> <p>1. 右键打开 Git Bash , 进入本地代码的目录中，为了方便练习&nbsp;git 的使用，我先创建了一个 git.py 文件，写了几行代码，然后将代码推到了远程仓库，下面的步骤基于这次提交的代码来做修改。</p> <p>编写代码可以使用任何您喜欢的方式，各种编辑器、IDE都可以，比如用vi写好后wq保存退出。不管用什么方式，代码都是处于工作区，都可以保存代码然后按步骤提交代码。</p> <p><img decoding="async" alt="" class="has" height="327" src="http://img.555519.xyz/uploads3/20220605/221cfecab65360a54bf602170eb94117.jpg"></p> <p>2. 确认分支和拉取代码</p> <p>不管任何时候，在开始修改代码之前，都记得先做两步操作。</p> <p>第一，先看当前处于哪个分支上，当前 GitProject 项目还只有一个分支 master ，所以用的是 master 。</p> <p>在实际的工作中，代码的分支会非常多，大的项目活跃的分支可能10几个，还有很多不常用的分支。而且，实际工作中是不会直接在mster分支上修改和调试代码的，都是先在其他分支测试通过之后，才会合入到master分支。</p> <p>所以第一步先看当前分支是不是自己要修改代码的分支，如果不是先切换，否则改了很多代码发现改错分支了，很麻烦。</p> <pre class="has"><code># 查看当前分支 git branch # 查看所有分支 git branch -a # 切换分支 git checkout master # 如果分支是在远程仓库创建的，可以这样获取 git fetch origin</code></pre> <p>第二步，git pull 拉取当前最新的代码，如果不是最新的代码，修改代码后向远程仓库提交时，会造成代码冲突。</p> <pre class="has"><code># 拉取最新代码 git pull</code></pre> <p>做好以上两步，基本可以避免大部分的代码回退问题和代码冲突问题。</p> <p>确认好分支是最新代码后，在git.py中进行开发(增加一行代码)，然后保存。</p> <p><img decoding="async" alt="" class="has" height="345" src="http://img.555519.xyz/uploads3/20220605/9a869475aa93d4b38ca0cef7b7bb99fd.jpg"></p> <p>3. 修改代码和取消修改</p> <p>在修改代码前，使用 git status查看当前的状态，代码提示的是 nothing to commit，修改并保存后，git.py 的名字变成了红色，当前 git.py 处于工作区已修改的状态。</p> <p>如果现在保存的代码不想要了，可以用 git checkout file 使代码回到修改之前，所有修改的内容都不会保存，如果是一个新增加的文件，可以使用 rm file 直接删除文件，回到修改前。</p> <pre class="has"><code># 查看当前代码状态 git status # 修改后回退到修改前 git checkout git.py</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="559" src="http://img.555519.xyz/uploads3/20220605/9f11495c620467c4669a12e18017bd66.jpg"></p> <p>4. 查看修改内容</p> <p>修改并保存代码后，可以使用 git diff 查看修改的内容。</p> <pre class="has"><code># 查看修改的代码内容 git diff</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="371" src="http://img.555519.xyz/uploads3/20220605/0d781e554e1298ad0c19d9b47fa71409.jpg"></p> <p>5. add添加代码和回退</p> <p>代码处于工作区修改后的状态，可以使用 git add file 或 git add . 将代码添加到暂存区。git add file 是添加指定的文件，</p> <p>git add . 是将整个工作区中保存了的内容都添加到暂存区。</p> <pre class="has"><code># 添加git.py到暂存区 git add git.py # 添加所有已修改代码到暂存区 git add .</code></pre> <p>代码添加到暂存区后，使用 git status 查看到当前的状态，git.py 的名字变成了绿色，说明当前代码处于暂存区。</p> <p>如果不想继续提交代码，将代码回退到前面的状态，可以使用 git reset HEAD git.py 回退到工作区修改后的状态。</p> <p>其中，git reset 是所有操作过程中都可以使用的回退命令，后面接要回退的文件名，不指定文件则回退所有的修改。</p> <p>HEAD 表示当前的版本，当前版本可以省略，HEAD~ 或 HEAD^ 表示当前版本的上一个版本，后面可以接多个~或^，也可以接数字。如HEAD~~~表示当前版本往前数的第3个版本，HEAD~5表示当前版本往前数的第5个版本。</p> <p>git reset 后还有三个参数， --soft回退到暂存区，--mixed回退到工作区修改后的状态，--mixed可以省略不写，--hard回退到修改之前的状态。</p> <p>所以 git reset 、 git reset git.py 、&nbsp;git reset HEAD git.py 和 git reset&nbsp;--mixed HEAD git.py 一样，都是将 git.py 回退到当前版本的修改后状态。</p> <pre class="has"><code># 回退代码到工作区修改后 git reset --mixed HEAD git.py</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="423" src="http://img.555519.xyz/uploads3/20220605/1dcc3ffadb42276808a6b60755b721c2.jpg"></p> <p>6. commit提交代码和回退</p> <p>代码处于暂存区时，可以使用 git commit -m "提交信息" 来将代码提交到仓库区。</p> <p>如果代码处于工作区，也可以使用 git commit -am "提交信息" 将代码从工作区提交到仓库区，相当于 git add 和 git commit 命令合并成一条命令，两步操作合并了。</p> <pre class="has"><code># 提交代码 git commit -m "add print**"</code></pre> <p>提交代码后，代码处于待 git push 的状态，现在 git status 已经不显示被修改的 git.py 了。</p> <p>一旦 git commit ，代码就立即生成一个新的版本号，要回退就是上一个版本了。</p> <p>如果代码已经 git cmmit 提交，想要回退，可以使用 git reset --soft HEAD~ 来将代码回退到暂存区。可以使用 git reset HEAD~ 或 git reset --mixed HEAD~&nbsp;回退到工作区修改之后， 可以使用 git reset --hard HEAD~ 回到工作区修改代码前。</p> <pre class="has"><code># 回退代码到暂存区 git reset --soft HEAD~</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="473" src="http://img.555519.xyz/uploads3/20220605/8b7818d8caed44cd03c63dd4c6fd35e5.jpg"></p> <p>7. push推代码到远程仓库</p> <p>在本地仓库区的代码，使用 git push origin 分支名 将代码推到远程仓库中，也可以直接 git push ，但建议还是跟上分支名。</p> <pre class="has"><code># 将代码推到远程仓库 git push origin master</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="322" src="http://img.555519.xyz/uploads3/20220605/489c60e267df5f9dee37043ce722d6c5.jpg"></p> <p>8. 查看远程仓库</p> <p>到远程仓库查看，现在的 GitProject 项目有三次提交(前两次分别是新建项目，创建git.py文件)，第三次提交的信息为 add print**， 正是我们刚才提交过来的代码，说明代码已经被推到了远程仓库。</p> <p><img loading="lazy" decoding="async" alt="" class="has" height="319" src="http://img.555519.xyz/uploads3/20220605/3596f1207687d9105af39331061e5074.jpg"></p> <p>9. 回退提交到远程仓库的代码</p> <p>如果代码已经推到了远程仓库，但是发现代码有问题，需要将代码回滚，还是可以使用 git reset 来回滚代码。</p> <p>回退到的位置依然是根据版本和 --soft --mixed --hard 三个参数来定位，回退的命令与前面的相同。</p> <p><img loading="lazy" decoding="async" alt="" class="has" height="284" src="http://img.555519.xyz/uploads3/20220605/e73b1c5221e5fede12dd08ba3a730bb5.jpg"></p> <p>10. 重新提交回退的代码</p> <p>现在将代码回退到了暂存区，现在的状态是待提交状态。</p> <p>也可以回退到工作区进行修改，重新提交代码，然后推代码到远程仓库。</p> <p>现在远程仓库的代码是第三次提交后的代码，本地代码回退了第三次提交，相当于是第二次提交之后的状态。在第二次提交的基础上重新提交，次数还是第三次。</p> <p>远程已经有了三次提交，又要推另一个第三次提交，这会造成冲突问题，无法推成功。所以，在推代码的时候要加上 --force 或 -f ，表示将本地回退后重新提交的代码覆盖远程仓库的提交。</p> <pre class="has"><code># 提交并覆盖远程仓库 git push origin master --force</code></pre> <p><img loading="lazy" decoding="async" alt="" class="has" height="311" src="http://img.555519.xyz/uploads3/20220605/c9083c4ba51c1ffcefd51cb5129a8e83.jpg"></p> <p>11. 重新提交后，远程仓库的提交次数还是3次，但是提交信息已经改变了。说明上次提交到远程仓库的代码已经被覆盖了。</p> <p><img loading="lazy" decoding="async" alt="" class="has" height="329" src="http://img.555519.xyz/uploads3/20220605/43e1c1f2be7d3364b0ef57fa34fa9ca6.jpg"></p> <p>上面所有的回退操作中，版本号都可以通过 HEAD 来确定版本的。</p> <p>每次 commit 提交都会生成一个唯一的 commit-id，要找到指定的版本，也可以使用 git log 或 git reflog 来查看提交过的 commit-id ，然后通过 commit-id 来指定版本。</p> <p>git reflog 可以查看所有分支的所有操作记录（包括commit和reset的操作），包括已经被删除的commit记录，git log 则不能察看已经删除了的commit记录。</p> <p>回退命令：</p> <pre class="has"><code># 回退到指定版本 git reset --hard commit-id</code></pre> <p>在工作中，更安全更常用的回退代码方式是 Revert ，Revert 操作会生成一个新的 commit-id ，然后将 Revert 操作提交，就回退了代码。如果回退掉的代码又要 Merged 进来，可以再次 Revert，又生成一个新的 commit-id，然后提交。</p> <p>使用 Revert 进行的每一次操作，都会有对应的 commit-id，并且 Revert&nbsp;不会对其他人的代码造成影响，所以更适用。</p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-222.htm">由浅入深，带你用JavaScript实现响应式原理（Vue2、Vue3响应式原理）</a></p>
                                        <p>下一个：<a href="/html/category/article-224.htm">jackson   json对象、实体类相互转换</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4095.htm">Docker基础 — 36、CMD指令和ENTRYPOINT指令的区别</a></h4>
                <p>目录  1、CMD指令和ENTRYPOINT指令说明 2、CMD指令只有最后一条生效的原因 3、CMD指令演示 4、ENTRYPOINT指令演示 5、总结   CMD指令和ENTRYPOINT指令作用</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3424.htm">用gcc查看c源文件的汇编代码   C++性能优化技术导论</a></h4>
                <p>1  用gcc查看c源文件的汇编代码    &nbsp;      gcc -S -o xx.s 2.c &nbsp; http://blog.csdn.net/heiyeshuwu/article/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2530.htm">MySQL中的TEXT数据类型是什么？</a></h4>
                <p>TEXT数据对象对于在MySQL数据库中存储长格式文本字符串很有用。以下是关于TEXT数据类型的一些要点-   TEXT是列类型的族，旨在用作大容量字符存储。   实际的TEXT列类型为四种类型-TI</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4479.htm">宠物狗粮上市公司 宠物狗粮上市公司有哪些</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于宠物狗粮上市公司的问题，于是小编就整理了3个相关介绍宠物狗粮上市公司的解答，让我们一起看看吧。我去店里买狗粮，老板推荐”爱贝“给</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3756.htm">接口隔离原则（Interface Segregation Principle，ISP）</a></h4>
                <p>接口隔离原则（Interface Segregation Principle，ISP）要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。  定义  客户端不应该</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6061.htm">动物打预防针去哪里打针好点（给动物打疫苗的官方部门）</a></h4>
                <p>摘要：       今天给各位分享动物打预防针去哪里打针好点的知识，其中也会对给动物打疫苗的官方部门进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、去哪里给猫.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4124.htm">谈谈高并发系统的一些解决方案</a></h4>
                <p>本文结合项目经验，整理一份大纲，供参考。 常用指标   RT（Response Time）：响应时间。可能会衍生出 TP999、TP99、TP95、TP90等指标。一般在几毫秒到几百毫秒之间。   Q</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4068.htm">Typora + EasyBlogImageForTypora直接上传图片到博客园_在线工具</a></h4>
                <p>1.描述问题 Gitee外链访问失效后一直在寻找有效措施，因为本人使用惯了typora，故使用typora + EasyBlogImageForTypora+Snipaste进行博客编写以及图片上传 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4478.htm">开宠物店大概需要多少投资（开宠物店投资多少钱一月能得多少利）</a></h4>
                <p>摘要：       今天给各位分享开宠物店大概需要多少投资的知识，其中也会对开宠物店投资多少钱一月能得多少利进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、开.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-5999.htm">动物医院管理中如何理解计划（动物医院管理制度）</a></h4>
                <p>摘要：       今天给各位分享动物医院管理中如何理解计划的知识，其中也会对动物医院管理制度进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、宠物医院的经营管.</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">38</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>