<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-223.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C语言：关键字&#8212;union（声明共用体类型） - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">C语言：关键字&#8212;union（声明共用体类型）</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/MQ0522/article/details/120025158?spm=1001.2014.3001.5501"  rel="nofollow">C语言32个关键字</a><br /> 有32个关键字详细说明，还有跳转链接！</p> <hr/> <h1> <a id="union__4" rel="nofollow"></a>一、union 简介</h1> <p><strong>union</strong> 是C语言中一种声明共用体的数据类型。<br /><strong>union</strong>(共用体)在某种程度上类似<strong>struct</strong>(结构体)的一种数据结构，可以包含很多数据结构和变量。<br /><strong>union</strong>(共用体)的特点：其内部的数据 <strong>共用一个内存首地址</strong>，<strong>共享同一段内存</strong>，以达到节省空间的目的。</p> <h1> <a id="union__9" rel="nofollow"></a>二、union 定义</h1> <h2> <a id="1__10" rel="nofollow"></a>1. 声明共用体类型</h2> <p><strong>一般形式</strong>具体如下：</p> <pre><code class="prism language-c"><span class="token keyword">union</span> 共用体名 <span class="token punctuation">{<!-- --></span>    <span class="token comment">//成员列表</span>    数据类型 成员名<span class="token punctuation">;</span>    数据类型 成员名<span class="token punctuation">;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span> </code></pre> <p>举例说明如下：</p> <pre><code class="prism language-c"><span class="token keyword">union</span> _MQ <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  </code></pre> <h1> <a id="2__29" rel="nofollow"></a>2. 定义共用体变量</h1> <p><strong>一般形式</strong>具体如下：</p> <pre><code class="prism language-c"><span class="token keyword">union</span> _MQ <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">//定义共用体变量</span> <span class="token keyword">union</span> _MQ mq<span class="token punctuation">;</span> </code></pre> <p><strong>合并简化形式</strong>具体如下：</p> <pre><code class="prism language-c"><span class="token keyword">union</span> _MQ <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span>mq<span class="token punctuation">;</span> </code></pre> <p><strong>匿名结构体形式</strong>具体如下：</p> <pre><code class="prism language-c"><span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span>mq<span class="token punctuation">;</span> </code></pre> <h2> <a id="3__typedef__56" rel="nofollow"></a>3. 使用 typedef 声明共用体类型，再定义共用体变量</h2> <p><strong>一般形式</strong>如下：</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">union</span> MQ <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span> _MQ<span class="token punctuation">;</span> <span class="token comment">//定义共用体变量，以下两种效果一样</span> <span class="token keyword">union</span> MQ mq<span class="token punctuation">;</span> _MQ mq<span class="token punctuation">;</span> </code></pre> <p><strong>匿名共用体</strong>形式具体如下：</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span> _MQ<span class="token punctuation">;</span> <span class="token comment">//定义共用体变量</span> _MQ mq<span class="token punctuation">;</span> </code></pre> <h1> <a id="union__78" rel="nofollow"></a>三、union 使用方法</h1> <h2> <a id="_79" rel="nofollow"></a>共用体变量成员----赋值（.）</h2> <p>初始化定义时----赋值</p> <pre><code class="prism language-c"><span class="token keyword">typedef</span> <span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span>_MQ<span class="token punctuation">;</span>   _MQ mq <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> 	<span class="token punctuation">.</span>data32<span class="token operator">=</span><span class="token number">0x12345678</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre> <p>初始化后----赋值</p> <pre><code class="prism language-c">mq<span class="token punctuation">.</span>data32<span class="token operator">=</span><span class="token number">0x12345678</span><span class="token punctuation">;</span> </code></pre> <h2> <a id="union_97" rel="nofollow"></a>union(共用体)----共用内存</h2> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>  <span class="token keyword">typedef</span> <span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span>   <span class="token keyword">char</span> data8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">int</span>  data32<span class="token punctuation">;</span> <span class="token punctuation">}</span>_MQ<span class="token punctuation">;</span>   _MQ mq <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>   <span class="token punctuation">.</span>data32<span class="token operator">=</span><span class="token number">0x12345678</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data[0]=0x%x\n"</span><span class="token punctuation">,</span>mq<span class="token punctuation">.</span>data8<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data[1]=0x%x\n"</span><span class="token punctuation">,</span>mq<span class="token punctuation">.</span>data8<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data[2]=0x%x\n"</span><span class="token punctuation">,</span>mq<span class="token punctuation">.</span>data8<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data[3]=0x%x\n"</span><span class="token punctuation">,</span>mq<span class="token punctuation">.</span>data8<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>运行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/c4a3e37504fb4f757aa803d0f7f3a0a6.jpg" alt="C语言：关键字---union（声明共用体类型）"></p> <h2> <a id="union_124" rel="nofollow"></a>union(共用体)----判断系统大小端模式</h2> <p><strong>我的电脑系统是小端模式</strong></p> <table> <tbody> <tr> <th></th> <th colspan="4">大端模式(高字节在前)</th> <th colspan="4">小端模式(低字节在前)</th> </tr> <tr> <td> data32</td> <td>data[0]</td> <td>data[1]</td> <td>data[2]</td> <td>data[3]</td> <td>data[0]</td> <td>data[1]</td> <td>data[2]</td> <td>data[3]</td> </tr> <tr> <td>0x12345678</td> <td>0x12</td> <td>0x34</td> <td>0x56</td> <td>0x78</td> <td>0x78</td> <td>0x56</td> <td>0x34</td> <td>0x12</td> </tr> </tbody> </table> <h1> <a id="union__159" rel="nofollow"></a>四、union 占用的内存空间</h1> <p>union(共用体) 占用的内存空间，是由其中占用内存最大的成员变量决定的。</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>  <span class="token keyword">typedef</span> <span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">char</span> data1<span class="token punctuation">;</span> 	<span class="token keyword">int</span>  data2<span class="token punctuation">;</span> 	<span class="token keyword">float</span> data3<span class="token punctuation">;</span> 	<span class="token keyword">double</span> data4<span class="token punctuation">;</span>  <span class="token punctuation">}</span>_MQ<span class="token punctuation">;</span>  _MQ mq<span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data1占用的%d字节\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span>data1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data2占用的%d字节\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span>data2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data3占用的%d字节\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span>data3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data4占用的%d字节\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mq<span class="token punctuation">.</span>data4<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"共用体占用的%d字节\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>mq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>运行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/de736e0bd998c2e1df4218981b092b2e.jpg" alt="C语言：关键字---union（声明共用体类型）"></p> <h1> <a id="_186" rel="nofollow"></a>五、位结构和共用体联合使用</h1> <p>具体程序如下：</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>  <span class="token keyword">typedef</span> <span class="token keyword">union</span>  <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">int</span>  data<span class="token punctuation">;</span> 	<span class="token keyword">struct</span>  	<span class="token punctuation">{<!-- --></span> 		<span class="token keyword">int</span> a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//第0位</span> 		<span class="token keyword">int</span> b<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//第1,2位</span> 		<span class="token keyword">int</span> c<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//第3,4,5位</span> 		<span class="token keyword">int</span> d<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//第6,7,8,9位</span> 		<span class="token keyword">int</span> e<span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">;</span><span class="token comment">//第10,11,12,13,14,15位</span> 	<span class="token punctuation">}</span>bit<span class="token punctuation">;</span> <span class="token punctuation">}</span>_MQ<span class="token punctuation">;</span>   _MQ mq<span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>    <span class="token punctuation">.</span>bit<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span>bit<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span>bit<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span>bit<span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token punctuation">.</span>bit<span class="token punctuation">.</span>e <span class="token operator">=</span> <span class="token number">26</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"data=0x%x\n"</span><span class="token punctuation">,</span>mq<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p>运行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230112/9512807f735a7f17cac61e36cfc62dbc.jpg" alt="C语言：关键字---union（声明共用体类型）"><br /> 解释说明：</p> <table> <thead> <tr> <th>变量</th> <th>15 14 13 12 11 10</th> <th>9 8 7 6</th> <th>5 4 3</th> <th>2 1</th> <th>0</th> </tr> </thead> <tbody> <tr> <td>a(1)</td> <td></td> <td></td> <td></td> <td></td> <td>1</td> </tr> <tr> <td>b(3)</td> <td></td> <td></td> <td></td> <td>11 (3)</td> <td></td> </tr> <tr> <td>c(6)</td> <td></td> <td></td> <td>110 (6)</td> <td></td> <td></td> </tr> <tr> <td>d(10)</td> <td></td> <td>1010 (10)</td> <td></td> <td></td> <td></td> </tr> <tr> <td>e(26)</td> <td>011010 (26)</td> <td></td> <td></td> <td></td> <td></td> </tr> </tbody> </table> <p><strong>结果是0b0110101010110111=0x6ab7</strong></p> <hr/> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/MQ0522/article/details/120055984"  rel="nofollow">C语言：位结构体</a></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-222.htm">vue 使用echarts绘制折线图</a></p>
                                        <p>下一个：<a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">图解Redis之数据结构篇压缩列表</a></h4>
                <p>前言 &nbsp;&nbsp;&nbsp;&nbsp;同整数集合一样压缩列表也不是基础数据结构，而是 Redis 自己设计的一种数据存储结构。它有点儿类似数组，通过一片连续的内存空间，来存储数据。不过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">SpringBoot扩展点EnvironmentPostProcessor_在线工具</a></h4>
                <p>一、背景 之前项目中用到了Apollo配置中心，对接Apollo配置中心后，配置中心的属性就可以在程序中使用了，那么这个是怎么实现的呢？配置中心的属性又是何时加载到程序中的呢？那么我们如果找到了这个是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">VS code vue安装Vetur后还是没有高亮显示之离线安装插件</a></h4>
                <p>前言 因为公司项目是在云桌面开发，没有网络，需要在有网络的电脑安装vscode及插件然后压缩复制到云桌面，但是 安装了Vetur 压缩过去后vue文件代码还是没有高亮，试过很多种方法，但是都无效。然后</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-218.htm">利用Python实现RSA加密解密方法实例_python</a></h4>
                <p>目录  前言 一、安装模块 二、生成密钥对 三、加密 四、解密 五、完整代码 总结    前言  加密技术在数据安全存储，数据传输中发挥着重要作用，能够保护用户隐私数据安全，防止信息窃取。RSA是一种</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></h4>
                <p>文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</a></h4>
                <p>一 Gin、rest full api和mysql实现增删改查  1 目前架构、含义以及对项目进行go mod gin_restful的项目目录。 每个目录的意思描述： 对gin_restful项目进</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">@Scheduled 动态配置cron</a></h4>
                <p>一、在application.yml中添加cron scheduled:   cron:     test:"*/10 * * * * ?" 二、在启动类添加@EnableScheduling @Sp</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>