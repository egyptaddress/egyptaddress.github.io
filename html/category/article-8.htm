<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-8.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Nacos配置管理基础应用 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Nacos配置管理基础应用</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <h1>1. Nacos配置管理模型</h1> <p>在Nacos控制太上，我们在配置管理中点击新建配置，需要我们输入Data ID、Group、配置内容等等。对于Nacos配置管理，它就是通过Namespace、group、Data ID能够定位到一个应用的配置集。</p> <p><img fetchpriority="high" decoding="async" alt="" height="746" src="http://img.555519.xyz/uploads3/20220901/73041a0ca99f3608afe8496bac8fefb0.jpg"></p> <hr/> <h2>Nacos配置管理的数据模型</h2> <p class="img-center"><img decoding="async" alt="" height="422" src="http://img.555519.xyz/uploads3/20220901/b057bb4db76f0894af186095b7979eeb.jpg"></p> <hr/> <h2>配置集(Data ID)</h2> <p><strong>在系统中，一个配置文件通常就是一个配置集，一个配置集可以包含了系统的各种配置信息。</strong></p> <p>例如，一个配置集可能包含了数据源、线程池、日志级别等配置项。</p> <p><strong>每个配置集都可以定义一个有意义的名称，就是配置集的ID即Data ID。</strong></p> <hr/> <h2>配置项</h2> <p><strong>配置集中包含的一个个配置内容就是配置项。它代表一个具体的可配置的参数与其值域，通常以 key=value 的形式存在。</strong></p> <p>例如我们常配置系统的日志输出级别（logLevel=INFO|WARN|ERROR） 就是一个配置项。</p> <hr/> <h2>配置分组(Group)</h2> <p>配置分组是对配置集进行分组，通过一个有意义的字符串（如 Buy 或 Trade ）来表示，不同的配置分组下可以有相同的配置集（Data ID）。</p> <p>当您在 Nacos 上创建一个配置时，如果未填写配置分组的名称，则配置分组的名称默认采用<strong>DEFAULT_GROUP</strong>。</p> <p><strong>配置分组的常见场景：可用于区分不同的项目或应用。</strong></p> <p>例如：学生管理系统的配置集，可以定义一个group为：STUDENT_GROUP。</p> <hr/> <h2>命名空间(Namespace)</h2> <p><strong>命名空间（namespace）可用于进行不同环境的配置隔离。</strong></p> <p>例如可以隔离开发环境、测试环境和生产环境，因为它们的配置可能各不相同，或者是隔离不同的用户，不同的开发人员使用同一个nacos管理各自的配置，可通过namespace隔离。</p> <p><strong>不同的命名空间下，可以存在相同名称的配置分组(Group) 或 配置集。</strong></p> <hr/> <h2>最佳实践</h2> <p>Nacos抽象定义了Namespace、Group、Data ID的概念，具体这几个概念代表什么，取决于我们把它们看成什么，这里推荐给大家一种用法，如下图：</p> <blockquote> <p><strong>Namespace ：代表不同环境，如开发、测试、生产环境。</strong></p> <p><strong>Group：代表某项目，如XX医疗项目、XX电商项目</strong></p> <p><strong>DataId：每个项目下往往有若干个工程，每个配置集(DataId)是一个工程的主配置文件</strong></p> </blockquote> <p><img decoding="async" alt="" height="287" src="http://img.555519.xyz/uploads3/20220901/701c7aa4496b2a92e69948447d493278.jpg"></p> <p><strong>获取某配置集需要指定：</strong></p> <ol> <li><strong>nacos服务地址，必须指定</strong></li> <li><strong>namespace，如不指定默认public</strong></li> <li><strong>group，如不指定默认 DEFAULT_GROUP</strong></li> <li><strong>dataId，必须指定</strong></li> </ol> <p>写个测试类，用于获取nacos控制台上创建的配置集：</p> <pre><code class="language-java">public class QueryRemoteConfigInfo { 	public static void main(String[] args) throws NacosException { 		String address = "127.0.0.1:8848"; 		String dataId = "nacos-simple-config.yaml"; 		// 命名空间：开发环境 		String namespace = "b21f780c-df9e-439c-9435-2367bb2f799b"; 		// 应用分组：默认 		String groupId = "DEFAULT_GROUP"; 		Properties properties = new Properties(); 		properties.put("serverAddr", address); 		ConfigService configService = NacosFactory.createConfigService(properties); 		String content = configService.getConfig(dataId, groupId, 5000); 		System.out.println(content); 	} }</code></pre> <p>上边测试类将从“127.0.0.1:8848”的nacos配置中心获取配置，通过以下信息定位配置集：</p> <blockquote> <p><strong>namespace:b21f780c-df9e-439c-9435-2367bb2f799b</strong></p> <p><strong>group:DEFAULT_GROUP</strong></p> <p><strong>Data id:nacos-simple-config.yaml</strong></p> </blockquote> <hr/> <h1>2.Nacos命名空间管理</h1> <h2>2.1&nbsp;命名空间的隔离设计</h2> <p>namespace 的设计是 nacos 基于此做多环境以及多租户（多个用户共同使用nacos）数据(配置和服务)隔离的。</p> <ul> <li>从一个租户 (用户)的角度来看，如果有多套不同的环境，那么这个时候可以根据指定的环境来创建不同的namespce，以此来实现多环境的隔离。</li> <li>例如，你可能有开发，测试和生产三个不同的环境，那么使用一套nacos 集群可以分别建以下三个不同的 namespace。如下图所示：</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="372" src="http://img.555519.xyz/uploads3/20220901/c210d506b6cbc3620bc7fa631aae0b4b.jpg"></p> <ul> <li>从多个租户 (用户)的角度来看，每个租户(用户)可能会有自己的 namespace，每个租户(用户)的配置数据以及注册的服务数据都会归属到自己的 namespace 下，以此来实现多租户间的数据隔离。</li> <li>进入用户管理，我们创建三个租户，依次为：张三、李四、王五。</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="458" src="http://img.555519.xyz/uploads3/20220901/639e3da55ff2ea2c662b6830e7d0ed37.jpg"></p> <ul> <li>分配好了之后，各租户用自己的账户名和密码登录后，创建自己的命名空间</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="518" src="http://img.555519.xyz/uploads3/20220901/002dd7dd59e45483f51a204851db8915.jpg"></p> <ul> <li>在nacos控制台上，进入角色管理，将角色与用户绑定：</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="477" src="http://img.555519.xyz/uploads3/20220901/770f13400614017af3c56d1cefe41511.jpg"></p> <ul> <li>进入权限管理，将角色与资源绑定：</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="455" src="http://img.555519.xyz/uploads3/20220901/394d812eda2ccc5dd7f90bf73fa6ecf0.jpg"></p> <ul> <li>&nbsp;通过创建三个租户、命名空间、权限隔离，最终将形成如下图所示的隔离效果：</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="482" src="http://img.555519.xyz/uploads3/20220901/4c38b2ff6924fe4289e2d7e8a7bec241.jpg"></p> <ul> <li>&nbsp;如下图所示，在不同租户下的命名空间里可以创建属于自己的配置列表。</li> </ul> <p><img loading="lazy" decoding="async" alt="" height="464" src="http://img.555519.xyz/uploads3/20220901/79d9742d12c0e934a5eb0c17a6753048.jpg"></p> <hr/> <h2>2.2 命名空间管理</h2> <p>命名空间(Namespace)是用于隔离多个环境的（如开发、测试、生产），而每个应用在不同环<br /> 境的同一个配置（如数据库数据源）的值是不一样的。因此，我们应针对企业项目实际研发流程、环境进行规划。</p> <p>我们现有开发、测试、生产三套环境，那么我们应该针对这三个环境分别建立三个namespace。</p> <p><img loading="lazy" decoding="async" alt="" height="608" src="http://img.555519.xyz/uploads3/20220901/7921e05876ddf757857ca4bbf163ff19.jpg"></p> <p>&nbsp;建立好三个命名空间后，在配置管理和服务列表下都会包含用于切换namespace的table按钮，如下图：<img loading="lazy" decoding="async" alt="" height="420" src="http://img.555519.xyz/uploads3/20220901/52e4c677e75b59aa48a8eda9f0d6b8ac.jpg"></p> <p>在编写程序获取配置集过程中没有感知到这个参数的输入，那么 nacos 统一会使用一个默认的 namespace作为输入，nacos config 会使用一个空字符串作为默认的参数来初始化，对应界面上就是public命名空间。</p> <blockquote> <p><strong>注意：</strong></p> <p><strong>命名空间public是nacos的一个保留空间，如果我们需要创建属于自己的namespace，则不要和public重名，以一个实际业务场景有具体语义的名字来命名，以免带来字面上不容易区分自己是哪一个namespace。</strong></p> <p><strong>其次，我们在项目开发中，如果需要指定namespace命名空间参数时，则一定要填写命名空间的ID，而不是名称。</strong></p> </blockquote> <p><strong>举个栗子：</strong></p> <p><img loading="lazy" decoding="async" alt="" height="338" src="http://img.555519.xyz/uploads3/20220901/d62b8a75fccc7c52a58e102f29abb069.jpg"></p> <hr/> <h1>3. Nacos的配置管理</h1> <p>Nacos支持基于Namespace和Group的配置分组管理，以便用户更灵活的根据自己的需要按照环境或者应用、模块等分组管理微服务的大量配置，在配置管理中主要提供了配置历史版本、回滚、订阅者查询等核心管理能力。</p> <h2>3.1&nbsp;配置列表</h2> <p>点击Nacos控制台的配置管理-&gt;配置列表菜单，即可看到以下界面展示：</p> <p><img loading="lazy" decoding="async" alt="" height="472" src="http://img.555519.xyz/uploads3/20220901/60e54aceefe8097d6edcff120af56d60.jpg"></p> <p>&nbsp;界面中展示了不同namespace下的配置集列表，可点击左上角的不同namespace进行切换。<br /> 右上角“+"号或点击某配置集后的 编辑 按钮可进入配置集编辑器。</p> <ul> <li><strong>多配置格式编辑器</strong></li> </ul> <p>Nacos支持 YAML、Properties、TEXT、JSON、XML、HTML 等常见配置格式在线编辑、语法高亮、格式校验，帮助用户高效编辑的同时大幅降低格式错误带来的风险。</p> <p><img loading="lazy" decoding="async" alt="" height="571" src="http://img.555519.xyz/uploads3/20220901/59542ab9917a13228e5e157d7bf407c2.jpg"></p> <p>Nacos支持配置标签的能力，帮助用户更好、更灵活的做到基于标签的配置分类及管理。同时支持用户对配置及其变更进行描述，方面多人或者跨团队协作管理配置。</p> <ul> <li><strong>内容比较</strong></li> </ul> <p>Nacos的配置管理支持配置集内容比较能力，帮助我们校验修改的内容，降低改错带来的风险。</p> <p><img loading="lazy" decoding="async" alt="" height="818" src="http://img.555519.xyz/uploads3/20220901/d2682dac9d946362320b762ff366b48e.jpg"></p> <ul> <li><strong>&nbsp;导出</strong></li> </ul> <p><img loading="lazy" decoding="async" alt="" height="576" src="http://img.555519.xyz/uploads3/20220901/717894e7f71f5ec32539b623aa41dcb4.jpg"></p> <ul> <li><strong>&nbsp;导入配置</strong></li> </ul> <p>点击右上角的 导入配置 ，可选择nacos支持的配置文件格式进行导入文件并恢复为nacos配置集。</p> <p><img loading="lazy" decoding="async" alt="" height="536" src="http://img.555519.xyz/uploads3/20220901/99b6eddfa3be4d36a98ab8f217299309.jpg"></p> <ul> <li><strong>克隆配置集</strong></li> </ul> <p>选择所需配置文件记录，点击<strong>克隆</strong>&nbsp;按钮，在弹出的克隆对话框中，选择将配置迁移至其他namespace中。如下图红框所示。</p> <p><img loading="lazy" decoding="async" alt="" height="585" src="http://img.555519.xyz/uploads3/20220901/09c45912bc120579f0722fae2bde816c.jpg"></p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-7.htm">taro跳转到tabBar报错问题</a></p>
                                        <p>下一个：<a href="/html/category/article-9.htm">如何在代码层面提高CPU分支预测效率</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-247.htm">使用类在C ++中实现矢量数量</a></h4>
                <p>在本教程中，我们将讨论一个程序，以了解如何使用类在C ++中实现向量数量。 向量量既具有幅度又具有方向性。在这里，我们将使用类来实现它们，然后对它们执行基本操作。 示例 #include&nbsp;&</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-227.htm">企业应用架构研究系列十九：Docker开发环境</a></h4>
                <p>　　软件行业流行这样一个说法，由于Docker 技术的成熟和该技术被广大厂商的普遍应用，成就了微服务领域的快速成长，衍生了云原生技术和公有云的进一步推广。我个人认为Dockers 技术、微服务技术、云</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Springboot使用@Cacheable注解实现数据缓存</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cach</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在日常开发中，我学使用原生JavaScript获取元素的时候，最常用的方法就document.getEl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-236.htm">「BUAA OO Unit 2 HW8」第二单元总结_在线工具</a></h4>
                <p>「BUAA OO Unit 2 HW8」第二单元总结   目录   「BUAA OO Unit 2 HW8」第二单元总结  Part 0 前言  Part 1 第五次作业  1.1 作业要求 1.2 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">Java中时间类使用方法总结</a></h4>
                <p>//java.util.Date; Date类用法Date date = new Date();System.out.println(date);System.out.println("=======</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">@Scheduled 动态配置cron</a></h4>
                <p>一、在application.yml中添加cron scheduled:   cron:     test:"*/10 * * * * ?" 二、在启动类添加@EnableScheduling @Sp</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">vue动态获取ref方式</a></h4>
                <p>&lt;div v-for="(item,index) in list" :key="index"              :class=" circleAnimation === 1 ? 'bal</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>