<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-194.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>ASP.NET Core使用EF查询数据_实用技巧 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">ASP.NET Core使用EF查询数据_实用技巧</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> 1.3.1如果这是跟踪查询（后续会讲到），EF会检查数据是否表示已在上下文实例的更改跟踪器中的实体中。</li> <li><i class="be be-arrowright"></i> 1.3.2如果这是非跟踪查询（后续会讲到），EF会检查数据是否表示已在此查询的结果集中的实体中。</li> </ul><span class="log-zd"><span class="log-close"><i class="be be-cross"></i><strong>目录</strong></span></span></div>  			</div> <h2>1.查询生命周期</h2> <p>在进入正题时候，我们先来了解EF Core查询的生命周期。</p> <h3>1.1LINQ查询会由Entity Framework Core处理并生成给数据库提供程序可处理的表示形式（说白了就是生成给数据库可识别数据形式）。</h3> <ul> <li>发送的查询结果（查询表示形式）会被缓存，以便每次执行查询时无需进行1.1中处理。</li> </ul> <h3>1.2查询结果（查询表示形式）会传递到数据库提供程序</h3> <ul> <li>数据库提供程序会识别出查询的哪些部分可以在数据库中求值。</li> <li>查询的这些部分会转换为特定数据库的查询语言（例如，关系数据库的T-SQL）。</li> <li>一个或多个查询会发送到数据库并返回结果集（返回的是数据库中的值，而不是实体实例中的）。</li> </ul> <h3>1.3对于结果集中的每一项</h3> <span class="directory"></span><h4 id="title-0">1.3.1如果这是跟踪查询（后续会讲到），EF会检查数据是否表示已在上下文实例的更改跟踪器中的实体中。</h4> <ul> <li>如果是，则会返回现有实体。</li> <li>如果不是，则会创建新实体、设置更改跟踪并返回该新实体。</li> </ul> <span class="directory"></span><h4 id="title-1">1.3.2如果这是非跟踪查询（后续会讲到），EF会检查数据是否表示已在此查询的结果集中的实体中。</h4> <ul> <li>如果是，则会返回现有实体。非跟踪查询使用弱引用跟踪已返回的实体。如果具有相同标识的上一个结果超出范围，并运行垃圾回收，则可能会获得新的实体实例。</li> <li>如果不是，则会创建新实体并返回该新实体。</li> </ul> <h3>1.4执行查询时</h3> <p>当调用LINQ运算符时，只会生成查询的内存中表示形式。当我们使用查询结果（查询表示形式）时才会发送到数据库。导致查询发送到数据库的最常见操作如下：</p> <ul> <li>在for循环中循环访问结果：</li> </ul> <div class="ay1code"> <pre class="brush:csharp;">var blogs = from b in _context.Blog           select new           {              b.BlogId,              b.Url           };  //触发数据库查询  foreach(var blog in blogs)  {      var id = blog.BlogId;  }</pre> </div> <p>当我们执行完LINQ运算符的时候，从SQL Server Profiler监控里面可以看到，并没有执行的SQL语句，也就是说查询结果blogs并没有立即发送给数据库获取返回数据结果集。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/c83a2b695488e2f9a30557a64780cd66.jpg"></p> <p>而当我们调试进去for循环时候，SQL Server Profiler监控里面可以看到出现了执行SQL语句。也就是说这时候查询结果blogs才执行发送给数据库返回结果集。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/dcc621186d69678c0f53a8baafeda32b.jpg"></p> <ul> <li>使用ToList、ToArray、Single、Count等运算符</li> </ul> <div class="ay1code"> <pre class="brush:csharp;">_context.Blog.ToList();  _context.Blog.ToArray();  _context.Blog.Count();  _context.Blog.Single();  _context.Blog.First();</pre> </div> <p>执行这种形式运算符也会立即发送到数据库获取结果集的。具体执行过程呈现，这里大伙自行测试吧。</p> <ul> <li>将查询结果数据绑定到UI</li> </ul> <h2>2.跟踪查询与非跟踪查询</h2> <p>在1小节生命周期里面我们有提及过跟踪与非跟踪查询，现在我们来了解下这两种查询区别。</p> <h3>2.1跟踪查询</h3> <p>返回实体类型的查询是默认会被跟踪的，这表示如果这些实体实例有更改行为，会通过SaveChanges()持久化将更改的值更新到数据库中，但是如果更改的值跟实体实例的值相同，则不会持久化提交数据到数据库，这就是跟踪查询。在以下示例中，将检测到对博客链接所做的更改，并在 SaveChanges() 期间将这些更改持久化到数据库中。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/0ddeb05f5114f51ec718063ce21a5264.jpg"></p> <div class="ay1code"> <pre class="brush:csharp;">//返回blog实体类型的查询是默认会被跟踪  var blog = _context.Blog.SingleOrDefault(b => b.BlogId == 1);  //检测对博客链接所做的更改  blog.Url = "1";  //持久化保存到数据库中  _context.SaveChanges();</pre> </div> <p>实体初始链接值是1，当我们点击Save按钮保存的时候，检测到对博客链接所做的更改值还是1的时候，并不会提交更改值到数据库中的。看看下图SQL Server Profiler监控就知道，并没有监控到对应有更新的T-SQL语句，也就是说并没有执行更新操作：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/d895326ca4c61642439772e7f2924935.jpg"></p> <p>当我们再把链接值更改为2点击保存时候，EF Core检测到博客链接值已经从1更改为2，就会持久化保存到数据库中。</p> <div class="ay1code"> <pre class="brush:csharp;">blog.Url = "2";</pre> </div> <p>废话少说，直接上图：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/75bf496b062190226e7edfae90231c52.jpg"></p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/6836fc5983ba918c42f84932aee9d78d.jpg"></p> <h3>2.2非跟踪查询</h3> <p>如果不需要更新从数据库中检索到的实体，则应使用非跟踪查询。可以将单个查询替换为非跟踪查询。</p> <div class="ay1code"> <pre class="brush:csharp;">var blogs = context.Blogs  //不用跟踪查询      .AsNoTracking()      .ToList();  //或者在上下文实例级别更改默认跟踪行为  context.ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;  var blogs = context.Blogs.ToList();</pre> </div> <p>还是一样老谭秘方事例，当你加上非跟踪查询标识后，无论怎么更改博客链接值，都不会持久化保存数据到数据库中的。</p> <div class="ay1code"> <pre class="brush:csharp;">var blogs = _context.Blog  //不用跟踪查询  .AsNoTracking()  .SingleOrDefault(m => m.BlogId == 1);  blogs.Url = "2";  _context.SaveChanges();</pre> </div> <p>直接上图跟踪结果：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/0062f882a66f86a3b25d4a9d1e26bd48.jpg"></p> <p>在这相信大家从该小节跟踪与非跟踪查询中事例描述中总算对1小节查询生命周期有一定理解吧。</p> <h3>2.3跟踪和自定义投影</h3> <p>即使查询的结果类型不是实体类型，默认情况下EF Core也会跟踪结果中包含的实体类型。在以下返回匿名类型的查询中，结果集中的Blog实例会被跟踪。</p> <div class="ay1code"> <pre class="brush:csharp;">var blog = context.Blogs      .Select(b =>          new          {              Blog = b,              PostCount = b.Posts.Count()          });</pre> </div> <p>如果结果集包含来自LINQ组合的实体类型，EF Core将跟踪它们。</p> <div class="ay1code"> <pre class="brush:csharp;">var blog = context.Blogs      .Select(b =>          new          {              Blog = b,              Post = b.Posts.OrderBy(p => p.Rating).LastOrDefault()          });</pre> </div> <p>如果结果集不包含任何实体类型，则不会执行跟踪。在以下查询中，我们返回匿名类型（具有实体中的某些值，但没有实际实体类型的实例）。查询中没有任何被跟踪的实体。</p> <div class="ay1code"> <pre class="brush:csharp;">var blog = context.Blogs      .Select(b =>          new          {              Id = b.BlogId,              Url = b.Url          });</pre> </div> <p>EF Core支持执行顶级投影中的客户端评估。如果EF Core具体化实体实例以进行客户端评估，则会跟踪该实体实例。此处，由于我们要将blog实体传递到客户端方法StandardizeURL，因此EF Core也会跟踪博客实例。</p> <div class="ay1code"> <pre class="brush:csharp;">var blogs = context.Blogs      .OrderByDescending(blog => blog.Rating)      .Select(blog => new      {          Id = blog.BlogId,          Url = StandardizeUrl(blog)      })      .ToList();  public static string StandardizeUrl(Blog blog)  {      var url = blog.Url.ToLower();      if (!url.StartsWith("http://"))      {          url = string.Concat("http://", url);      }      return url;  }</pre> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-193.htm">《易学C++》第15章 再识对象</a></p>
                                        <p>下一个：<a href="/html/category/article-195.htm">Go使用Gin+mysql实现增删改查</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4124.htm">谈谈高并发系统的一些解决方案</a></h4>
                <p>本文结合项目经验，整理一份大纲，供参考。 常用指标   RT（Response Time）：响应时间。可能会衍生出 TP999、TP99、TP95、TP90等指标。一般在几毫秒到几百毫秒之间。   Q</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3730.htm">vue-v-model 常用修饰符</a></h4>
                <p>&lt;div id="app"&gt;     &lt;h1&gt;懒加载lazy&lt;/h1&gt;     &lt;h3&gt;不让输入框实时同步&lt;/h3&gt;     &lt;inp</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2239.htm">【面试普通人VS高手系列】HashMap是怎么解决哈希冲突的？</a></h4>
                <p>常用数据结构基本上是面试必问的问题，比如HashMap、LinkList、ConcurrentHashMap等。 关于HashMap，有个学员私信了我一个面试题说： “HashMap是怎么解决哈希冲突</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4515.htm">真正的宠物狗免费领养网站有哪些地方（真正的宠物狗免费领养网站有哪些地方呢）</a></h4>
                <p>摘要：       今天给各位分享真正的宠物狗免费领养网站有哪些地方的知识，其中也会对真正的宠物狗免费领养网站有哪些地方呢进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4068.htm">Typora + EasyBlogImageForTypora直接上传图片到博客园_在线工具</a></h4>
                <p>1.描述问题 Gitee外链访问失效后一直在寻找有效措施，因为本人使用惯了typora，故使用typora + EasyBlogImageForTypora+Snipaste进行博客编写以及图片上传 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6193.htm">戴娇倩（戴娇倩老公）</a></h4>
                <p>本文目录         戴娇倩如懿传里演什么？  她没有参演如懿传，很多人都觉得戴娇倩就是在《如懿传》中饰演阿箬的演员，但其实并不是，只是长得相像而已。在前几年的时候，戴娇倩还生下了一位女儿，之后更</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2823.htm">jQuery实现呼吸灯轮播图</a></h4>
                <p>jQuery实现呼吸灯轮播图  jQuery实现呼吸灯轮播图    jQuery实现呼吸灯轮播图 &lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;he</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3756.htm">接口隔离原则（Interface Segregation Principle，ISP）</a></h4>
                <p>接口隔离原则（Interface Segregation Principle，ISP）要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。  定义  客户端不应该</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6105.htm">动物医院取什么名字形容敬业的（动物医院是干嘛的）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物医院取什么名字形容敬业的，以及动物医院是干嘛的对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、医院起名大全2、...        本</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6192.htm">中国吊扇十大电风扇品牌(吊扇品牌有哪些)</a></h4>
                <p>排行相关内容，小编在这里做了整理，希望能对大家有所帮助，关于吊扇品牌排行信息，一起来了解一下吧！ 吊扇10大品牌       吊扇10大品牌有美的Midea、钻石、艾美特、华生wahson、格力GRE</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>