<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-194.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>python与hadoop/hdfs的交互，读取文件/下载/上传/删除 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">python与hadoop/hdfs的交互，读取文件/下载/上传/删除</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#1_python__command_2" rel="nofollow">1.用 python 运行 command</a></li> <li><a href="#2hdfs_20" rel="nofollow">2.hdfs的相关命令</a></li> <li> <ul> <li><a href="#ls_21" rel="nofollow">ls：返回文件或目录的信息</a></li> <li><a href="#get_35" rel="nofollow">get：下载文件到本地</a></li> <li><a href="#put_40" rel="nofollow">put：从本地文件系统中复制单个或多个源路径到目标文件系统。也支持从标准输入中读取输入写入目标文件系统。</a></li> <li><a href="#copyFromLocalhdfs_45" rel="nofollow">copyFromLocal：限定从hdfs复制到本地</a></li> <li><a href="#copyToLocalhdfs_50" rel="nofollow">copyToLocal：限定从本地复制到hdfs</a></li> <li><a href="#rmhdfs_55" rel="nofollow">rm：删除hdfs上的文件，只删除非空目录和文件</a></li> <li><a href="#rm_rhdfs_64" rel="nofollow">rm -r：递归删除hdfs上的文件，会删除目录</a></li> <li><a href="#test___75" rel="nofollow">test + 参数：检查文件是否存在</a></li> </ul> </li> </ul> </div> <h1> <a id="1_python__command_2" rel="nofollow"></a>1.用 python 运行 command</h1> <pre><code class="prism language-python"><span class="token comment"># import the python subprocess module</span> <span class="token keyword">import</span> subprocess  <span class="token keyword">def</span> <span class="token function">run_cmd</span><span class="token punctuation">(</span>args_list<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token triple-quoted-string string">"""         run linux commands         """</span>         <span class="token comment"># import subprocess</span>         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Running system command: {0}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>args_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         proc <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span>args_list<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span>         s_output<span class="token punctuation">,</span> s_err <span class="token operator">=</span> proc<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span>         s_return <span class="token operator">=</span>  proc<span class="token punctuation">.</span>returncode         <span class="token keyword">return</span> s_return<span class="token punctuation">,</span> s_output<span class="token punctuation">,</span> s_err  </code></pre> <h1> <a id="2hdfs_20" rel="nofollow"></a>2.hdfs的相关命令</h1> <h2> <a id="ls_21" rel="nofollow"></a>ls：返回文件或目录的信息</h2> <p>如果是文件，则按照如下格式返回文件信息：<br /><code>文件名 &lt;副本数&gt; 文件大小 修改日期 修改时间 权限 用户ID 组ID</code><br /> 如果是目录，则返回它直接子文件的一个列表，就像在Unix中一样。目录返回列表的信息如下：<br /><code>目录名 \&lt;dir&gt; 修改日期 修改时间 权限 用户ID 组ID</code><br /> 示例：<br /><code>hadoop fs -ls /user/hadoop/file1 /user/hadoop/file2 hdfs://host:port/user/hadoop/dir1 /nonexistentfile</code><br /> 返回值：<br /><code>成功返回0，失败返回-1。</code></p> <pre><code class="prism language-python"><span class="token comment"># Run Hadoop ls command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-ls'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> lines <span class="token operator">=</span> out<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="get_35" rel="nofollow"></a>get：下载文件到本地</h2> <pre><code class="prism language-python"><span class="token comment"># Run Hadoop get command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-get'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">,</span> <span class="token string">'local_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="put_40" rel="nofollow"></a>put：从本地文件系统中复制单个或多个源路径到目标文件系统。也支持从标准输入中读取输入写入目标文件系统。</h2> <pre><code class="prism language-python"><span class="token comment"># Run Hadoop put command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-put'</span><span class="token punctuation">,</span> <span class="token string">'local_file'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="copyFromLocalhdfs_45" rel="nofollow"></a>copyFromLocal：限定从hdfs复制到本地</h2> <pre><code class="prism language-python"><span class="token comment"># Run Hadoop copyFromLocal command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-copyFromLocal'</span><span class="token punctuation">,</span> <span class="token string">'local_file'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="copyToLocalhdfs_50" rel="nofollow"></a>copyToLocal：限定从本地复制到hdfs</h2> <pre><code class="prism language-python"><span class="token comment"># Run Hadoop copyToLocal command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-copyToLocal'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">,</span> <span class="token string">'local_file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="rmhdfs_55" rel="nofollow"></a>rm：删除hdfs上的文件，只删除非空目录和文件</h2> <pre><code class="prism language-python"><span class="token comment"># hdfs的常规命令</span> <span class="token comment"># hdfs dfs -rm -skipTrash /path/to/file/you/want/to/remove/permanently</span>  <span class="token comment"># Run Hadoop remove file command in Python</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-rm'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-rm'</span><span class="token punctuation">,</span> <span class="token string">'-skipTrash'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="rm_rhdfs_64" rel="nofollow"></a>rm -r：递归删除hdfs上的文件，会删除目录</h2> <pre><code class="prism language-python"><span class="token comment"># hdfs的常规命令</span> <span class="token comment"># rm -r</span> <span class="token comment"># HDFS Command to remove the entire directory and all of its content from HDFS.</span> <span class="token comment"># Usage: hdfs dfs -rm -r &lt;path&gt;</span>      <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-rm'</span><span class="token punctuation">,</span> <span class="token string">'-r'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token operator">=</span> run_cmd<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-rm'</span><span class="token punctuation">,</span> <span class="token string">'-r'</span><span class="token punctuation">,</span> <span class="token string">'-skipTrash'</span><span class="token punctuation">,</span> <span class="token string">'hdfs_file_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <h2> <a id="test___75" rel="nofollow"></a>test + 参数：检查文件是否存在</h2> <pre><code class="prism language-python">Check <span class="token keyword">if</span> a <span class="token builtin">file</span> exist <span class="token keyword">in</span> HDFS Usage<span class="token punctuation">:</span> hadoop fs <span class="token operator">-</span>test <span class="token operator">-</span><span class="token punctuation">[</span>defsz<span class="token punctuation">]</span> URI   Options<span class="token punctuation">:</span>   <span class="token operator">-</span>d<span class="token punctuation">:</span> f the path <span class="token keyword">is</span> a directory<span class="token punctuation">,</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token operator">-</span>e<span class="token punctuation">:</span> <span class="token keyword">if</span> the path exists<span class="token punctuation">,</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token operator">-</span>f<span class="token punctuation">:</span> <span class="token keyword">if</span> the path <span class="token keyword">is</span> a <span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token operator">-</span>s<span class="token punctuation">:</span> <span class="token keyword">if</span> the path <span class="token keyword">is</span> <span class="token keyword">not</span> empty<span class="token punctuation">,</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">.</span> <span class="token operator">-</span>z<span class="token punctuation">:</span> <span class="token keyword">if</span> the <span class="token builtin">file</span> <span class="token keyword">is</span> zero length<span class="token punctuation">,</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">.</span> Example<span class="token punctuation">:</span>   hadoop fs <span class="token operator">-</span>test <span class="token operator">-</span>e filename   hdfs_file_path <span class="token operator">=</span> <span class="token string">'/tmpo'</span> cmd <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'hdfs'</span><span class="token punctuation">,</span> <span class="token string">'dfs'</span><span class="token punctuation">,</span> <span class="token string">'-test'</span><span class="token punctuation">,</span> <span class="token string">'-e'</span><span class="token punctuation">,</span> hdfs_file_path<span class="token punctuation">]</span> ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err <span class="token operator">=</span> run_cmd<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">,</span> out<span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token keyword">if</span> ret<span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'file does not exist'</span><span class="token punctuation">)</span> </code></pre> <p>本文翻译自 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://community.cloudera.com/t5/Community-Articles/Interacting-with-Hadoop-HDFS-using-Python-codes/ta-p/245163"  rel="nofollow">Interacting-with-Hadoop-HDFS-using-Python-codes</a><br /> 其他参考文档：<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_shell.html"  rel="nofollow">hadoop shell指南</a><br /> hdfs工具 <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://snakebite.readthedocs.io/en/latest/cli.html"  rel="nofollow">snakebite</a></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-193.htm">Metalama简介5.配合VisualStudio自定义重构或快速操作功能_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-195.htm">C++的命名空间</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">图解Redis之数据结构篇压缩列表</a></h4>
                <p>前言 &nbsp;&nbsp;&nbsp;&nbsp;同整数集合一样压缩列表也不是基础数据结构，而是 Redis 自己设计的一种数据存储结构。它有点儿类似数组，通过一片连续的内存空间，来存储数据。不过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-244.htm">vue实现页面刷新动画_vue.js_</a></h4>
                <p>本文实例为大家分享了vue实现页面刷新动画的具体代码，供大家参考，具体内容如下 做一个vue的页面刷新动画，找了好多动画样式，感谢大佬们造的轮子。 主要就是在index.html文件里面写一个动画样式</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">vue的自动化路由+分模块管理+路由懒加载</a></h4>
                <p>近期单独做了一个系统项目，项目不大但是页面太多了，为了后期维护管理容易，做了个自动化加载路由以及模块化的管理。在此记录一下。 直接撸代码 1.首先看目录  router下的index.js是路由配置文</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></h4>
                <p>问题描述： 发送POST请求，控制台打印： 错误信息:Read timed out executing POST http://xxx 解决方法： 在配置文件中添加超时配置即可</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">docker存储路径修改</a></h4>
                <p>docker修改对应的存储路径 修改daemon.json的内容不进行复述。 假设你已经编辑好/etc/docker/daemon.json文件的graph配置，要将其从d01修改到d02 {   "</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">Vue3项目中的骨架屏</a></h4>
                <p>实现场景:刚进入页面的时候,需要后端接口回传的数据,还没有回来,为了客户有更好的体验,需要设置骨架屏,效果图如下:  &nbsp;实现步骤: 1.设置通用组件骨架屏(可以设置的属性:高，宽，背景颜色，</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></h4>
                <p>前几天有个老项目找到我，有多老呢？比我工作年限都长，见到这个项目我还得叫一声前辈。 这个项目目前使用非常稳定，十多年了没怎么更新过，现在客户想加一个小功能：在线预览Word文档。 首先想到的是用第三方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Spark连接Hive，进行Hive数据表的读写操作</a></h4>
                <p>基础环境   Hadoop安装-1，hadoop安装-2  spark安装 Hive安装   配置  将Hive的conf目录下的hive-site-xml文件拷贝到spark的conf目录下； 将H</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></h4>
                <p>文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>