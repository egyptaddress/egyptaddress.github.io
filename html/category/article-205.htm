<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-205.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>SpringBoot扩展点EnvironmentPostProcessor_在线工具 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">SpringBoot扩展点EnvironmentPostProcessor_在线工具</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="一背景">一、背景</h1> <p>之前项目中用到了<code>Apollo</code>配置中心，对接Apollo配置中心后，配置中心的属性就可以在程序中使用了，那么这个是怎么实现的呢？配置中心的属性又是何时加载到程序中的呢？<strong>那么我们如果找到了这个是怎么实现的是否就可以 <code>从任何地方加载配置属性</code>、<code>配置属性的加解密功能呢</code>？</strong></p> <h1 id="二需求">二、需求</h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/7a9c91181f35ceb17bd484a553105237.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"><br /><code>从上图中得知，我们的需求很简单，即我们自己定义的属性需要比配置文件中的优先级更高。</code></p> <h1 id="三分析">三、分析</h1> <h2 id="1什么时候向springboot中加入我们自己的配置属性">1、什么时候向SpringBoot中加入我们自己的配置属性</h2> <p>当我们想在Bean中使用配置属性时，那么我们的配置属性必须在Bean实例化之前就放入到Spring到Environment中。即我们的接口需要在 <code>application context  refreshed</code> 之前进行调用，而 <code>EnvironmentPostProcessor</code> 正好可以实现这个功能。</p> <h2 id="2获取配置属性的优先级">2、获取配置属性的优先级</h2> <p>我们知道在 Spring中获取属性是有优先级的。<br /> 比如我们存在如下配置属性 <code>username</code></p> <pre><code>├─application.properties │   &gt;&gt; username=huan ├─application-dev.properties │   &gt;&gt; username=huan.fu </code></pre> <p>那么此时 <code>username</code> 的值是什么呢？此处借用 <code>Apollo</code>的一张图来说解释一下这个问题。</p> <p>参考链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.apolloconfig.com/#/zh/design/apollo-design"  target="_blank"  rel="nofollow">https://www.apolloconfig.com/#/zh/design/apollo-design</a><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/a323e556860f70eca10cbfe8ef262abd.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"><br /> Spring从3.1版本开始增加了<code>ConfigurableEnvironment</code>和<code>PropertySource</code>：</p> <p><code>ConfigurableEnvironment</code></p> <ul> <li>Spring的ApplicationContext会包含一个Environment（实现ConfigurableEnvironment接口）</li> <li>ConfigurableEnvironment自身包含了很多个PropertySource</li> </ul> <p><code>PropertySource</code></p> <ul> <li>属性源</li> <li>可以理解为很多个Key - Value的属性配置</li> </ul> <p>由上方的原理图可知,<code>key</code>在最开始出现的<code>PropertySource</code>中的优先级更高，上面的例子在<code>SpringBoot</code>中<code>username</code>的值为<code>huan.fu</code>。</p> <h2 id="3何时加入我们自己的配置">3、何时加入我们自己的配置</h2> <p>由第二步 <code>获取配置属性的优先级</code> 可知，<code>PropertySource</code> 越靠前越先执行，那么要我们配置生效，就必须放在越前面越好。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/4699aad908beac2167997f8db6b888f6.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"><br /> 由上图可知，SpringBoot加载各种配置是通过<code>EnvironmentPostProcessor</code>来实现的，而具体的实现是<code>ConfigDataEnvironmentPostProcessor</code>来实现的。那么我们自己编写一个<code>EnvironmentPostProcessor</code>的实现类，然后在<code>ConfigDataEnvironmentPostProcessor</code>后执行，并加入到 <code>Environment</code>中的第一位即可。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/86af89cfabe9288ac949c730a08f5f65.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"></p> <h1 id="四实现">四、实现</h1> <h2 id="1引入springboot依赖">1、引入SpringBoot依赖</h2> <pre><code class="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"          xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;     &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;     &lt;parent&gt;         &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;         &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;         &lt;version&gt;2.6.6&lt;/version&gt;         &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;     &lt;/parent&gt;     &lt;groupId&gt;com.huan.springcloud&lt;/groupId&gt;     &lt;artifactId&gt;springboot-extension-point&lt;/artifactId&gt;     &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;     &lt;name&gt;springboot-extension-point&lt;/name&gt;     &lt;properties&gt;         &lt;java.version&gt;1.8&lt;/java.version&gt;     &lt;/properties&gt;     &lt;dependencies&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;         &lt;/dependency&gt;     &lt;/dependencies&gt; &lt;/project&gt;  </code></pre> <h2 id="2在applicationproperties中配置属性">2、在application.properties中配置属性</h2> <p><code>vim application.properties</code></p> <pre><code class="language-properties">username=huan </code></pre> <h2 id="3编写自定义属性并加入spring-environment中">3、编写自定义属性并加入Spring Environment中</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/84bcd61805cbafd1eb3d873f2e42f998.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"><br /><strong>注意：</strong><br /> 1、如果发现程序中日志没有输出，检查是否使用了<code>slf4j</code>输出日志，此时因为日志系统未初始化无法输出日志。<code>解决方法如下：</code></p> <pre><code>SpringBoot版本 		&gt;= 2.4 可以参考上图中的使用 DeferredLogFactory 来输出日志 		&lt; 2.4 			1、参考如下链接 https://stackoverflow.com/questions/42839798/how-to-log-errors-in-a-environmentpostprocessor-execution 			2、核心代码： 				@Component 				public class MyEnvironmentPostProcessor implements 				        EnvironmentPostProcessor, ApplicationListener&lt;ApplicationEvent&gt; { 				    private static final DeferredLog log = new DeferredLog(); 				    @Override 				    public void postProcessEnvironment( 				            ConfigurableEnvironment env, SpringApplication app) { 				        log.error("This should be printed"); 				    } 				    @Override 				    public void onApplicationEvent(ApplicationEvent event) { 				        log.replayTo(MyEnvironmentPostProcessor.class); 				    } 				} </code></pre> <h2 id="4通过spi使自定义的配置生效">4、通过SPI使自定义的配置生效</h2> <p>1、在 <code>src/main/resources</code>下新建<code>META-INF/spring.factories</code>文件<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/39703744a5458313b46360170104b433.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"><br /> 2、配置</p> <pre><code>org.springframework.boot.env.EnvironmentPostProcessor=\   com.huan.springcloud.extensionpoint.environmentpostprocessor.CustomEnvironmentPostProcessor </code></pre> <h2 id="5编写测试类输出定义的-username-属性的值">5、编写测试类，输出定义的 username 属性的值</h2> <pre><code class="language-java">@Component public class PrintCustomizeEnvironmentProperty implements ApplicationRunner {      private static final Logger log = LoggerFactory.getLogger(PrintCustomizeEnvironmentProperty.class);      @Value("${username}")     private String userName;      @Override     public void run(ApplicationArguments args) {         log.info("获取到的 username 的属性值为: {}", userName);     } } </code></pre> <h2 id="6运行结果">6、运行结果</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220428/26e59a4e397a4bbdb399a8b8b8f56962.jpg" alt="SpringBoot扩展点EnvironmentPostProcessor_在线工具"></p> <h1 id="五注意事项">五、注意事项</h1> <h2 id="1日志无法输出">1、日志无法输出</h2> <p>参考上方的 <code>3、编写自定义属性并加入Spring Environment中</code>提供的解决方案。</p> <h2 id="2配置没有生效">2、配置没有生效</h2> <ul> <li>检查<code>EnvironmentPostProcessor</code>的优先级，看看是否<code>@Order</code>或者<code>Ordered</code>返回的优先级值不对。</li> <li>看看别的地方是否实现了 <code>EnvironmentPostProcessor</code>或<code>ApplicationContextInitializer</code>或<code>BeanFactoryPostProcessor</code>或<code>BeanDefinitionRegistryPostProcessor</code>等这些接口，在这个里面修改了 <code>PropertySource</code>的顺序。</li> <li>理解 Spring 获取获取属性的顺序 参考 <code>2、获取配置属性的优先级</code> </li> </ul> <h2 id="3日志系统如何初始化">3、日志系统如何初始化</h2> <p>如下代码初始化日志系统</p> <pre><code>org.springframework.boot.context.logging.LoggingApplicationListener </code></pre> <h1 id="六完整代码">六、完整代码</h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/huan1993/spring-cloud-parent/tree/master/springboot/springboot-extension-point/src/main/java/com/huan/springcloud/extensionpoint/environmentpostprocessor"  target="_blank"  rel="nofollow">https://gitee.com/huan1993/spring-cloud-parent/tree/master/springboot/springboot-extension-point/src/main/java/com/huan/springcloud/extensionpoint/environmentpostprocessor</a></p> <h1 id="七参考链接">七、参考链接</h1> <p>1、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/apolloconfig/apollo/blob/master/apollo-client/src/main/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializer.java"  target="_blank"  rel="nofollow">https://github.com/apolloconfig/apollo/blob/master/apollo-client/src/main/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializer.java</a><br /> 2、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/apolloconfig/apollo/blob/master/apollo-client/src/main/java/com/ctrip/framework/apollo/spring/config/PropertySourcesProcessor.java"  target="_blank"  rel="nofollow">https://github.com/apolloconfig/apollo/blob/master/apollo-client/src/main/java/com/ctrip/framework/apollo/spring/config/PropertySourcesProcessor.java</a></p> <p>3、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.apolloconfig.com/#/zh/design/apollo-design"  target="_blank"  rel="nofollow">https://www.apolloconfig.com/#/zh/design/apollo-design</a></p> <p>4、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://stackoverflow.com/questions/42839798/how-to-log-errors-in-a-environmentpostprocessor-execution"  target="_blank"  rel="nofollow">解决EnvironmentPostProcessor中无法输出日志</a></p> <p>5、<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.spring.io/spring-boot/docs/2.6.6/reference/htmlsingle/#howto.application.customize-the-environment-or-application-context"  target="_blank"  rel="nofollow">https://docs.spring.io/spring-boot/docs/2.6.6/reference/htmlsingle/#howto.application.customize-the-environment-or-application-context</a></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-204.htm">图解Redis之数据结构篇压缩列表</a></p>
                                        <p>下一个：<a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">指针的高级运用——指针进阶</a></h4>
                <p>文章目录  学习目标 1.1 动态内存分配   引子 1.1动态分配内存函数 1.2malloc函数 1.3 calloc 函数 1.4 realloc函数 1.5 free函数 1.6 动态内存编程</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-242.htm">SpringSecurity核心服务详解</a></h4>
                <p>现在我们对 Spring Security 体系结构及其核心类有了一个高层次的概述，让我们更仔细地看一两个核心接口及其实现，特别是AuthenticationManager&nbsp;、UserDet</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Springboot使用@Cacheable注解实现数据缓存</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cach</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">docker存储路径修改</a></h4>
                <p>docker修改对应的存储路径 修改daemon.json的内容不进行复述。 假设你已经编辑好/etc/docker/daemon.json文件的graph配置，要将其从d01修改到d02 {   "</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></h4>
                <p>问题描述： 发送POST请求，控制台打印： 错误信息:Read timed out executing POST http://xxx 解决方法： 在配置文件中添加超时配置即可</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-209.htm">C#中检查null的语法糖_在线工具</a></h4>
                <p>今天看到已经更新了devblogs，新增的C# 11的!!（用于检查null的语法）经过非常长的讨论，最后取消了。然后我又想起来null检查，这个可以说一说。 函数参数null检查 传统写法 写一个函</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-232.htm">使用JSR-303 Validation后端验证</a></h4>
                <p>&nbsp; 一、JSR-303简介：官网  JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。 此实</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-215.htm">uniapp中封装一个弹框组件</a></h4>
                <p>1，准备组件popup // components文件夹中popup组件&lt;template&gt;&lt;view&gt;&lt;viewclass="show-box-bg wx-login-</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">最大生成树Bad Cowtractors_在线工具</a></h4>
                <p>题目链接：http://poj.org/problem?id=2377；     仔细阅读题目，你会发现一个词-" as large as possible"，这个词的意思是尽可能最大；  来，我们翻</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-227.htm">企业应用架构研究系列十九：Docker开发环境</a></h4>
                <p>　　软件行业流行这样一个说法，由于Docker 技术的成熟和该技术被广大厂商的普遍应用，成就了微服务领域的快速成长，衍生了云原生技术和公有云的进一步推广。我个人认为Dockers 技术、微服务技术、云</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>