<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-36.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>网络协议之:socket协议详解之Unix domain Socket - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">网络协议之:socket协议详解之Unix domain Socket</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li><a href="#%E7%AE%80%E4%BB%8B" rel="nofollow">简介</a></li> <li><a href="#%E4%BB%80%E4%B9%88%E6%98%AFunix-domain-socket" rel="nofollow">什么是Unix domain Socket</a></li> <li><a href="#%E4%BD%BF%E7%94%A8socat%E6%9D%A5%E5%88%9B%E5%BB%BAunix-domain-sockets" rel="nofollow">使用socat来创建Unix Domain Sockets</a></li> <li><a href="#%E4%BD%BF%E7%94%A8ss%E5%91%BD%E4%BB%A4%E6%9D%A5%E6%9F%A5%E7%9C%8Bunix-domain-socket" rel="nofollow">使用ss命令来查看Unix domain Socket</a></li> <li><a href="#%E4%BD%BF%E7%94%A8nc%E8%BF%9E%E6%8E%A5%E5%88%B0unix-domain-socket%E6%9C%8D%E5%8A%A1" rel="nofollow">使用nc连接到Unix domain Socket服务</a></li> <li><a href="#%E6%80%BB%E7%BB%93" rel="nofollow">总结</a></li> </ul> </div> <h1 id="简介">简介</h1> <p>之前的文章我们讲到了Socket中的Stream Socket和Datagram Socket，这两种Socket通常分别是基于tcp和udp协议来进行数据的传输。这两种Socket都有一个共同的特点，那就是需要一个IP地址和端口来建立客户端和服务器端的连接。</p> <p>那么今天我们会来讲解一个特殊的socket，这个socket不需要使用传统的IP地址和端口，而是使用文件系统来进行程序之间的数据交互，并且这样的socket只能使用在unix系统上。这样的socket就是今天我们要讲解的Unix domain Socket。</p> <h1 id="什么是unix-domain-socket">什么是Unix domain Socket</h1> <p>什么是Unix domain Socket呢？ 我们从名字就可以看出来，这个Socket是和unix domain有关系的，也就是说这个socket需要用到unix下面的一些特殊功能。</p> <p>我们考虑下常用的windows系统和unix系统，他们最大的区别在哪里呢？</p> <p>其实最大的区别就是unix操作系统中一切都可以看做是文件，包括程序运行的一些信息。</p> <p>那么我们是不是可以直接借助于这些程序运行时产生的文件来进行不同程序之间数据的交互呢？答案是肯定的。这就是我们今天要讨论的Unix domain Socket。</p> <p>Unix domain Socket可以简称为UDS，不同程序间的数据可以在操作系统层，借助于文件系统来进行数据交换。</p> <p>对于程序本身来说，只需要读取和写入共享的socket文件即可，也就是说不同的程序之间通过socket文件来进行数据交互。</p> <p>和基于IP和端口的Socket一样，Unix domain Socket也可以分为Stream Socket和Datagram Socket。</p> <p>我们最多看到Unix domain socket的地方可能就是docker了，作为一种容器技术，docker需要和实体机进行快速的数据传输和信息交换，一般情况下UDS的文件是以.socket结尾的，我们可以在/var/run目录下面使用下面的命令来查找：</p> <pre><code>find . -name "*.sock"</code></pre> <p>如果你有docker在运行的话，可以得到下面的结果：</p> <pre><code>./docker.sock ./docker/libnetwork/6d66a24bfbbfa231a668da4f1ed543844a0514e4db3a1f7d8001a04a817b91fb.sock ./docker/libcontainerd/docker-containerd.sock</code></pre> <p>可以看到docker是通过上面的3个sock文件来进行通讯的。</p> <h1 id="使用socat来创建unix-domain-sockets">使用socat来创建Unix Domain Sockets</h1> <p>之前提到了socat这个万能的工具，不仅可以创建tcp的监听服务器，还能创建udp的监听服务器，当然对于UDS来说也不在话下。我们来看下使用socat来创建UDS服务器所需要用到的参数：</p> <pre><code>      unix-listen:&lt;filename&gt;    groups=FD,SOCKET,NAMED,LISTEN,CHILD,RETRY,UNIX       unix-recvfrom:&lt;filename&gt;  groups=FD,SOCKET,NAMED,CHILD,RETRY,UNIX</code></pre> <p>这里我们要使用到unix-listen和unix-recvfrom这两个参数，unix-listen表示的是创建stream-based UDS服务，而unix-recvfrom表示的是创建datagram-based UDS。</p> <p>可以看到两个参数后面都需要传入一个文件名，表示UDS socket的地址。</p> <p>我们可以这样使用：</p> <pre><code>socat unix-listen:/tmp/stream.sock,fork /dev/null&amp; socat unix-recvfrom:/tmp/datagram.sock,fork /dev/null&amp;</code></pre> <p>这里我们使用/tmp/datagram.sock来表示这个socket信息。</p> <p>其中fork参数表示程序在接收到程序包之后继续运行，如果不用fork，那么程序会自动退出。</p> <p>socat后面本来要接一个bi-address，这里我们使用/dev/null，表示丢弃掉所有的income信息。</p> <p>运行后我们可能得到下面的结果：</p> <pre><code>[1] 27442 [2] 27450</code></pre> <p>表示程序已经成功执行了，返回的是程序的pid。</p> <h1 id="使用ss命令来查看unix-domain-socket">使用ss命令来查看Unix domain Socket</h1> <p>在使用ss命令之前，我们先来看下使用socat生成的两个文件：</p> <pre><code>srwxrwxr-x   1 flydean flydean    0 Mar  2 21:58 stream.sock srwxrwxr-x   1 flydean flydean    0 Mar  2 21:59 datagram.sock</code></pre> <p>可以看到这两个文件的权限，rwx大家都懂，分别是read，write和执行权限。那么最前面的s是什么呢？</p> <p>最前面的一位表示的是文件类型，s表示的就是socket文件。</p> <p>扩展一下，这个位置还可以有其他几种选项：p、d、l、s、c、b和-:</p> <p>其中p表示命名管道文件，d表示目录文件，l表示符号连接文件，-表示普通文件，s表示socket文件，c表示字符设备文件，b表示块设备文件。</p> <p>接下来我们使用ss命令来查看一下之前建立的UDS服务。</p> <p>这里需要使用到下面几个参数：</p> <pre><code>   -n, --numeric       don't resolve service names    -l, --listening     display listening sockets    -x, --unix          display only Unix domain sockets</code></pre> <p>这里我们需要使用到上面3个选项，x表示的是显示UDS，因为是监听，所以使用-l参数，最后我们希望看到具体的数字，而不是被解析成了服务名，所以这里使用-n参数。</p> <p>我们可以尝试执行一下下面的命令：</p> <pre><code>ss -xln</code></pre> <p>输出会很多，我们可以grep我们需要的socket如下所示：</p> <pre><code>ss -xln | grep tmp u_str  LISTEN     0      5      /tmp/stream.sock 11881005              * 0                   u_dgr  UNCONN     0      0      /tmp/datagram.sock 11882190              * 0</code></pre> <p>u_str表示的是UDS stream socket，而u_dg表示的是UDS datagram socket。</p> <p>我们可以使用stat命令来查看socket文件的具体信息：</p> <pre><code>stat /tmp/stream.sock /tmp/datagram.sock   File: ‘/tmp/stream.sock’   Size: 0               Blocks: 0          IO Block: 4096   socket Device: fd02h/64770d    Inode: 134386049   Links: 1 Access: (0775/srwxrwxr-x)  Uid: ( 1002/    flydean)   Gid: ( 1002/    flydean) Access: 2022-03-01 22:33:21.533000000 +0800 Modify: 2022-03-01 22:33:21.533000000 +0800 Change: 2022-03-01 22:33:21.533000000 +0800  Birth: -   File: ‘/tmp/datagram.sock’   Size: 0               Blocks: 0          IO Block: 4096   socket Device: fd02h/64770d    Inode: 134386050   Links: 1 Access: (0775/srwxrwxr-x)  Uid: ( 1002/    flydean)   Gid: ( 1002/    flydean) Access: 2022-03-01 22:33:22.306000000 +0800 Modify: 2022-03-01 22:33:22.306000000 +0800 Change: 2022-03-01 22:33:22.306000000 +0800  Birth: -</code></pre> <h1 id="使用nc连接到unix-domain-socket服务">使用nc连接到Unix domain Socket服务</h1> <p>nc是一个非常强大的工具，除了可以进行TCP，UDP连接之外，还可以进行UDS的连接，我们需要使用到下面的参数：</p> <pre><code>  -U, --unixsock             Use Unix domain sockets only   -u, --udp                  Use UDP instead of default TCP   -z                         Zero-I/O mode, report connection status only</code></pre> <p>-U表示连接的是一个unixsocket。-u表示是一个UDP连接。</p> <p>默认情况下nc使用的是TCP连接，所以不需要额外的参数。</p> <p>另外我们直接建立连接，并不发送任何数据，所以这里使用-z参数。</p> <p>先连接Stream UDS看看：</p> <pre><code>nc -U -z /tmp/stream.sock</code></pre> <p>如果没有输出任何异常数据，说明连接成功了。</p> <p>然后再连接Datagram UDS看看：</p> <pre><code>nc -uU -z /tmp/datagram.sock</code></pre> <p>同样的，如果没有任何异常数据，说明Socket连接成功了。</p> <h1 id="总结">总结</h1> <p>在本章我们详细介绍了Unix Domain Socket的含义，并且使用了unix中的一些工具实现了UDS的建立，检测和连接。基本上描述了UDS的使用情况。</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-35.htm">Python技法：实现简单的递归下降Parser_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-37.htm">分布式之一行代码解决缓存击穿问题</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">kafka踩坑java找不到kafka-run-class.sh: line 309: exec: java: not found</a></h4>
                <p>今天执行 user_1@test_1:/opt/kafka$ sudo bin/zookeeper-server-start.sh config/zookeeper.properties/opt/ka</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">实战代码（十）：Springboot RestTemplate连接池</a></h4>
                <p>一、理论基础 RestTemplate是Springboot中内置的Http请求工具，可以直接注入使用。 两个常用的构造方法如下图 (点击进入文档地址)  从上面可以看出，最简单的方式就是使用默认配置</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">使用Python实现KNN算法解决简单分类问题</a></h4>
                <p>使用Python实现KNN算法解决简单分类问题 KNN分类 KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。K</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">pandas高阶应用</a></h4>
                <p>1、时间序列相关操作 pd的date_range中的基本时间序列频率     Alias   Description（偏移量类型）   说明     B   business day frequenc</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">vue父组件向子组件传值与传递方法</a></h4>
                <p>vue父组件向子组件传值与传递方法 学习笔记 1、父组件向子组件传值（props）  在子组件中，默认是无法访问到父组件中的data上的数据和methods中的方法 父组件可以在引用子组件的时候，通过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-236.htm">PHP回调/可调用对象详解</a></h4>
                <p>定义和用法 回调是PHP中的伪类型。在PHP 5.4中，引入了Callable类型提示，类似于Callback。当某个对象被标识为可调用时，意味着它可以用作可调用的函数。可调用对象可以是内置的或用户定</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">Centos7服务器上RabbitMQ单机安装_在线工具</a></h4>
                <p>一、背景 最近项目中用到了RabbitMQ，但是发现自己本地没有安装，此文记录一下本地RabbitMQ的安装过程。注意不同的系统安装方式略有不同，此处我们记录的是Centos7的安装方式。 二、安装方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">Docker从入门到放弃(1) Docker简介与安装_在线工具</a></h4>
                <p>​ 目录 一、Docker简介 1、Docker是什么： 2、为什么有docke的出现： 3、docker与传统容器的区别： 4、docker基本组成 5、docker工作原理： 二、Docker安装</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">Ribbon（一）远程调用RestTemplate</a></h4>
                <p>目录 一、RestTemplate介绍 二、需求说明 1、业务结构及说明 三、模块搭建 1、新建一个maven项目 2、添加ribbon依赖 3、编辑yml 4、主程序 5、编辑RibbonContr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>