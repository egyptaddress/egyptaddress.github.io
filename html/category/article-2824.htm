<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-2824.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>如何使用线程池执行定时任务？ - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">如何使用线程池执行定时任务？</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<p>在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadScheduledExecutor 可以看做是 ScheduledThreadPool 的单线程版本，它的用法和 ScheduledThreadPool 是一样的，所以本文重点来看 ScheduledThreadPool 线程池的使用。<br /> ScheduledThreadPool 执行定时任务的方法有以下 3 个：</p> <ol> <li>使用 schedule 方法执行定时任务，只执行一次定时任务。</li> <li>使用 scheduleAtFixedRate 方法执行定时任务，执行多次定时任务。</li> <li>使用 scheduleWithFixedDelay 方法执行定时任务，执行多次定时任务。</li> </ol> <p>接下来我们看这 3 个方法的具体使用和区别。</p> <h2 id="1schedule">1.schedule</h2> <p>schedule 方法只能执行一次定时任务，它需要传递 3 个参数：</p> <ul> <li>第 1 个参数：传递一个任务，Runnable 或 Callable 对象；</li> <li>第 2 个参数：添加定时任务后，再过多久开始执行定时任务；</li> <li>第 3 个参数：时间单位，配合参数 2 一起使用。</li> </ul> <p>下面我们创建一个 3 秒以后执行的定时任务：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("schedule 方法添加任务：" + LocalDateTime.now());         threadPool.schedule(new Runnable() {             @Override             public void run() {                 System.out.println("执行 schedule 方法：" + LocalDateTime.now());             }         }, 3, TimeUnit.SECONDS); // 3s 之后执行          // 以下代码是给业务方法一个时间对照信息         TimeUnit.SECONDS.sleep(10); // 休眠 10s         System.out.println("当前时间：" + LocalDateTime.now());     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643285135216-0a5be9dc-bde7-40d8-8d44-7bf2f40da008.png#clientId=ue0197902-a877-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=229&amp;id=u1bcadc1c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=458&amp;originWidth=1812&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80487&amp;status=done&amp;style=none&amp;taskId=uc0ed874c-a6d6-496c-9984-8878a85487e&amp;title=&amp;width=906" alt="image.png"><br /> 从上述结果中可以看出，使用 schedule 方法只能执行一次定时任务。</p> <h2 id="2scheduleatfixedrate">2.scheduleAtFixedRate</h2> <p>scheduleAtFixedRate 方法可以执行多次定时任务，此方法需要 4 个参数：</p> <ul> <li>第 1 个参数：传递一个任务，Runnable 或 Callable 对象；</li> <li>第 2 个参数：添加定时任务后，再过多久开始执行定时任务；</li> <li>第 3 个参数：定时任务执行的时间间隔；</li> <li>第 4 个参数：时间单位，配合参数 2 和参数 3 一起使用。</li> </ul> <p>下面我们创建一个 3 秒后执行的定时任务，每个定时任务执行的时间间隔为 2 秒，实现代码如下：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("scheduleAtFixedRate 方法添加任务：" + LocalDateTime.now());         threadPool.scheduleAtFixedRate(new Runnable() {                                            @Override                                            public void run() {                                                System.out.println("执行 scheduleAtFixedRate 方法：" + LocalDateTime.now());                                                // 休眠 2s                                                try {                                                    TimeUnit.SECONDS.sleep(2);                                                } catch (InterruptedException e) {                                                    e.printStackTrace();                                                }                                            }                                        },                 3L, // 3s 后开始执行定时任务                 2L, // 定时任务的执行间隔为 2s                 TimeUnit.SECONDS); // 描述上面两个参数的时间单位     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643287036829-da0d6744-f637-410a-bd9c-8dd59a5b68e8.png#clientId=u5b0cec9e-c3d0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=324&amp;id=u82026f29&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=647&amp;originWidth=2600&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=205224&amp;status=done&amp;style=none&amp;taskId=u53be7687-5476-4f20-83a5-0dbe5bb49ca&amp;title=&amp;width=1300" alt="image.png"><br /> 从上述结果可以看出，当任务添加成功之后，3s 后开始执行第一个定时任务，之后每隔 2s 执行一次定时任务。</p> <h2 id="3schedulewithfixeddelay">3.scheduleWithFixedDelay</h2> <p>scheduleWithFixedDelay 方法的使用和 scheduleAtFixedRate 类似，但执行效果完全不同，这个很容易理解如果效果一样就不用创建两个方法了。<br /><strong>scheduleWithFixedDelay 方法是在方法执行完成之后，再隔 N 秒执行下一个定时任务，和 scheduleAtFixedRate 的固定时间执行不同，scheduleWithFixedDelay 方法的执行受定时任务执行的时长影响</strong>，比如以下代码：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("scheduleWithFixedDelay 方法添加任务：" + LocalDateTime.now());         threadPool.scheduleWithFixedDelay(new Runnable() {                                               @Override                                               public void run() {                                                   System.out.println("执行 scheduleWithFixedDelay 方法：" + LocalDateTime.now());                                                   // 休眠 2s                                                   try {                                                       TimeUnit.SECONDS.sleep(2);                                                   } catch (InterruptedException e) {                                                       e.printStackTrace();                                                   }                                               }                                           },                 3L, // 3s 后开始执行定时任务                 2L, // 定时任务执行完 2s 之后，再执行下一个定时任务                 TimeUnit.SECONDS); // 描述上面两个参数的时间单位     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643287771381-5cda78b7-f7c4-41c0-9f25-89c5a7369259.png#clientId=u5b0cec9e-c3d0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=263&amp;id=u4fea7e83&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=525&amp;originWidth=2086&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=168985&amp;status=done&amp;style=none&amp;taskId=ue6611b7a-f289-466f-8bcf-70790ec08e2&amp;title=&amp;width=1043" alt="image.png"><br /> 从上述结果可以看出，定时任务在 3s 之后开始执行，以后每隔 4s 执行一次，这 4s 包含了，定时任务执行花费的 2s，加上每隔 2s 执行一次的时间间隔，也就是说<strong>scheduleWithFixedDelay 是在任务执行完 N 秒之后，再执行下一次定时任务</strong>。</p> <h2 id="总结">总结</h2> <p>线程池执行定时任务的实现方法有 3 个：</p> <ol> <li>使用 schedule 方法执行定时任务，只执行一次定时任务。</li> <li>使用 scheduleAtFixedRate 方法执行定时任务，执行多次定时任务，它的执行时间间隔是固定的，不受定时任务执行时长影响（定时任务时间间隔 &gt; 任务执行时间）。</li> <li>使用 scheduleWithFixedDelay 方法执行定时任务，执行多次定时任务，它是在定时任务执行完之后，再隔 N 秒开始执行下一次定时任务，它的执行时间受定时任务执行时长影响</li> </ol> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-2823.htm">jQuery实现呼吸灯轮播图</a></p>
                                        <p>下一个：<a href="/html/category/article-3121.htm">windows 平台下编译openssl 最新版本-3.0.5</a></p>
                                    </div>

                                <div class="panel panel-default mt-5">
                    <div class="panel-heading">
                        <h3 class="m-0">推荐文章</h3>
                    </div>
                    <div class="panel-body">
                        <ul class="p-0 x-0">
                                                        <li class="py-2"><a href="/html/category/article-1629.htm">原生js实现楼层滚动（界面滑动）效果</a></li>
                                                        <li class="py-2"><a href="/html/category/article-217.htm">Vuex入门mapState, mapGetters, mapMutations, mapActions详解终结篇带源码</a></li>
                                                        <li class="py-2"><a href="/html/category/article-201.htm">java过滤器的执行顺序_Java Filter过滤器（拦截路径的配置+拦截方式的配置+生命周期+多个过滤器的先后执行顺序）&#8230;</a></li>
                                                        <li class="py-2"><a href="/html/category/article-193.htm">《易学C++》第15章 再识对象</a></li>
                                                        <li class="py-2"><a href="/html/category/article-146.htm">Python学习笔记3.2-python内置函数大全</a></li>
                                                        <li class="py-2"><a href="/html/category/article-101.htm">BeanDefinitionRegistryPostProcessor和BeanFactoryPostProcessor以及BeanPostProcessor执行先后顺序</a></li>
                                                        <li class="py-2"><a href="/html/category/article-82.htm">Java中ArrayList和HashSet之间的区别</a></li>
                                                        <li class="py-2"><a href="/html/category/article-75.htm">解决Error response from daemon: Get “https://registry-1.docker.io/v2/“: read: connection refused问题</a></li>
                                                        <li class="py-2"><a href="/html/category/article-54.htm">删除PicGo的右键菜单的方法</a></li>
                                                        <li class="py-2"><a href="/html/category/article-32.htm">@RequestBody接收实体类时，部分字段丢失的问题</a></li>
                                                    </ul>
                    </div>
                </div>
                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6845.htm">我所在的城市有一家动物医院的英语怎么说 我所在的城市有一家动物医院的英语怎么说</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于我所在的城市有一家动物医院的英语怎么说的问题，于是小编就整理了2个相关介绍我所在的城市有一家动物医院的英语怎么说的解答，让我们一</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4585.htm">宠物疫苗猫咪可以打吗（猫咪打疫苗宠物店可以打吗?）</a></h4>
                <p>摘要：       本篇文章给大家谈谈宠物疫苗猫咪可以打吗，以及猫咪打疫苗宠物店可以打吗?对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、两个月的小猫能打狂犬疫苗吗?...  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4515.htm">真正的宠物狗免费领养网站有哪些地方（真正的宠物狗免费领养网站有哪些地方呢）</a></h4>
                <p>摘要：       今天给各位分享真正的宠物狗免费领养网站有哪些地方的知识，其中也会对真正的宠物狗免费领养网站有哪些地方呢进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4096.htm">什么是Python高阶函数</a></h4>
                <p>高阶函数 什么是高阶函数 高阶函数就是能够把函数当成参数传递的函数就是高阶函数，换句话说如果一个函数的参数是函数，那么这个函数就是一个高阶函数。 高阶函数可以是你使用def关键字自定义的函数，也有Py</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-3756.htm">接口隔离原则（Interface Segregation Principle，ISP）</a></h4>
                <p>接口隔离原则（Interface Segregation Principle，ISP）要求程序员尽量将臃肿庞大的接口拆分成更小的和更具体的接口，让接口中只包含客户感兴趣的方法。  定义  客户端不应该</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6707.htm">给宠物打疫苗可以自己打吗（给宠物打疫苗可以自己打吗?）</a></h4>
                <p>摘要：       本篇文章给大家谈谈给宠物打疫苗可以自己打吗，以及给宠物打疫苗可以自己打吗?对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、能不能自己在家中给猫咪接种疫苗..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4550.htm">宠物领养平台app小程序叫什么来着的（宠物领养 app）</a></h4>
                <p>摘要：       本篇文章给大家谈谈宠物领养平台app小程序叫什么来着的，以及宠物领养 app对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、谁知道领养宠物的app...  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6614.htm">领养宠物的平台软件叫什么（领养宠物的平台软件叫什么来着）</a></h4>
                <p>摘要：       今天给各位分享领养宠物的平台软件叫什么的知识，其中也会对领养宠物的平台软件叫什么来着进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、手机上.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6890.htm">宠物粮食品牌取名字大全（宠物粮食品牌取名字大全集）</a></h4>
                <p>摘要：       今天给各位分享宠物粮食品牌取名字大全的知识，其中也会对宠物粮食品牌取名字大全集进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、猫粮品牌排名.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4478.htm">开宠物店大概需要多少投资（开宠物店投资多少钱一月能得多少利）</a></h4>
                <p>摘要：       今天给各位分享开宠物店大概需要多少投资的知识，其中也会对开宠物店投资多少钱一月能得多少利进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、开.</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>