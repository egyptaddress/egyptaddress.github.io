<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-229.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Docker提交镜像-数据卷-可视化 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Docker提交镜像-数据卷-可视化</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<p class="md-end-block md-p"><span class="md-plain md-expand">在熟悉完Docker的安装及基本命令使用之后，我们开始学习下Docker的进阶操作：包括但不限于新建Docker镜像，数据卷的挂载，以及Docker的可视化等。</span></p> <h1 class="md-end-block md-heading"><span class="md-plain">Docker提交镜像</span></h1> <h2 class="md-end-block md-heading"><span class="md-plain">启动镜像</span></h2> <p class="md-end-block md-p"><span class="md-plain">我们先安装一个tomcat</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -p 8080:8080 tomcat</code></span></p> <p class="md-end-block md-p"><span class="md-plain">然后访问：</span><span class="md-link md-pair-s" spellcheck="false">http://192.168.88.71:8080/</span></p> <p class="md-end-block md-p"><span class="md-plain">容器虽然启动了，但页面404，其实是默认没有访问页面</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# docker ps CONTAINER ID &nbsp; IMAGE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; COMMAND &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  CREATED &nbsp; &nbsp; &nbsp; &nbsp;  STATUS &nbsp; &nbsp; &nbsp; &nbsp;  PORTS &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  NAMES 7f7e60ca6bf5 &nbsp; tomcat &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"catalina.sh run" &nbsp; &nbsp; &nbsp; &nbsp;6 seconds ago &nbsp;  Up 4 seconds &nbsp; &nbsp;0.0.0.0:8080->8080/tcp, :::8080->8080/tcp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  wonderful_satoshi </code></pre> <h2 class="md-end-block md-heading"><span class="md-plain">修改容器</span></h2> <p class="md-end-block md-p"><span class="md-plain">tomcat为了简化启动流程，省略了加载页面的操作，所以访问404，我们可以进入容器，修改一下相关配置</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# docker exec -it 7f7e60ca6bf5 /bin/bash root@7f7e60ca6bf5:/usr/local/tomcat# ls BUILDING.txt &nbsp; &nbsp; LICENSE  README.md &nbsp; &nbsp;  RUNNING.txt  conf  logs &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  temp &nbsp; &nbsp; webapps.dist CONTRIBUTING.md  NOTICE &nbsp; RELEASE-NOTES  bin &nbsp; &nbsp; &nbsp; &nbsp;  lib &nbsp; native-jni-lib  webapps  work root@7f7e60ca6bf5:/usr/local/tomcat# cp -r webapps.dist/* webapps root@7f7e60ca6bf5:/usr/local/tomcat#</code></pre> <p class="md-end-block md-p"><span class="md-plain">tomcat的静态页面备份在了webapps.dist目录下，我们将其复制到webapps下即可。</span></p> <p class="md-end-block md-p"><span class="md-plain">再次访问：</span><span class="md-link md-pair-s" spellcheck="false">http://192.168.88.71:8080/</span><span class="md-plain"> ，我们熟悉的页面正常显示了。</span></p> <h2 class="md-end-block md-heading"><span class="md-plain">提交镜像</span></h2> <p class="md-end-block md-p"><span class="md-plain">然后把我修改后的容器重新提交成一个新的镜像。</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker commit -m "cp webapps files" -a "zhangbao" 7f7e60ca6bf5  tomcat001:1.0</code></span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# docker commit -m "cp webapps files" -a "zhangbao" 7f7e60ca6bf5  tomcat001:1.0 sha256:1bcaa367798ccbea30337645a4839db5878a40eaed92e5c5d66c3df13edae738 [root@hadoop101 ~]# docker images REPOSITORY &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  TAG &nbsp; &nbsp; &nbsp; IMAGE ID &nbsp; &nbsp; &nbsp; CREATED &nbsp; &nbsp; &nbsp; &nbsp; SIZE tomcat001 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1.0 &nbsp; &nbsp; &nbsp; 1bcaa367798c &nbsp; 7 seconds ago &nbsp; 684MB tomcat &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  latest &nbsp;  fb5657adc892 &nbsp; 2 months ago &nbsp;  680MB</code></pre> <p class="md-end-block md-p"><span class="md-plain">发现比之前大了一点点。</span></p> <h2 class="md-end-block md-heading"><span class="md-plain">启动新镜像</span></h2> <p class="md-end-block md-p"><span class="md-plain">我们再启动新提交后的镜像</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -p 8081:8080 tomcat001:1.0</code></span></p> <p class="md-end-block md-p"><span class="md-plain">访问</span><span class="md-link md-pair-s" spellcheck="false">http://192.168.88.71:8081/</span><span class="md-plain">，直接显示正常页面。</span></p> <h1 class="md-end-block md-heading"><span class="md-plain">容器数据卷</span></h1> <h2 class="md-end-block md-heading"><span class="md-plain">背景</span></h2> <p class="md-end-block md-p"><span class="md-plain">启动一个容器后，容器内的配置或者数据也在容器中，当我们删掉容器，整个容器及内部的配置及数据都会丢失，这是不正常的，所以Docker提供了数据卷的功能，即把容器内的配置或数据映射到宿主机上，实现双向绑定，当我们要删掉一个容器的时候，其数据还可保留，当我们修改容器的配置，也不需要进入容器，可直接在映射文件中修改。</span></p> <h2 class="md-end-block md-heading"><span class="md-plain">启动镜像并添加数据卷</span></h2> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -it -p 8080:8080 -v /opt/test:/opt tomcat001:1.0 /bin/bash</code></span></p> <p class="md-end-block md-p"><span class="md-plain">此命令表示运行一个tomcat001镜像，宿主机端口和容器端口都是8080，</span><span class="md-pair-s" spellcheck="false"><code>-v /opt/test:/opt</code></span><span class="md-plain"> 表示把容器内目录</span><span class="md-pair-s" spellcheck="false"><code>/opt</code></span><span class="md-plain"> 目录挂载到宿主机</span><span class="md-pair-s" spellcheck="false"><code>/opt/test</code></span><span class="md-plain"> 目录下，这样两边就实现了双向绑定。</span></p> <h2 class="md-end-block md-heading"><span class="md-plain">验证</span></h2> <p class="md-end-block md-p"><span class="md-plain">注：上个命令不可 ctrl+c 或者 exit退出，否则容器也直接退出了，用 ctrl+p+q 后台启动</span></p> <p class="md-end-block md-p"><span class="md-plain">我们直接在宿主机的</span><span class="md-pair-s" spellcheck="false"><code>/opt/test</code></span><span class="md-plain">目录下新建文件</span><span class="md-pair-s" spellcheck="false"><code>test.txt</code></span><span class="md-plain">，然后查看容器内的</span><span class="md-pair-s" spellcheck="false"><code>/opt</code></span><span class="md-plain">目录下的变化</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code># 宿主机 [root@hadoop101 opt]# cd /opt/test [root@hadoop101 test]# touch test.txt [root@hadoop101 test]# ll total 0 -rw-r--r-- 1 root root 0 Mar 19 22:33 test.txt  #容器内 [root@hadoop101 ~]# docker ps CONTAINER ID &nbsp; IMAGE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; COMMAND &nbsp; &nbsp; &nbsp; CREATED &nbsp; &nbsp; &nbsp; &nbsp; STATUS &nbsp; &nbsp; &nbsp; &nbsp; PORTS &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NAMES 04331e8ef590 &nbsp; tomcat001:1.0 &nbsp; "/bin/bash" &nbsp; 7 minutes ago &nbsp; Up 7 minutes &nbsp; 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp &nbsp; crazy_mclaren [root@hadoop101 ~]# docker attach 04331e8ef590 root@04331e8ef590:/usr/local/tomcat# cd /opt/ root@04331e8ef590:/opt# ls test.txt </code></pre> <p class="md-end-block md-p"><span class="md-plain">同样的，我们在容器内修改文件内容，在宿主机也可以实时查看文件内容，并且在停止容器后，我们在宿主机上修改文件，然后再启动容器，容器内的文件同样被修改了。</span></p> <h2 class="md-end-block md-heading"><span class="md-plain">安装msyql</span></h2> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -p 3301:3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql001 mysql:5.7</code></span></p> <blockquote> <p class="md-end-block md-p"><span class="md-plain">-p 宿主机端口:容器端口</span></p> <p class="md-end-block md-p"><span class="md-plain">-v 宿主机目录:容器目录，可多个-v</span></p> <p class="md-end-block md-p"><span class="md-plain">-e 变量配置</span></p> <p class="md-end-block md-p"><span class="md-plain">--name 容器名字</span></p> </blockquote> <p class="md-end-block md-p"><span class="md-plain">这里我们将mysql容器的配置文件和数据目录挂载到宿主机的</span><span class="md-pair-s" spellcheck="false"><code>/home/mysql</code></span><span class="md-plain">目录下</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# cd /home/mysql/ [root@hadoop101 mysql]# ll total 0 drwxr-xr-x 2 root &nbsp;  root &nbsp; 6 Mar 19 23:13 conf drwxr-xr-x 5 polkitd root 328 Mar 19 23:13 data [root@hadoop101 mysql]# cd data [root@hadoop101 data]# ls auto.cnf &nbsp;  client-cert.pem  ibdata1 &nbsp; &nbsp;  ibtmp1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  private_key.pem  server-key.pem ca-key.pem  client-key.pem &nbsp; ib_logfile0  mysql &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public_key.pem &nbsp; sys ca.pem &nbsp; &nbsp;  ib_buffer_pool &nbsp; ib_logfile1  performance_schema  server-cert.pem [root@hadoop101 data]#</code></pre> <p class="md-end-block md-p"><span class="md-plain">然后我们通过Navicat连接，并新建数据库test，再次查看数据目录</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 data]# ls auto.cnf &nbsp;  client-cert.pem  ibdata1 &nbsp; &nbsp;  ibtmp1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  private_key.pem  server-key.pem ca-key.pem  client-key.pem &nbsp; ib_logfile0  mysql &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public_key.pem &nbsp; sys ca.pem &nbsp; &nbsp;  ib_buffer_pool &nbsp; ib_logfile1  performance_schema  server-cert.pem  test [root@hadoop101 data]#</code></pre> <h1 class="md-end-block md-heading"><span class="md-plain">数据卷挂载</span></h1> <p class="md-end-block md-p"><span class="md-plain">在熟悉了容器数据卷的功能后，我们再来看下数据卷的挂载，数据卷挂载有多种方式，上面我们使用是其中一种方式：指定路径挂载。其实还有其他挂载方式，不同场景可使用不同方式的挂载，可根据自身需要选择。</span></p> <h2 class="md-end-block md-heading"><span class="md-pair-s"><strong><span class="md-plain">匿名挂载</span></strong></span></h2> <p class="md-end-block md-p"><span class="md-plain">-v 后面直接跟容器内的路径</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -v /etc/nginx  --name nginx001 nginx</code></span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# docker inspect nginx001 ## 这里只列出挂载信息，将容器内的路径/etc/nginx挂载到宿主机/var/lib/docker/volumes下 "Mounts": [  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Type": "volume",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Name": "cc9ff269b7ad67fab8866e7a446009207d2a3af24395003a8cb75f3981022eec",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Source": "/var/lib/docker/volumes/cc9ff269b7ad67fab8866e7a446009207d2a3af24395003a8cb75f3981022eec/_data",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Destination": "/etc/nginx",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Driver": "local",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Mode": "",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"RW": true,  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Propagation": ""  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }  &nbsp; &nbsp; &nbsp;  ],</code></pre> <h2 class="md-end-block md-heading"><span class="md-pair-s"><strong><span class="md-plain">具名挂载</span></strong></span></h2> <p class="md-end-block md-p"><span class="md-plain">-v 数据卷名称:容器内路径</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -v zhangbao_nginx:/etc/nginx  --name nginx002 nginx</code></span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code> [root@hadoop101 ~]# docker volume ls DRIVER &nbsp;  VOLUME NAME local &nbsp; &nbsp; 511511317ef0256d2d1570104e11a6ce897ba387267fbeec0192326dd6156067 local &nbsp; &nbsp; cc9ff269b7ad67fab8866e7a446009207d2a3af24395003a8cb75f3981022eec local &nbsp; &nbsp; e5303012839aa87faef7719a0407f690a9da8af1fcf6dfc2ef51cf20a5aa441f local &nbsp; &nbsp; zhangbao_nginx [root@hadoop101 ~]# docker volume inspect zhangbao_nginx [  &nbsp;  {  &nbsp; &nbsp; &nbsp; &nbsp;"CreatedAt": "2022-03-21T23:09:43+08:00",  &nbsp; &nbsp; &nbsp; &nbsp;"Driver": "local",  &nbsp; &nbsp; &nbsp; &nbsp;"Labels": null,  &nbsp; &nbsp; &nbsp; &nbsp;"Mountpoint": "/var/lib/docker/volumes/zhangbao_nginx/_data",  &nbsp; &nbsp; &nbsp; &nbsp;"Name": "zhangbao_nginx",  &nbsp; &nbsp; &nbsp; &nbsp;"Options": null,  &nbsp; &nbsp; &nbsp; &nbsp;"Scope": "local"  &nbsp;  } ]</code></pre> <p class="md-end-block md-p"><span class="md-plain">上面就是匿名挂载和具名挂载了，我们经常用的还有一种就是指定路径</span></p> <h2 class="md-end-block md-heading"><span class="md-pair-s"><strong><span class="md-plain">指定路径挂载</span></strong></span></h2> <p class="md-end-block md-p"><span class="md-plain">-v 宿主机路径:容器路径</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -v /etc/nginx:/etc/nginx  --name nginx003 nginx</code></span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>[root@hadoop101 ~]# docker inspect nginx003 "Mounts": [  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  {  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Type": "bind",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Source": "/etc/nginx",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Destination": "/etc/nginx",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Mode": "",  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"RW": true,  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"Propagation": "rprivate"  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  }  &nbsp; &nbsp; &nbsp;  ],</code></pre> <p class="md-end-block md-p"> <h1 class="md-end-block md-heading"><span class="md-plain">Docker可视化</span></h1> <h2 class="md-end-block md-heading"><span class="md-plain">portainer</span></h2> <p class="md-end-block md-p"><span class="md-plain">一个提供web页面的Docker管理工具，命令如下：</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>docker run -d -p 8088:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --privileged=true portainer/portainer</code></span></p> <p class="md-end-block md-p"><span class="md-plain">访问：</span><span class="md-link md-pair-s" spellcheck="false">http://192.168.88.71:8088</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/ed3374abf813312fc9cc647f78ecbe72.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ed3374abf813312fc9cc647f78ecbe72.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"><span class="md-plain">添加超管账号：admin / 88888888</span></p> <p class="md-end-block md-p"><span class="md-plain">然后选择本地的docker环境</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/ec57504c68b4dac26b737595412148be.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ec57504c68b4dac26b737595412148be.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"><span class="md-plain">连接之后，我们可以查看有7个镜像，然后点击进去</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/253ef69617683fa4559102c6efc31deb.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/253ef69617683fa4559102c6efc31deb.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"><span class="md-plain">可以看到本地环境有7个镜像，13个容器，10个数据卷。</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/c6c96f9efce7427a772272f18e0dd010.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c6c96f9efce7427a772272f18e0dd010.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"> <p class="md-end-block md-p"><span class="md-plain">查看有哪7个镜像，可以看到有我们之前测试使用的镜像，包括我们自己提交的一个修改后的新镜像</span><span class="md-pair-s"><strong><span class="md-plain">tomcat001:1.0</span></strong></span><span class="md-plain">。</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/9779f38683665d18dfef686e317fb8e3.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9779f38683665d18dfef686e317fb8e3.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"> <p class="md-end-block md-p"><span class="md-plain">数据卷列表，包括我们创建的匿名数据卷，以及具名数据卷。</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/04a47750267e4f16914e73ebf29faeb3.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/04a47750267e4f16914e73ebf29faeb3.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"> <h2 class="md-end-block md-heading"><span class="md-plain">lazydocker</span></h2> <p class="md-end-block md-p"><span class="md-plain">一个基于终端的Docker可视化查询工具。</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/5b9894a4e3f2553de40173388345cdd5.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5b9894a4e3f2553de40173388345cdd5.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"><span class="md-plain">github：</span><span class="md-link md-pair-s" spellcheck="false">https://github.com/jesseduffield/lazydocker</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>docker run --rm -it -v \ /var/run/docker.sock:/var/run/docker.sock \ -v /.config/lazydocker:/.config/jesseduffield/lazydocker \ lazyteam/lazydocker</code></pre> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/0a6ecdb8a535202ebcb8466cedb60747.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/0a6ecdb8a535202ebcb8466cedb60747.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"> <p class="md-end-block md-p"><span class="md-plain">鼠标和方向键都可控制查看信息框，在整个屏幕底部也有提示</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/3f124e527974716a8ee7d12efba9330d.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/3f124e527974716a8ee7d12efba9330d.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p"> <p class="md-end-block md-p"><span class="md-plain">鼠标和方向键演示</span></p> <p class="md-end-block md-p"><span class="md-image md-img-loaded" data-src="http://img.555519.xyz/uploads3/20220510/f6b8bd777889a95e6c5f9e9585b9334e.jpg" alt="Docker提交镜像-数据卷-可视化"><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/f6b8bd777889a95e6c5f9e9585b9334e.jpg" alt="Docker提交镜像-数据卷-可视化"/></span></p> <p class="md-end-block md-p md-focus"><span class="md-plain md-expand">每次查看都需要很长的命令，我们可以简化下</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="shell" spellcheck="false"><code>echo "alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /.config/lazydocker:/.config/jesseduffield/lazydocker lazyteam/lazydocker'" >> ~/.zshrc </code></pre> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-228.htm"># kubernetes调度之nodeName与NodeSelector</a></p>
                                        <p>下一个：<a href="/html/category/article-230.htm">Vuex的各个模块封装</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6148.htm">兽药厂家前100强（兽药十大厂家）</a></h4>
                <p>摘要：       今天给各位分享兽药厂家前100强的知识，其中也会对兽药十大厂家进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、谁知道中国有哪些百强兽药企业.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6016.htm">宠物粮食排行榜前十 宠物粮食排行榜前十名</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于宠物粮食排行榜前十的问题，于是小编就整理了5个相关介绍宠物粮食排行榜前十的解答，让我们一起看看吧。宠物食物？宠物粮有哪些比较靠谱</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6707.htm">给宠物打疫苗可以自己打吗（给宠物打疫苗可以自己打吗?）</a></h4>
                <p>摘要：       本篇文章给大家谈谈给宠物打疫苗可以自己打吗，以及给宠物打疫苗可以自己打吗?对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、能不能自己在家中给猫咪接种疫苗..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4293.htm">免费领养宠物的平台小狗有哪些（免费领养宠物的app有哪些）</a></h4>
                <p>摘要：       本篇文章给大家谈谈免费领养宠物的平台小狗有哪些，以及免费领养宠物的app有哪些对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、家中有一只狗想找新主人上哪..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6936.htm">宠物粮食市场前景分析报告总结怎么写（宠物粮食市场前景分析报告总结怎么写好）</a></h4>
                <p>摘要：       本篇文章给大家谈谈宠物粮食市场前景分析报告总结怎么写，以及宠物粮食市场前景分析报告总结怎么写好对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、宠物行业的..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4368.htm">风水***说养猫好不好（风水***说养猫好不好养）</a></h4>
                <p>摘要：       本篇文章给大家谈谈风水大师说养猫好不好，以及风水大师说养猫好不好养对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、养猫对风水好吗2、...        本</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6890.htm">宠物粮食品牌取名字大全（宠物粮食品牌取名字大全集）</a></h4>
                <p>摘要：       今天给各位分享宠物粮食品牌取名字大全的知识，其中也会对宠物粮食品牌取名字大全集进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、猫粮品牌排名.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4478.htm">开宠物店大概需要多少投资（开宠物店投资多少钱一月能得多少利）</a></h4>
                <p>摘要：       今天给各位分享开宠物店大概需要多少投资的知识，其中也会对开宠物店投资多少钱一月能得多少利进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、开.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-6568.htm">宠物粮行业分析论文题目 宠物粮行业分析论文题目大全</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于宠物粮行业分析论文题目的问题，于是小编就整理了2个相关介绍宠物粮行业分析论文题目的解答，让我们一起看看吧。以珍惜粮食杜绝浪费为主</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-5929.htm">领养宠物狗狗免费（领养宠物狗免费的平台）</a></h4>
                <p>摘要：       今天给各位分享领养宠物狗狗免费的知识，其中也会对领养宠物狗免费的平台进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、网上免费领养狗狗都是坑.</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>