<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-5.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>KMP算法中的next数组详解 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">KMP算法中的next数组详解</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="kmp-算法中对-next-数组的理解">KMP 算法中对 next 数组的理解</h1> <h2 id="next-数组的意义">next 数组的意义</h2> <p>此处 next[j] = k；则有 k 前面的浅蓝色区域和 j 前面的浅蓝色区域相同；</p> <p>next[j] 表示当位置 j 的字符串与主串不匹配时，下一个需要和主串比较的字串位置在 next[j] 处；有下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>若当前位置 j 与主串某一个字符不匹配，则下一次比较的是 K 与主串的当前位置，这个 K 也就是next[j]；由于两个浅蓝色区域相同，因此 K 前面的区域肯定与主串相同，不需比较；如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a0e7afd996bbf8b9f0001f2a96233b18.jpg" alt="KMP算法中的next数组详解"></p> <p>由上图可知，K 前面的区域不需比较；</p> <h2 id="next-数组的推导">next 数组的推导</h2> <p>从 next 数组所表达的意义可知，我们要求 next[j]，首先要找到一个 K，这个 K 前面的浅蓝色区域和 j 前面的浅蓝色区域相同；如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>根据规定 next[1] = 0；接下来求其他的 next[j]；</p> <p>对于 next[2] 可得其必然为 next[2] = 1；</p> <p>如下图：当第二个元素不匹配时，j 将退回到 1 处进行比较，因此 next[2] 一定为 1；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b67eacc23d3f1e47d84109d7b3ddf7f7.jpg" alt="KMP算法中的next数组详解"></p> <p>接下来是一般情况的推导，此处使用递推法进行推导，即已知 next[j] 求 next[j + 1]；</p> <p>若 next[j] = k 则有下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/c3ddd12bc3b9bc60bfc05429ffbd34bc.jpg" alt="KMP算法中的next数组详解"></p> <p>由于 next[j = k，可知浅蓝色部分相同；接下来分两种情况讨论；</p> <ul> <li> <p>ch[K] == ch[j]，这种情况时，可以得到下图；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ceb8888dbf20ba362e53d01f9f9b9722.jpg" alt="KMP算法中的next数组详解"></p> </li> </ul> <p>由图可知：对于 j + 1，能够找到一个 K + 1 使得有浅蓝色区域相同，那么当 j + 1 不匹配时，下一次将比较 K + 1 和主串；因此 next[j + 1] = K + 1 = next[j] + 1；</p> <ul> <li> <p>ch[K] != ch[j]，这种情况就变的复杂，这也是整个 KMP 算法中最难理解的部分；</p> <p>从本节的开头可以知道，求 next[j + 1] 最关键的一点在于求 j + 1 之前有多长的后缀和前缀匹配，即找出多大的浅蓝色区域匹配；我们现在面对的图如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/256b1e9b972765f60b4e1665bef93d48.jpg" alt="KMP算法中的next数组详解"></p> </li> </ul> <p>我们的目的是找到一个 K1 使得出现下列情况：找到 K1 使得浅蓝色部分相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/55433722a109b8d4415ea5499788f9cf.jpg" alt="KMP算法中的next数组详解"></p> <p>要想浅蓝色部分相同，分为两个部分，使得 1 和 2 相同，使得 K1 和 j 相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d6730e1627357bb0951dd56e35ea6260.jpg" alt="KMP算法中的next数组详解"></p> <p>想要让 1 和 2 相同是难以比较的，但是可以转化为另一个问题，如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc72ad97bf27299bd8a4f3b49058dfdc.jpg" alt="KMP算法中的next数组详解"></p> <p><strong>想要找出 1 和 3 相同的区域，等价与找到 1 和 2 相同的区域；</strong>为什么呢？因为 next[j] = K，因此 j 前面与 K 前面相同如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/435eb439c59f823a4adf7f414fd7fb7c.jpg" alt="KMP算法中的next数组详解"></p> <p>这个等价关系非常重要，是这部分推导的关键；将其单独抽离出来如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cee276050b3fcc10c73f6c70d6eb0d81.jpg" alt="KMP算法中的next数组详解"></p> <p>那么如何得到 K1 使得 1 和 2 相同呢？回到文首 next[j] 所表示的意义，<strong>next[j] = k；则有 k 前面的浅蓝色区域和 j 前面的浅蓝色区域相同</strong> 而 next[K] 是在 j 前面的是已知的，因此可得 K1 = next[K]，此时得到的 K1 即可满足 1 和 3 相同；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/cc72ad97bf27299bd8a4f3b49058dfdc.jpg" alt="KMP算法中的next数组详解">到此就解决了 1 和 3 相等的问题，直接比较 K1 和 j 若两者相同，则可得到下图；</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/55433722a109b8d4415ea5499788f9cf.jpg" alt="KMP算法中的next数组详解"></p> <p>那么 next[j + 1] = K1 + 1 = next[K] + 1 = next[next[j]] + 1；</p> <p>那么若 ch[j] != ch[K1] 呢？那么就又演化为如下问题：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/aca4be87b68f1d5156b4cf0448e0e8e8.jpg" alt="KMP算法中的next数组详解"></p> <p>这个图和本小节开始的图相同，那么按照此方法解决即可；</p> <p>可得结果：next[j + 1] = next[K1] + 1 = next[next[K]] + 1 = next[next[next[j]]] + 1</p> <p>若下一次 K2 依然和 j 不相等，那么又接着递归即可；一直到 Kn = 0；</p> <h2 id="一个例子">一个例子</h2> <p>接下来使用上面的结论来计算一个字符串的 next 数组；</p> <p>有数组 ababaaababaa 转化为如下表：</p> <table> <thead> <tr> <th style="text-align: center">S</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">b</th> <th style="text-align: center">a</th> <th style="text-align: center">a</th> </tr> </thead> <tbody> <tr> <td style="text-align: center">编号</td> <td style="text-align: center">1</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">5</td> <td style="text-align: center">6</td> <td style="text-align: center">7</td> <td style="text-align: center">8</td> <td style="text-align: center">9</td> <td style="text-align: center">10</td> <td style="text-align: center">11</td> <td style="text-align: center">12</td> </tr> <tr> <td style="text-align: center">next</td> <td style="text-align: center">0</td> <td style="text-align: center">1</td> <td style="text-align: center">1</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">2</td> <td style="text-align: center">2</td> <td style="text-align: center">3</td> <td style="text-align: center">4</td> <td style="text-align: center">5</td> <td style="text-align: center">6</td> </tr> </tbody> </table> <p>按如下顺序填表的 next 栏：</p> <ul> <li>对于 next[1] 规定为 0，根据前面的分析：next[2] = 1；</li> <li>对于 next[3]，则观察 2 和 next[2] = 1，即 b 和 a，不相等；而next[next[2]] = 0，因此 next[3] = 1；</li> <li>对于 next[4]，观察 3 和 next[3] = 1，即 a 和 a，相等，故 next[4] = next[3] + 1 = 2；</li> <li>对于 next[5]，观察 4 和 next[4] = 2，即 b 和 b，相等，故 next[5] = next[4] + 1 = 3；</li> <li>对于 next[6]，观察 5 和 next[5] = 3，即 a 和 a，相等，故 next[6] = next[5] + 1 = 4；</li> <li>对于 next[7]，观察 6 和 next[6] = 4，即 a 和 b，不相等，next[next[6]] = 2，与 6 比较即 b 和 a，不相等，继续递归 next[next[next[6]]] = next[next[4]] = next[2] = 1；比较 1 和 6 即 a 和 a，相等，因此 next[6] = next[next[next[6]] + 1 = 2；</li> <li>对于 next[8]，观察 7 和 next[7] = 2，即 a 和 b，不相等，next[next[7]] = 1，1 和 7相等，因此 next[8] = next[next[7]] + 1 = next[2] + 1 = 2；</li> <li>对于 next[9]，观察 8 和 next[8] = 2，即 b 和 b，相等，故 next[9] = next[8] + 1 = 3；</li> <li>对于 next[10]，观察 9 和 next[9] = 1，即 a 和 a，相等，故 next[10] = next[9] + 1 = 4；</li> <li>对于 next[11]，观察 10 和 next[10] = 2，即 b 和 b，相等，故 next[11] = next[10] + 1 = 5；</li> <li>对于 next[12]，观察 11 和 next[11] = 3，即 a 和 a，相等，故 next[12] = next[11] + 1 = 6；</li> </ul> <h2 id="代码实现">代码实现</h2> <p>通过以上分析得到的获取 next 数组的代码如下：</p> <pre><code class="language-cpp">void get_next(String T, int next[]) {     int k = 0, j = 1;     next[1] = 0;     while (j &lt; T.length)     {         if(k == 0 || T.ch[k] == T.ch[j]) {             k++;             j++;             next[j] = k;         } else {             k = next[k];         }     } }</code></pre> <p>那么接下来的 KMP 算法代码就比较容易了：</p> <pre><code class="language-cpp">int KMP(String S, String T, int next[]) {     int i = 1, j = 1;     while (i &lt;= S.length &amp;&amp; j &lt;= T.length)     {         if(j == 0 || S.ch[i] == T.ch[j]) {             i++;             j++;         } else {             j = next[j];         }     }     if(j &gt; T.length) {         return i - T.length;     } else {         return 0;     } }</code></pre> <p>测试代码如下：</p> <pre><code class="language-cpp">#include&lt;iostream&gt; using namespace std; const int MAX = 255; typedef struct {     char ch[MAX];     int length; } String;  void InitiString(String &amp;s, char chars[]) {     int len = 0;     while(chars[len] != '\0') {         s.ch[len + 1] = chars[len];         len++;     }     s.length = len; }  void get_next(String T, int next[]) {     int k = 0, j = 1;     next[1] = 0;     while (j &lt; T.length)     {         if(k == 0 || T.ch[k] == T.ch[j]) {             k++;             j++;             next[j] = k;         } else {             k = next[k];         }     } }  int KMP(String S, String T, int next[]) {     int i = 1, j = 1;     while (i &lt;= S.length &amp;&amp; j &lt;= T.length)     {         if(j == 0 || S.ch[i] == T.ch[j]) {             i++;             j++;         } else {             j = next[j];         }     }     if(j &gt; T.length) {         return i - T.length;     } else {         return 0;     } }  int main() {     char char1[20] = "aabaabaabaac";     char char2[20] = "aabaac";     String S, T;     InitiString(S, char1);     InitiString(T, char2);     int next[MAX];     get_next(T, next);     int index  = KMP(S, T, next);     printf("%d", index);     return 0; }</code></pre> <p>输出结果：</p> <pre><code class="language-cpp">7</code></pre> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-4.htm">Kubernetes Ingress作用及Ingress-Nginx实际操作详解</a></p>
                                        <p>下一个：<a href="/html/category/article-6.htm">win11系统找不到网络路径如何解决</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-247.htm">.NET如何快速比较两个byte数组是否相等</a></h4>
                <p>前言  之前在群里面有群友问过一个这样的问题，在.NET中如何快速的比较两个byte数组是否完全相等，听起来是一个比较两个byte数组是完全相等是一个简单的问题，但是深入研究以后，觉得还是有很多方案的</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">实战代码（十）：Springboot RestTemplate连接池</a></h4>
                <p>一、理论基础 RestTemplate是Springboot中内置的Http请求工具，可以直接注入使用。 两个常用的构造方法如下图 (点击进入文档地址)  从上面可以看出，最简单的方式就是使用默认配置</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">坑——java里List的remove方法</a></h4>
                <p>写过的类似代码： /**  * 2018年5月20日上午9:54:02  */ package com.test;  import java.util.ArrayList; import java.u</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Android 4.0.1破坏了WebView HTML 5本地存储？</a></h4>
                <p>要解决此问题，请执行以下步骤- 对于版本低于4.4的android，将数据加载到具有这样的目录的文件方案的web视图中将不起作用。 browser.loadDataWithBaseUrl("file:</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">2、java mybatis 命名空间</a></h4>
                <p>命名空间： 在之前版本的 MyBatis 中，命名空间（Namespaces）的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。 命名空间的作用有两个，一个是利用更长的全限定</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Azure DevOps 中 Dapr项目自动部署流程实践</a></h4>
                <p>注：本文中主要讨论 .NET6.0项目在 k8s 中运行的 Dapr 的持续集成流程, 但实际上不是Dapr的项目部署到K8s也是相同流程，只是k8s的yaml配置文件有所不同 流程选择 基于 Dap</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">使用Python实现KNN算法解决简单分类问题</a></h4>
                <p>使用Python实现KNN算法解决简单分类问题 KNN分类 KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。K</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Android jetpack room+ViewModel+liveData 数据自动更新</a></h4>
                <p>Android jetpack room的使用_安果移不动的博客-CSDN博客 接上篇博客 我们用google推荐的这种方式  &nbsp; 修改： StudentDao package com.an</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-239.htm">vue中watch监听，ajax异步问题解决</a></h4>
                <p>1.组装参数调方法 getResult(){ 	//组装requestParam1和requestParam2参数  	let requestParam1 = {} 	let requestParam</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>