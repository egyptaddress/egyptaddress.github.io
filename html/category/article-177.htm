<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-177.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>vue项目实现自定义tabBar组件的封装 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">vue项目实现自定义tabBar组件的封装</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>首先感谢王红元老师的vue课程，从中受益良多。特别是在目录结构的划分、组件封装思想上受到了很大启发，下面为大家带来一个tabBar的组件封装。</p> <p>一、创建一个存放公共组件的文件夹，里面再新建一个tabbar的文件夹。里面创建两个.vue文件：TabBar.vue和TabBarItem.vue 如图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230110/b79eed3aa9b1f6413733910306696939.jpg" alt="vue项目实现自定义tabBar组件的封装"><br /> 1、TabBar.vue代码展示：</p> <pre><code class="prism language-bash"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"tab-bar"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>slot<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/slot<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>   <span class="token builtin class-name">export</span> default <span class="token punctuation">{<!-- --></span>     name: <span class="token string">"TabBar"</span>   <span class="token punctuation">}</span> <span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>   .tab-bar<span class="token punctuation">{<!-- --></span>     width:100%<span class="token punctuation">;</span>     height: 49px<span class="token punctuation">;</span>     position: fixed<span class="token punctuation">;</span>     bottom: <span class="token number">0</span><span class="token punctuation">;</span>     left: <span class="token number">0</span><span class="token punctuation">;</span>     z-index: <span class="token number">500</span><span class="token punctuation">;</span>     display: flex<span class="token punctuation">;</span>     justify-content: space-around<span class="token punctuation">;</span>     background-color: white<span class="token punctuation">;</span>     border-top: 1px solid <span class="token comment">#f3f3f3</span>   <span class="token punctuation">}</span> <span class="token operator">&lt;</span>/style<span class="token operator">&gt;</span>  </code></pre> <p>2、TabBarItem.vue代码展示：</p> <pre><code class="prism language-bash"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">"tab-bar-item"</span> :style<span class="token operator">=</span><span class="token string">"{color: defaultColor}"</span> @click<span class="token operator">=</span><span class="token string">"itemBind"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div v-if<span class="token operator">=</span><span class="token string">"!isActive"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>slot <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"item-icon"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/slot<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div v-else<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>slot <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"item-icon-active"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/slot<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div :style<span class="token operator">=</span><span class="token string">"activeStyle"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>slot <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"item-text"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>/slot<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>   <span class="token builtin class-name">export</span> default <span class="token punctuation">{<!-- --></span>     name: <span class="token string">"TabBarItem"</span>,     computed:<span class="token punctuation">{<!-- --></span>       <span class="token function-name function">isActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> //激活当前路由对应的tab项样式         <span class="token builtin class-name">return</span> this.<span class="token variable">$route</span>.path.indexOf<span class="token punctuation">(</span>this.path<span class="token punctuation">)</span> <span class="token operator">!=</span> -1       <span class="token punctuation">}</span>,       <span class="token function-name function">activeStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token builtin class-name">return</span> this.isActive?<span class="token punctuation">{<!-- --></span>color:this.activeColor<span class="token punctuation">}</span>:<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>       <span class="token punctuation">}</span>     <span class="token punctuation">}</span>,     props:<span class="token punctuation">{<!-- --></span>       path:<span class="token punctuation">{<!-- --></span>         type:String,         default:<span class="token string">'/'</span>       <span class="token punctuation">}</span>,       activeColor: <span class="token punctuation">{<!-- --></span>         type:String,         default: <span class="token string">'#f96702'</span>       <span class="token punctuation">}</span>,       defaultColor:<span class="token punctuation">{<!-- --></span>         type: String,         default: <span class="token string">'#666'</span>       <span class="token punctuation">}</span>     <span class="token punctuation">}</span>,     methods:<span class="token punctuation">{<!-- --></span>       <span class="token function-name function">itemBind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> //点击tabBar项跳转对应的路由         if<span class="token punctuation">(</span><span class="token operator">!</span>this.isActive<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>           this.<span class="token variable">$router</span>.replace<span class="token punctuation">(</span>this.path<span class="token punctuation">)</span>         <span class="token punctuation">}</span>       <span class="token punctuation">}</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span> <span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>   .tab-bar-item<span class="token punctuation">{<!-- --></span>     position: relative<span class="token punctuation">;</span>     display: flex<span class="token punctuation">;</span>     flex-direction: <span class="token function">column</span><span class="token punctuation">;</span>     justify-content: center<span class="token punctuation">;</span>     align-items: center<span class="token punctuation">;</span>     font-size: 13px   <span class="token punctuation">}</span>   .tab-bar-item img<span class="token punctuation">{<!-- --></span>     display: block<span class="token punctuation">;</span>     width: 25px<span class="token punctuation">;</span>     height: 25px<span class="token punctuation">;</span>     margin-bottom: 2px<span class="token punctuation">;</span>   <span class="token punctuation">}</span> <span class="token operator">&lt;</span>/style<span class="token operator">&gt;</span>  </code></pre> <p>二、创建一个MainTabBar.vue文件，用于导入上述组件，以及配置tabBar相关参数。代码展示：</p> <pre><code class="prism language-bash"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>tab-bar v-if<span class="token operator">=</span><span class="token string">"isShowTabbar"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>tab-bar-item       v-for<span class="token operator">=</span><span class="token string">"item in tabBarArr"</span>       :path<span class="token operator">=</span><span class="token string">"item.path"</span>       :activeColor<span class="token operator">=</span><span class="token string">"activeColor"</span>       :defaultColor<span class="token operator">=</span><span class="token string">"defaultColor"</span>     <span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>template v-slot:item-icon<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>img :src<span class="token operator">=</span><span class="token string">"item.defaultIcon"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>template v-slot:item-icon-active<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>img :src<span class="token operator">=</span><span class="token string">"item.activeIcon"</span><span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>template v-slot:item-text<span class="token operator">&gt;</span>         <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>item.name<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>/tab-bar-item<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>/tab-bar<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>/template<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>   <span class="token function">import</span> TabBar from <span class="token string">'components/common/tabbar/TabBar'</span>   <span class="token function">import</span> TabBarItem from <span class="token string">'components/common/tabbar/TabBarItem'</span>   <span class="token builtin class-name">export</span> default <span class="token punctuation">{<!-- --></span>     name: <span class="token string">"MainTabBar"</span>,     components:<span class="token punctuation">{<!-- --></span>       TabBar,TabBarItem     <span class="token punctuation">}</span>,     <span class="token function-name function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       return<span class="token punctuation">{<!-- --></span>         activeColor:<span class="token string">'#008cd6'</span>, //选中色         defaultColor:<span class="token string">'#8a8a8a'</span>, //默认色         tabBarArr:<span class="token punctuation">[</span>           <span class="token punctuation">{<!-- --></span>             path:<span class="token string">'/storelist'</span>,             name:<span class="token string">'加油闪付'</span>,             defaultIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/flashPay.png'</span><span class="token punctuation">)</span>,             activeIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/flashPayChoosed.png'</span><span class="token punctuation">)</span>           <span class="token punctuation">}</span>,           <span class="token punctuation">{<!-- --></span>             path:<span class="token string">'/equity'</span>,             name:<span class="token string">'车主权益'</span>,             defaultIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/equity.png'</span><span class="token punctuation">)</span>,             activeIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/equityChoosed.png'</span><span class="token punctuation">)</span>           <span class="token punctuation">}</span>,           <span class="token punctuation">{<!-- --></span>             path:<span class="token string">'/gasstation'</span>,             name:<span class="token string">'油站导航'</span>,             defaultIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/navigation.png'</span><span class="token punctuation">)</span>,             activeIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/navigationChoosed.png'</span><span class="token punctuation">)</span>           <span class="token punctuation">}</span>,           <span class="token punctuation">{<!-- --></span>             path:<span class="token string">'/profile'</span>,             name:<span class="token string">'个人中心'</span>,             defaultIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/customerCenter.png'</span><span class="token punctuation">)</span>,             activeIcon:require<span class="token punctuation">(</span><span class="token string">'assets/img/tabbar/customerCenterChoosed.png'</span><span class="token punctuation">)</span>           <span class="token punctuation">}</span>         <span class="token punctuation">]</span>       <span class="token punctuation">}</span>     <span class="token punctuation">}</span>,     computed:<span class="token punctuation">{<!-- --></span>       // 控制非tab页隐藏tab导航       <span class="token function-name function">isShowTabbar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token builtin class-name">return</span> this.tabBarArr.map<span class="token punctuation">(</span>val<span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">{<!-- --></span>return val<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>.includes<span class="token punctuation">(</span>this.<span class="token variable">$route</span>.path<span class="token punctuation">)</span>       <span class="token punctuation">}</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span> <span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span>  </code></pre> <p>三、导入组件<br /> 在App.vue文件中导入MainTabBar.vue组件;<br /> 然后调用即可;<br /> 至此tabBar的底部导航组件封装完成;</p> <p>达到的功能：可配置默认色、激活色、图标、路由。</p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-176.htm">HTML页面的加载顺序</a></p>
                                        <p>下一个：<a href="/html/category/article-178.htm">【Android】ListView 控件的简单使用</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></h4>
                <p>文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Azure Virtual Desktop创建配置管理详解</a></h4>
                <p>一，引言 Azure 虚拟创面是一项 Azure 服务，可以让我们管理： 　　1）VDI（虚拟桌面基础架构） 　　2）云端的 RDSH：RDSH 是 RDS（远程桌面服务）中的一个角色。这些类型的服务</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">Java 集合框架ArrayList 储存自定义数组</a></h4>
                <p>package LinkedList;  import java.util.ArrayList; import java.util.Iterator;  import p.bean.Person;  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">图解Redis之数据结构篇压缩列表</a></h4>
                <p>前言 &nbsp;&nbsp;&nbsp;&nbsp;同整数集合一样压缩列表也不是基础数据结构，而是 Redis 自己设计的一种数据存储结构。它有点儿类似数组，通过一片连续的内存空间，来存储数据。不过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></h4>
                <p>前几天有个老项目找到我，有多老呢？比我工作年限都长，见到这个项目我还得叫一声前辈。 这个项目目前使用非常稳定，十多年了没怎么更新过，现在客户想加一个小功能：在线预览Word文档。 首先想到的是用第三方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-232.htm">使用JSR-303 Validation后端验证</a></h4>
                <p>&nbsp; 一、JSR-303简介：官网  JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。 此实</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑</a></h4>
                <p>前提： 由于业务需要在entity Product已经实现了@version的乐观锁的基础上再加上了悲观锁的控制 @Lock(value = LockModeType.PESSIMISTIC_WRIT</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></h4>
                <p>问题描述： 发送POST请求，控制台打印： 错误信息:Read timed out executing POST http://xxx 解决方法： 在配置文件中添加超时配置即可</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>