<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-177.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>SpringBoot2.3应用制作Docker镜像详解 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">SpringBoot2.3应用制作Docker镜像详解</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h3>本篇简介<br /><a id="SpringBoot23_0" rel="nofollow"></a></h3> <ol> <li>本篇的主题是动手实战，力求最快速度体验官方的镜像制作方案；</li> <li>本篇不会涉及理论知识，这些留给下一章；</li> <li>一通操作后可能会产生诸多疑问，文末留下了几个典型问题，您可以先思考再进入下一章揭晓；</li> </ol> <h3><a id="SpringBoot_16" rel="nofollow"></a>SpringBoot应用源码</h3> <ol> <li>本次实战用的是普通的SpringBoot工程，如果您不想写代码，源码可在GitHub下载到，地址和链接信息如下表所示(https://github.com/zq2599/blog_demos)：</li> </ol> <table> <thead> <tr> <th align="left">名称</th> <th align="left">链接</th> <th align="left">备注</th> </tr> </thead> <tbody> <tr> <td align="left">项目主页</td> <td align="left">https://github.com/zq2599/blog_demos</td> <td align="left">该项目在GitHub上的主页</td> </tr> <tr> <td align="left">git仓库地址(https)</td> <td align="left">https://github.com/zq2599/blog_demos.git</td> <td align="left">该项目源码的仓库地址，https协议</td> </tr> <tr> <td align="left">git仓库地址(ssh)</td> <td align="left">git@github.com:zq2599/blog_demos.git</td> <td align="left">该项目源码的仓库地址，ssh协议</td> </tr> </tbody> </table> <ol start="2"> <li>这个git项目中有多个文件夹，本章的应用在<font color="blue">dockerlayerdemo</font>文件夹下，如下图红框所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/ace2456d6fbfa3562f55962134a5a424.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> </ol> <h3><a id="_27" rel="nofollow"></a>版本信息</h3> <ol> <li>SpringBoot：2.3.0.RELEASE</li> <li>JDK：1.8.0_121</li> <li>Maven：3.3.9</li> <li>Docker：19.03.8</li> <li>操作系统：MacBook pro 13寸，macOS Catalina 10.15.4</li> </ol> <h3><a id="_33" rel="nofollow"></a>构建镜像实战</h3> <ol> <li>修改pom.xml，给<font color="blue">spring-boot-maven-plugin</font>插件的配置增加子节点，<font color="blue">enabled</font>的值为<font color="red">true</font>，如下图红框所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/65530e3de86c321384a6a611231e7521.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> <li>在pom.xml文件所在目录新增<font color="blue">Dockerfile</font>文件，内容如下：</li> </ol> <pre><code class="prism language-shell"><span class="token comment"># 指定基础镜像，这是分阶段构建的前期阶段</span> FROM openjdk:8u212-jdk-stretch as builder<span class="token comment"># 执行工作目录</span> WORKDIR application<span class="token comment"># 配置参数</span> ARG JAR_FILE<span class="token operator">=</span>target/*.jar<span class="token comment"># 将编译构建得到的jar文件复制到镜像空间中</span> COPY<span class="token variable">${JAR_FILE}</span> application.jar<span class="token comment"># 通过工具spring-boot-jarmode-layertools从application.jar中提取拆分后的构建结果</span> RUN java -Djarmode<span class="token operator">=</span>layertools -jar application.jar extract<span class="token comment"># 正式构建镜像</span> FROM openjdk:8u212-jdk-stretch WORKDIR application<span class="token comment"># 前一阶段从jar中提取除了多个文件，这里分别执行COPY命令复制到镜像空间中，每次COPY都是一个layer</span> COPY --from<span class="token operator">=</span>builder application/dependencies/ ./ COPY --from<span class="token operator">=</span>builder application/spring-boot-loader/ ./ COPY --from<span class="token operator">=</span>builder application/snapshot-dependencies/ ./ COPY --from<span class="token operator">=</span>builder application/application/ ./ ENTRYPOINT<span class="token punctuation">[</span><span class="token string">"java"</span>,<span class="token string">"org.springframework.boot.loader.JarLauncher"</span><span class="token punctuation">]</span></code></pre> <ol start="3"> <li>执行以下命令编译构建工程：</li> </ol> <pre><code class="prism language-shell">mvn clean package -U -DskipTests</code></pre> <ol start="4"> <li>编译构建完成后确保target目录有<font color="red">jar</font>文件生成；</li> <li>在Dockerfile所在目录执行以下命令构建镜像(请按照您的实际情况调整镜像名)：</li> </ol> <pre><code class="prism language-shell">docker build -t dockerlayerdemo:0.0.1<span class="token keyword">.</span></code></pre> <ol start="6"> <li>镜像构建成功的提示如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/d25df19db0b28779f83ae2ea9b26a50a.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> </ol> <h3><a id="_70" rel="nofollow"></a>验证</h3> <ol> <li>执行以下命令创建并启动容器：</li> </ol> <pre><code class="prism language-shell">docker run --rm -p 8080:8080 dockerlayerdemo:0.0.1</code></pre> <ol start="2"> <li>启动成功的控制台信息：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/2337983a25260100b7aa7cce9780539b.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> <li>浏览器访问：http://localhost:8080/hello ，如下图，一切正常：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/349793ab97dab608e1bc9fc2c279f63d.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> <li>看看镜像的分层信息，执行命令：</li> </ol> <pre><code class="prism language-shell">docker<span class="token function">history</span> dockerlayerdemo:0.0.1</code></pre> <ol start="5"> <li>如下图，整个jar的内容，例如class、依赖库、依赖资源等，分多次COPY到镜像空间中，所以今后如果只改了class，在更新镜像的时候，只需要下载class的layer即可（其他layer可以直接用之前缓存到本地的）：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/b65e11c6cbc09ecae9993699deb18efc.jpg" alt="SpringBoot2.3应用制作Docker镜像详解"></li> </ol> <h3><a id="_87" rel="nofollow"></a>留下的问题</h3> <p>至此，SpringBoot-2.3.0.RELEASE官方推荐的镜像构建方式就实践完成了，但是也留下了一些疑问：</p> <ol> <li>2.3版本推荐的镜像构建方案，和旧版本比有什么不同？</li> <li>pom.xml中spring-boot-maven-plugin插件新增的参数，到底做了什么？</li> <li>Dockerfile中，<font color="blue">java -Djarmode=layertools -jar application.jar extract</font>这个操作啥意思?</li> </ol> <p>这些问题留待<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/boling_cavalry/article/details/106598189"  rel="nofollow">下一篇文章</a>一起深入研究。</p> <h3><a id="_95" rel="nofollow"></a>参考信息</h3> <p>官方文档地址：<br /> https://docs.spring.io/spring-boot/docs/2.3.0.RELEASE/reference/pdf/spring-boot-reference.pdf ，4.31章节</p> <h3><a id="GitHub_99" rel="nofollow"></a></h3> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-176.htm">从零开始搭建高可用的k8s集群_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-178.htm">C ++中的最低票价</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Azure DevOps 中 Dapr项目自动部署流程实践</a></h4>
                <p>注：本文中主要讨论 .NET6.0项目在 k8s 中运行的 Dapr 的持续集成流程, 但实际上不是Dapr的项目部署到K8s也是相同流程，只是k8s的yaml配置文件有所不同 流程选择 基于 Dap</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">go语言panic函数详解</a></h4>
                <p>程序异常被叫做panic，直译为运行时恐慌 当panic被抛出异常后，如果我们没有在程序中添加任何保护措施的话，程序就会打印出panic的详细情况之后，终止运行  panic: runtime err</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-234.htm">Pandas 如何处理超大规模数据</a></h4>
                <p>作者&nbsp;|&nbsp;Sara&nbsp;A.&nbsp;Metwalli 译者&nbsp;|&nbsp;盖磊 策划&nbsp;|&nbsp;陈思  处理大规模数据集时常是棘手的事情，尤其在内</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">从查询重写角度理解elasticsearch的高亮原理</a></h4>
                <p>一、高亮的一些问题 elasticsearch提供了三种高亮方式，前面我们已经简单的了解了elasticsearch的高亮原理; 高亮处理跟实际使用查询类型有十分紧密的关系，其中主要的一点就是muti</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">坑——java里List的remove方法</a></h4>
                <p>写过的类似代码： /**  * 2018年5月20日上午9:54:02  */ package com.test;  import java.util.ArrayList; import java.u</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">vue项目模拟假数据</a></h4>
                <p>开发vue项目的时候需要用到一些假数据，这里我就分享一下用json-server这个包来托管数据。 首先就是npm&nbsp;install&nbsp;-g&nbsp;json-server来全局安装</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">C#中检查null的语法糖_在线工具</a></h4>
                <p>今天看到已经更新了devblogs，新增的C# 11的!!（用于检查null的语法）经过非常长的讨论，最后取消了。然后我又想起来null检查，这个可以说一说。 函数参数null检查 传统写法 写一个函</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-232.htm">树莓派安装centos运行dotnet应用的实践</a></h4>
                <p>在树莓派3上运行dotnet应用，这个过程走了很多弯路，也浪费了不少时间，所以记录一下，供大家参考。树莓派官方提供的镜像系统，是Debian系统，由于习惯了centos的操作，所以选择了安装cento</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-249.htm">vue 使用echarts绘制折线图</a></h4>
                <p>&lt;template&gt;     &lt;div&gt;         &lt;!-- 方法一，注册echarts到vue的原型对象中，指定某个div作为echarts的画布 --&gt; </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>