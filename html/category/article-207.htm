<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-207.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>restTemplate配置及使用 - EgyptAddress</title>
    <link rel="icon" href="/assets/website/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/egyptaddress/style-starter.css">
    <link rel="stylesheet" href="/assets/website/css/style.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title">restTemplate配置及使用</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><a href="/html/category/"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <h1 class="tittle">restTemplate配置及使用</h1>
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li> <ul> <li>1 场景</li> <li>2 依赖</li> <li>3 配置</li> <li>4 使用</li> <li> <ul> <li>4.1 GET请求</li> <li> <ul> <li>4.1.1 普通访问</li> <li>4.1.2 返回HTTP状态</li> <li>4.1.3 映射请求参数</li> </ul> </li> <li>4.2 POST请求</li> <li> <ul> <li>4.2.1 普通访问</li> <li>4.2.2 无请求体的访问</li> </ul> </li> <li>4.3 上传文件</li> </ul> </li> </ul> </li> </ul> </li> </ul> </div> <h3> 1 场景</h3> <p>java开发中，使用http连接，访问<code>第三方网络接口</code>，通常使用的连接工具为<code>HttpClient</code>和<code>OKHttp</code>。</p> <p>这两种连接工具，使用起来比较<code>复杂</code>，新手容易出问题。如果使用spring框架，可以使用<code>restTemplate</code>来进行http连接请求。</p> <p>restTemplate默认的连接方式是java中的<code>HttpConnection</code>，可以使用<code>ClientHttpRequestFactory</code>指定不同的HTTP连接方式。</p> <h3> 2 依赖</h3> <p>maven依赖如下：</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>5.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>dependency</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>groupId</span><span class="token punctuation">></span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>groupId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>artifactId</span><span class="token punctuation">></span></span>httpclient<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>artifactId</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation"><</span>version</span><span class="token punctuation">></span></span>4.5.7<span class="token tag"><span class="token tag"><span class="token punctuation"></</span>version</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation"></</span>dependency</span><span class="token punctuation">></span></span> </code></pre> <h3> 3 配置</h3> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClient<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>HttpClientConnectionManager<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClientBuilder<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>PoolingHttpClientConnectionManager<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ClientHttpRequestFactory<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpComponentsClientHttpRequestFactory<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>RestTemplate<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{<!-- --></span>          <span class="token comment">/**      * http连接管理器      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> HttpClientConnectionManager <span class="token function">poolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">/*// 注册http和https请求         Registry<ConnectionSocketFactory> registry = RegistryBuilder.<ConnectionSocketFactory>create()                 .register("http", PlainConnectionSocketFactory.getSocketFactory())                 .register("https", SSLConnectionSocketFactory.getSocketFactory())                 .build();         PoolingHttpClientConnectionManager poolingHttpClientConnectionManager = new PoolingHttpClientConnectionManager(registry);*/</span>                  PoolingHttpClientConnectionManager poolingHttpClientConnectionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 最大连接数</span>         poolingHttpClientConnectionManager<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 同路由并发数（每个主机的并发）</span>         poolingHttpClientConnectionManager<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> poolingHttpClientConnectionManager<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * HttpClient      * @param poolingHttpClientConnectionManager      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> HttpClient <span class="token function">httpClient</span><span class="token punctuation">(</span>HttpClientConnectionManager poolingHttpClientConnectionManager<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HttpClientBuilder httpClientBuilder <span class="token operator">=</span> HttpClientBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置http连接管理器</span>         httpClientBuilder<span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>poolingHttpClientConnectionManager<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">/*// 设置重试次数         httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(3, true));*/</span>                  <span class="token comment">// 设置默认请求头</span>         <span class="token comment">/*List<Header> headers = new ArrayList<>();         headers.add(new BasicHeader("Connection", "Keep-Alive"));         httpClientBuilder.setDefaultHeaders(headers);*/</span>                  <span class="token keyword">return</span> httpClientBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * 请求连接池配置      * @param httpClient      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> ClientHttpRequestFactory <span class="token function">clientHttpRequestFactory</span><span class="token punctuation">(</span>HttpClient httpClient<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HttpComponentsClientHttpRequestFactory clientHttpRequestFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// httpClient创建器</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setHttpClient</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 连接超时时间/毫秒（连接上服务器(握手成功)的时间，超出抛出connect timeout）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 数据读取超时时间(socketTimeout)/毫秒（务器返回数据(response)的时间，超过抛出read timeout）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 连接池获取请求连接的超时时间，不宜过长，必须设置/毫秒（超时间未拿到可用连接，会抛出org.apache.http.conn.ConnectionPoolTimeoutException: Timeout waiting for connection from pool）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> clientHttpRequestFactory<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * rest模板      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> RestTemplate <span class="token function">restTemplate</span><span class="token punctuation">(</span>ClientHttpRequestFactory clientHttpRequestFactory<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// boot中可使用RestTemplateBuilder.build创建</span>         RestTemplate restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 配置请求工厂</span>         restTemplate<span class="token punctuation">.</span><span class="token function">setRequestFactory</span><span class="token punctuation">(</span>clientHttpRequestFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> restTemplate<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token punctuation">}</span> </code></pre> <h3> 4 使用</h3> <p>使用到的实体类如下：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span> <span class="token annotation punctuation">@ToString</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TempUser</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> String userName<span class="token punctuation">;</span>        <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h4> 4.1 GET请求</h4> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getUser"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">getUser</span><span class="token punctuation">(</span>TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h5> 4.1.1 普通访问</h5> <pre><code class="prism language-java">TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName=张三&age=18"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h5> 4.1.2 返回HTTP状态</h5> <pre><code class="prism language-java">ResponseEntity<span class="token generics function"><span class="token punctuation"><</span>TempUser<span class="token punctuation">></span></span> responseEntity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName=张三&age=18"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取状态对象</span> HttpStatus httpStatus <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取状态码</span> <span class="token keyword">int</span> statusCodeValue <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCodeValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取headers</span> HttpHeaders httpHeaders <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取body</span> TempUser result <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h5> 4.1.3 映射请求参数</h5> <pre><code class="prism language-java">Map<span class="token generics function"><span class="token punctuation"><</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">></span></span> paramMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator"><</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName={userName}&age={age}"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h4> 4.2 POST请求</h4> <h5> 4.2.1 普通访问</h5> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getPostUser"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> TempUser <span class="token function">getPostUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><strong>（1）普通访问接口</strong></p> <pre><code class="prism language-java">TempUser param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUser"</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <p><strong>（2）带HEAD访问接口</strong></p> <pre><code class="prism language-java"><span class="token comment">// 请求头信息</span> HttpHeaders headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>MediaType<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//headers.add("headParam1", "headParamValue");</span>  <span class="token comment">// 请求体内容</span> TempUser param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 组装请求信息</span> HttpEntity<span class="token generics function"><span class="token punctuation"><</span>TempUser<span class="token punctuation">></span></span> httpEntity<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token operator"><</span><span class="token operator">></span><span class="token punctuation">(</span>param<span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>  TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUser"</span><span class="token punctuation">,</span> httpEntity<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <h5> 4.2.2 无请求体的访问</h5> <p>仅method为post，传参方式仍然为get的param方式</p> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getPostUserNoBody"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">getPostUserNoBody</span><span class="token punctuation">(</span>TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>访问方式：</strong></p> <pre><code class="prism language-java">Map<span class="token generics function"><span class="token punctuation"><</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">></span></span> paramMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator"><</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUserNoBody?userName={userName}&age={age}"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <h4> 4.3 上传文件</h4> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"uploadFile"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">uploadFile</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     MultipartHttpServletRequest multipartHttpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span>MultipartHttpServletRequest<span class="token punctuation">)</span> request<span class="token punctuation">;</span>     <span class="token comment">//获取文件信息</span>     MultipartFile multipartFile <span class="token operator">=</span> multipartHttpServletRequest<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>multipartFile <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>form<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>访问方式：</strong></p> <pre><code class="prism language-java"><span class="token comment">// 文件</span> FileSystemResource file<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileSystemResource</span><span class="token punctuation">(</span><span class="token string">"D:\\Elasticsearch权威指南（中文版）.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置请求内容</span> MultiValueMap<span class="token generics function"><span class="token punctuation"><</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">></span></span> param<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token operator"><</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 其他参数</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 组装请求信息</span> HttpEntity<span class="token operator"><</span>MultiValueMap<span class="token generics function"><span class="token punctuation"><</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">></span></span><span class="token operator">></span> httpEntity<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token operator"><</span><span class="token operator">></span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 发送请求</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/uploadFile"</span><span class="token punctuation">,</span> httpEntity<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-206.htm">读取spring的配置来定义常量</a></p>
                                        <p>下一个：<a href="/html/category/article-208.htm">PHP字符串运算符详解</a></p>
                                    </div>
                            </div>
            <div class="col-md-4 w3l-services">
                
<h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9421.htm">三国杀特效素材视频（三国杀 视频）</a></h4>
                <p>摘要：       今天给各位分享三国杀特效素材视频的知识，其中也会对三国杀 视频进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、三国杀大将军特效在哪设置...</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-10202.htm">动物疫苗接种时应注意哪些（动物疫苗接种时应注意哪些安全）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物疫苗接种时应注意哪些，以及动物疫苗接种时应注意哪些安全对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、鸡群的免疫接种应注意哪些问题..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9328.htm">养猫的人容易得什么病图片真实（养猫人容易患什么病）</a></h4>
                <p>摘要：       本篇文章给大家谈谈养猫的人容易得什么病图片真实，以及养猫人容易患什么病对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、养猫会导致什么疾病?...      </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9099.htm">猫咪宠物疫苗多少钱一次（猫的宠物疫苗多少钱）</a></h4>
                <p>摘要：       本篇文章给大家谈谈猫咪宠物疫苗多少钱一次，以及猫的宠物疫苗多少钱对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、猫要打疫苗吗多少钱啊?...        </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9834.htm">动物疫苗接种方法视频 动物疫苗接种方法视频教程</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于动物疫苗接种方法视频的问题，于是小编就整理了2个相关介绍动物疫苗接种方法视频的解答，让我们一起看看吧。牛的疫苗可以口服吗？三联四</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9973.htm">动物疫苗的种类及特点有哪些图片及名称（动物疫苗的类型）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物疫苗的种类及特点有哪些图片及名称，以及动物疫苗的类型对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、狗狗打的疫苗分为哪几种?都有什..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9236.htm">宠物贩卖机市场背景（卫生巾自助贩卖机市场背景）</a></h4>
                <p>摘要：       今天给各位分享宠物贩卖机市场背景的知识，其中也会对卫生巾自助贩卖机市场背景进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、开个宠物用品的小.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9006.htm">两个月大的猫抓伤（两个月大的猫抓伤可要打狂犬疫苗）</a></h4>
                <p>摘要：       今天给各位分享两个月大的猫抓伤的知识，其中也会对两个月大的猫抓伤可要打狂犬疫苗进行解释，如果能碰巧解决你现在面临的问题，别忘了关注本站，现在开始吧！本文目录一览：1、被2个月小猫.</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9881.htm">红烧羊排教程</a></h4>
                <p>各位同学好，相信还有很多人对于怎么的相关问题不太了解，今天给各位分享一下关于红烧羊排怎么的解答，希望可以帮助到大家，下面一起来看看吧！！本文目录导读：红烧羊排的制作方法红烧羊排的制作技巧红烧羊排的制作</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-9053.htm">动物疫苗怎么制作出来的（动物疫苗制作流程）</a></h4>
                <p>摘要：       本篇文章给大家谈谈动物疫苗怎么制作出来的，以及动物疫苗制作流程对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、疫苗都是怎么生产的?有哪些方法?...    </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">22</span> <a href="/html/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
                                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/website/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/website/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/website/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>