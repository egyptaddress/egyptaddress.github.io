<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-118.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>RecyclerView单层RecyclerView实现点击展开、折叠效果 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">RecyclerView单层RecyclerView实现点击展开、折叠效果</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-github-gist"> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/9be7b0dfb3be6af2eaea06d02e51c1a3.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <p>最近有RecyclerView点击展开、折叠item的需求，其中一种写法是利用两个RecyclerView实现，但这样效率不高。因此采用单层RecyclerView来实现此需求。</p> <h2><a id="1_itemAdapteritem_5" rel="nofollow"></a>1 定义两个布局item的结构，Adapter的数据源为两种item组装成的集合</h2> <h4><a id="11_itemChildBookItem_6" rel="nofollow"></a>1.1 子item:ChildBookItem</h4> <p>简单起见，只展示一个bookName</p> <pre><code class="prism language-java"><span class="token keyword">private</span> String bookName<span class="token punctuation">;</span></code></pre> <h4><a id="12__itemCategoryItem_13" rel="nofollow"></a>1.2 父item:CategoryItem</h4> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">int</span> index<span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">boolean</span> isShow<span class="token punctuation">;</span><span class="token comment">// 展开状态</span><span class="token keyword">private</span> String categoryName<span class="token punctuation">;</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token punctuation">;</span><span class="token comment">// 子item列表</span></code></pre> <blockquote> <p>index表示在item集合中此CategoryItem的位置（不算ChildBookItem的数量）；<br /> List childBookItems 是此Category在展开状态下所包含的子item集合，只用于记录对应关系，并不参与绘制UI。</p> </blockquote> <h2><a id="2__27" rel="nofollow"></a>2 组装数据</h2> <h4><a id="21___28" rel="nofollow"></a>2.1 获取数据源</h4> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>          BookShelf bookShelf1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"科幻类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books1<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"三体"</span><span class="token punctuation">,</span><span class="token string">"流浪地球"</span><span class="token punctuation">,</span><span class="token string">"降临"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf1<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf1<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"政治类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books2<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"美国陷阱"</span><span class="token punctuation">,</span><span class="token string">"从赫鲁晓夫到普京"</span><span class="token punctuation">,</span><span class="token string">"为什么是以色列"</span><span class="token punctuation">,</span><span class="token string">"南京大屠杀"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf2<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf2<span class="token punctuation">)</span><span class="token punctuation">;</span>          BookShelf bookShelf3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">BookShelf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"文学类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String<span class="token punctuation">[</span><span class="token punctuation">]</span> books3<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{<!-- --></span><span class="token string">"我们仨"</span><span class="token punctuation">,</span><span class="token string">"小姨多鹤"</span><span class="token punctuation">,</span><span class="token string">"我与地坛"</span><span class="token punctuation">,</span><span class="token string">"黄金时代"</span><span class="token punctuation">,</span><span class="token string">"雪国"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         bookShelf3<span class="token punctuation">.</span><span class="token function">setBooks</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>books3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mDatas<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>bookShelf3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> mDatas<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h4><a id="22__item_56" rel="nofollow"></a>2.2 初始化组装item</h4> <p>由于初始不展示子item，所以不需要设置ChildBookItems的内容。此时定义的Adapter绑定的集合类型为Object，既包含CategoryItem，也包括ChildBookItem，所以不指定具体类型。</p> <pre><code class="prism language-java"><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>Object<span class="token punctuation">&gt;</span></span> mList<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// item组装数据</span><span class="token keyword">private</span> List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span><span class="token function">initItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>BookShelf<span class="token punctuation">&gt;</span></span> bookShelves<span class="token operator">=</span><span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>CategoryItem<span class="token punctuation">&gt;</span></span> items<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookShelves<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             BookShelf bookShelf<span class="token operator">=</span> bookShelves<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>              CategoryItem categoryItem<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">CategoryItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setIndex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setShow</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setCategoryName</span><span class="token punctuation">(</span>bookShelf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>categoryItem<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> items<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/ab8e4050bc2012a18afbf4e10ac83389.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"><br /> 此时的items包含了三条数据，均为父item类型</p> <h4><a id="23__itemAdapterViewHolder_82" rel="nofollow"></a>2.3 根据item的不同，在Adapter中调用不同的ViewHolder</h4> <p>BookViewHolder与CategoryViewHolder均为继承BaseViewHolder的ViewHolder，可在两个文件中分别进行item相关UI展示。<br /> 下边为Adapter部分关键代码：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> BaseViewHolder<span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup viewGroup<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">case</span> TYPE_CATEGORY<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">CategoryViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_category_item<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">case</span> TYPE_BOOK<span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BookViewHolder</span><span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>layout_item_book<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">BaseViewHolder</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">LinearLayout</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">bindView</span><span class="token punctuation">(</span>List list<span class="token punctuation">,</span> Object obj<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">int</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Object obj<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">CategoryItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_CATEGORY<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token keyword">instanceof</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> TYPE_BOOK<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> BaseViewHolder baseViewHolder<span class="token punctuation">,</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         baseViewHolder<span class="token punctuation">.</span><span class="token function">bindView</span><span class="token punctuation">(</span>mDatas<span class="token punctuation">,</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="3__119" rel="nofollow"></a>3 点击操作</h2> <h4><a id="31_item_120" rel="nofollow"></a>3.1 展开子item</h4> <blockquote> <p>mList.addAll(mSelectedPosition + 1, childBookItems)：将ChildBookItem集合加入到适配器绑定数据集合中，位置在刚刚点击的父item后一位；<br /> mSelectedPosition：为刚刚点击的父item的position；<br /> categoryItem.setChildBookItems(childBookItems)：确定父item与子item集合的对应关系，方便后边折叠item时候直接从mList中删除此集合。</p> </blockquote> <pre><code class="prism language-java"><span class="token comment">// 展开子item</span><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">addChildItems</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">&gt;</span></span> bookList<span class="token operator">=</span> mDatas<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBooks</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         List<span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span> childBookItems<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> bookList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             ChildBookItem item<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ChildBookItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             item<span class="token punctuation">.</span><span class="token function">setBookName</span><span class="token punctuation">(</span>bookList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             childBookItems<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>         mList<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>mSelectedPosition<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 添加子item</span>         CategoryItem categoryItem<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span> mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         categoryItem<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span>childBookItems<span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>若此时点击最后一个父item，可看到mList中前三条数据为CategoryItem类型；后五条数据为ChildBookItem类型，并与第三条CategoryItem的子item列表内容相同。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/40efef494c349f37c56495e550ff47a0.jpg" alt="RecyclerView单层RecyclerView实现点击展开、折叠效果"></p> <h4><a id="32_item_145" rel="nofollow"></a>3.2 折叠子item</h4> <blockquote> <p>mList.removeAll(item.getChildBookItems())： 由于之前展开item的时候已经设置好了CategoryItem与ChildBookItem之间的对应关系，所以可通过此行代码直接从mList中删除子item。</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">private</span><span class="token keyword">void</span><span class="token function">removeChildItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         CategoryItem item<span class="token operator">=</span><span class="token punctuation">(</span>CategoryItem<span class="token punctuation">)</span>mList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>mSelectedPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>         mList<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getChildBookItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         item<span class="token punctuation">.</span><span class="token function">setChildBookItems</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>ChildBookItem<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         mAdapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <h2><a id="4_demo_159" rel="nofollow"></a>4 demo下载</h2> <p>可在<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://download.csdn.net/download/qq_31573123/11812750"  rel="nofollow">这里下载单层RecyclerView实现点击展开、折叠效果的demo</a></p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-117.htm">kafka正常启动，但是几秒后停止运行</a></p>
                                        <p>下一个：<a href="/html/category/article-119.htm">配置简单RestTemplate</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">git 回滚到之前某一commit</a></h4>
                <p>git log git reset –hard 8ff24a6803173208f3e606e32dfcf82db9ac84d8</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">Ribbon（一）远程调用RestTemplate</a></h4>
                <p>目录 一、RestTemplate介绍 二、需求说明 1、业务结构及说明 三、模块搭建 1、新建一个maven项目 2、添加ribbon依赖 3、编辑yml 4、主程序 5、编辑RibbonContr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">如何保证Redis缓存和数据库一致性？</a></h4>
                <p>首先我们先了解下缓存是什么？ 缓存就是把低速存储的结果，临时保存在高速存储的技术。 为什么使用redis进行缓存数据？ Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Azure DevOps 中 Dapr项目自动部署流程实践</a></h4>
                <p>注：本文中主要讨论 .NET6.0项目在 k8s 中运行的 Dapr 的持续集成流程, 但实际上不是Dapr的项目部署到K8s也是相同流程，只是k8s的yaml配置文件有所不同 流程选择 基于 Dap</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">2、java mybatis 命名空间</a></h4>
                <p>命名空间： 在之前版本的 MyBatis 中，命名空间（Namespaces）的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。 命名空间的作用有两个，一个是利用更长的全限定</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">眼见不一定为实：调用链HBase倾斜修复</a></h4>
                <p>hello，大家好，我是小楼。 今天给大家分享一个关于HBase数据倾斜的排查案例，不懂调用链？不懂HBase？没关系，看完包懂~ 背景 最近HBase负责人反馈HBase存储的调用链数据偶尔出现极其</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">SpringMVC拦截器path路径的坑</a></h4>
                <p>SpringMVC提供了很方便的拦截器供我们开发使用。在配置文件中通过&lt;mvc:mapping path="" /&gt;进行配置拦截的路径，但是这个path在配置的时候有一个小坑 我们都知道在</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-260.htm">dataframe数据自动对齐</a></h4>
                <p>import pandas as pd import numpy as np  # Pandas 可以根据索引实现数据自动对齐，索引不重合的部分被置为NaN  df1 = pd.DataFrame(n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">js数组删除的方法</a></h4>
                <p>js的数组删除，我建议大家使用splice函数，不要使用slice函数，因为slice是返回一个新数组，并不是从原来的数组中删除。 比如： let a=[111,222,333,444]; a.spl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">vue父组件向子组件传值与传递方法</a></h4>
                <p>vue父组件向子组件传值与传递方法 学习笔记 1、父组件向子组件传值（props）  在子组件中，默认是无法访问到父组件中的data上的数据和methods中的方法 父组件可以在引用子组件的时候，通过</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>