<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-161.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>通俗易懂：窗口函数案例详解 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">通俗易懂：窗口函数案例详解</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="什么是窗口函数">什么是窗口函数</h1> <p>相信很多人都比较熟悉 SQL 聚合函数的语法，比如 count(), sum(), max()等，</p> <p>窗口函数类似聚合函数，不同的是窗口函数不改变原有的行。</p> <p>窗口函数是数据分析和数据开发必备的技能。</p> <p>基本语法：<code>&lt;窗口函数&gt; over (partition by &lt;用于分组的列名&gt; order by &lt;用于排序的列名&gt;)</code></p> <p>可能这样的解释还是不明了，没事，往后看，一会你就明白了。</p> <h1 id="案例">案例</h1> <p>现在先模拟几条数据，假如目前有学生成绩表（stu_scores）如下：</p> <table> <thead> <tr> <th>class(班级)</th> <th>id(学号)</th> <th>score(成绩)</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>004</td> <td>71</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> </tr> <tr> <td>1</td> <td>002</td> <td>98</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> </tr> </tbody> </table> <h2 id="语句一">语句一：</h2> <pre><code>select *, 	rank①() over②(partition by③ class order by④ score desc) ranking  from stu_scores;</code></pre> <p>得到的结果如下：</p> <table> <thead> <tr> <th>class(班级)</th> <th>id(学号)</th> <th>score(成绩)</th> <th>ranking</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>002</td> <td>98</td> <td>1</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>2</td> </tr> <tr> <td>1</td> <td>004</td> <td>71</td> <td>3</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>1</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> <td>2</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>3</td> </tr> </tbody> </table> <p>接下来解释一下这段 SQL，这条 SQL 的目的是求每个班级内的成绩排名</p> <p>① rank() 排序的函数</p> <p>② over() 指定分析函数工作的数据窗口大小</p> <p>③ partition by 指定分组字段，这个案例中用 class 作为分组字段， 类似 group by</p> <p>④ order by 排序，对分组后的结果进行排序</p> <p>可能有些朋友会问：“这不就是 group by 和 order by 的用法么？不用窗口函数也能实现，为啥要用它？”</p> <p>这是因为，单纯使用 group by 分组汇总后改变了表的行数，一行只有一个类别；</p> <p>而使用窗口函数则不改变行数，可以将详细信息也展示出来。</p> <p>到这，应该大致明白窗口函数的使用场景及如何使用了吧。</p> <p>为了让大家更好地理解窗口函数，再写几条语句，看看结果是否和你想的一致。</p> <h2 id="语句二">语句二：</h2> <pre><code>select *,    sum(score) over(order by id) as win_sum,    count(score) over(order by id) as win_count,    min(score) over(order by id) as win_min from stu_scores;</code></pre> <p><strong>结果：</strong></p> <table> <thead> <tr> <th>class</th> <th>id</th> <th>score</th> <th>win_sum</th> <th>win_count</th> <th>win_min</th> </tr> </thead> <tbody> <tr> <td>2</td> <td>001</td> <td>80</td> <td>80</td> <td>1</td> <td>80</td> </tr> <tr> <td>1</td> <td>002</td> <td>98</td> <td>178</td> <td>2</td> <td>80</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>276</td> <td>3</td> <td>80</td> </tr> <tr> <td>1</td> <td>004</td> <td>71</td> <td>347</td> <td>4</td> <td>71</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>424</td> <td>5</td> <td>71</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>504</td> <td>6</td> <td>71</td> </tr> </tbody> </table> <p>这样的结果是否和你想的一样呢？</p> <p>由于不加 partition by 因此没有分组，所以从第一行开始开窗做计算。</p> <p>以 win_sum 为例，第一行成绩相加 80，与第二行相加得 178，再与第三行相加得 276，以此类推。</p> <p><strong>这样做有什么意义呢？</strong></p> <p>可以每一行的数据里直观的看到，截止到本行数据，统计数据是多少。</p> <p>同时可以看出每一行数据，对整体统计数据的影响。</p> <p>从成绩上可能不太好理解，如果是从生产经营角度，比如对比每月营业额，可以更直观地看出差距。</p> <h1 id="其它窗口函数及关键字">其它窗口函数及关键字</h1> <h2 id="rank-与-dense_rank">rank 与 dense_rank</h2> <p>rank(), dense_rank() 都属于排序函数，区别在于有重复数据的时候如何排，看案例就知道</p> <pre><code>select *, 	rank() over(order by score desc) as ranking, 	dense_rank() over(order by score desc) as dense_ranking from stu_scores;</code></pre> <p><strong>结果：</strong></p> <table> <thead> <tr> <th>class</th> <th>id</th> <th>score</th> <th>ranking</th> <th>dense_ranking</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>002</td> <td>98</td> <td>1</td> <td>1</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>1</td> <td>1</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> <td>3</td> <td>2</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>4</td> <td>3</td> </tr> <tr> <td>1</td> <td>004</td> <td>71</td> <td>5</td> <td>4</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>6</td> <td>5</td> </tr> </tbody> </table> <p>可以看到，遇到重复排名的时候，rank 是跳跃排序，如果有两个第一，那接下来是第三；</p> <p>dense_rank()则是连续排序，如果有两个第一时，那接下来是第二。</p> <h2 id="lead-与-lag">lead 与 lag</h2> <p>lead(col, n, default_val)：用于统计窗口内往下第 n 行值。<br /> 第一个参数为列名，第二个参数为往下第 n 行（可选，默认为1），第三个参数为默认值（当往下第n行为NULL时候，取默认值，如不指定，则为NULL。</p> <p>lag(col,n, default_val)：用于统计窗口内往上第n行值，参数和 lead 一样</p> <p>还是看案例吧，用文字讲确实很难讲清楚</p> <p>问题：根据班级分组，统计每个班学生的成绩以及小于（大于）等于该学生成绩的上（下）一个学生的成绩:</p> <pre><code>select *, 	lead(score,1) over(partition by class order by score) as lead, 	lag(score,1) over(partition by class order by score) as lag from stu_scores;</code></pre> <p><strong>结果：</strong></p> <table> <thead> <tr> <th>class</th> <th>id</th> <th>score</th> <th>lead</th> <th>lag</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>004</td> <td>71</td> <td>80</td> <td>null</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>98</td> <td>71</td> </tr> <tr> <td>1</td> <td>002</td> <td>98</td> <td>null</td> <td>80</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>80</td> <td>null</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> <td>98</td> <td>77</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>null</td> <td>80</td> </tr> </tbody> </table> <p>可以看到，第二行 lead 的结果是第三行的成绩，lag 的结果是第一行的成绩，没有的则为 null</p> <h2 id="last_value-与-first_value">last_value 与 first_value</h2> <p>这两个比较简单，顾名思义，分别表示取窗口内的最后一个值和第一条数据，但是先看看例子</p> <pre><code>select *, 	first_value(score) over(partition by class order by score) as first, 	last_value(score) over(partition by class order by score) as last from stu_scores;</code></pre> <p><strong>结果：</strong></p> <table> <thead> <tr> <th>class</th> <th>id</th> <th>score</th> <th>first</th> <th>last</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>004</td> <td>71</td> <td>71</td> <td>71</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>71</td> <td>80</td> </tr> <tr> <td>1</td> <td>002</td> <td>98</td> <td>71</td> <td>98</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>77</td> <td>77</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> <td>77</td> <td>80</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>77</td> <td>98</td> </tr> </tbody> </table> <p>从结果看，first_value 的结果很合理，是每个分区的第一个数据；</p> <p>但 last_value 的结果好像不符合期望，这个和我接下来要说的几个关键字有关。</p> <h2 id="unboundedprecedingfollowingcurrent-row">UNBOUNDED、PRECEDING、FOLLOWING、CURRENT ROW</h2> <p>先粗略地解释一下这些关键字：</p> <p><strong>CURRENT ROW</strong>：当前行</p> <p><strong>n PRECEDING</strong>：往前 n 行数据</p> <p><strong>n FOLLOWING</strong>：往后 n 行数据</p> <p><strong>UNBOUNDED</strong>：起点</p> <ul> <li> <p><strong>UNBOUNDED PRECEDING</strong> 表示从前面的起点，</p> </li> <li> <p><strong>UNBOUNDED FOLLOWING</strong> 表示到后面的终点</p> </li> </ul> <p>老规矩，先看例子</p> <pre><code>SELECT *,   last_value(score) ov.r(PARTITION BY class ORDER BY score) last1,   last_value(score) over(PARTITION BY class ORDER BY score RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT row) last2,   last_value(score) over(PARTITION BY class ORDER BY score RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED following) last3,   last_value(score) over(PARTITION BY class ORDER BY score RANGE BETWEEN 3 PRECEDING AND 3 FOLLOWING) last4,   last_value(score) over(PARTITION BY class ORDER BY score ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) last5 FROM stu_scores;</code></pre> <p><strong>结果：</strong></p> <table> <thead> <tr> <th>class</th> <th>id</th> <th>score</th> <th>last1</th> <th>last2</th> <th>last3</th> <th>last4</th> <th>last5</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>004</td> <td>71</td> <td>71</td> <td>71</td> <td>98</td> <td>71</td> <td>80</td> </tr> <tr> <td>1</td> <td>006</td> <td>80</td> <td>80</td> <td>80</td> <td>98</td> <td>80</td> <td>98</td> </tr> <tr> <td>1</td> <td>002</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> </tr> <tr> <td>2</td> <td>005</td> <td>77</td> <td>77</td> <td>77</td> <td>98</td> <td>80</td> <td>80</td> </tr> <tr> <td>2</td> <td>001</td> <td>80</td> <td>80</td> <td>80</td> <td>98</td> <td>80</td> <td>98</td> </tr> <tr> <td>2</td> <td>003</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> <td>98</td> </tr> </tbody> </table> <p>用的都是 last_value 结果还不一样，为什么呢？</p> <p>这是因为，last_value 默认的窗口是<strong>RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW</strong>，</p> <p>表示当前行永远是最后一个值，因此 last1 和 last2 的结果是一样的。</p> <p>如果要获取每个分组的最后一个值，</p> <p>则需改成<strong>RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING</strong>，</p> <p>表示从最前一行作为起点，最后一行为终点，就是 last3 的结果（由于两个分组排序后最后一个数都是 98，看不出区别，大家可以去验证一下）</p> <p>至于 last4 和 last5 的区别，则是 RANGE 和 ROWS 的区别：</p> <p><strong>RANGE BETWEEN 3 PRECEDING AND 3 FOLLOWING：</strong></p> <p>表示当前行的值分别减 3 和 加 3，以第 4 行为例，原来的 score 是 77，各加减 3，则是 74 到 80 的范围</p> <p>80 刚好是下一行的值，因此它的结果为 80，其它行由于加减 3 后没有对应的值，因此为自身。</p> <p><strong>ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING：</strong></p> <p>表示当前行分别往前往后减一行，记住，rows 和 range 的区别就在于是当前行数还是当前行的值。</p> <p>因此在同一个分组内，第一行 last5 的值为下一行的值，第二行为下一行的值，以此类推，第二个分组也一样。</p> <h2 id="总结">总结</h2> <p>到这，窗口函数的内容就基本上都讲完了。这些可以说是数据分析和数据开发必备的技能，因此必须要熟练。</p> <p>至于如何才能熟练，还需要多实践。</p> <p>码字不易，如果觉得不错，麻烦动动小手点个赞，谢谢！</p> <p>持续关注不迷路，转载请注明出处！—— 大数据的奇妙冒险</p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-160.htm">详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java</a></p>
                                        <p>下一个：<a href="/html/category/article-162.htm">面向对象编程-正则表达式</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">VS code vue安装Vetur后还是没有高亮显示之离线安装插件</a></h4>
                <p>前言 因为公司项目是在云桌面开发，没有网络，需要在有网络的电脑安装vscode及插件然后压缩复制到云桌面，但是 安装了Vetur 压缩过去后vue文件代码还是没有高亮，试过很多种方法，但是都无效。然后</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></h4>
                <p>前几天有个老项目找到我，有多老呢？比我工作年限都长，见到这个项目我还得叫一声前辈。 这个项目目前使用非常稳定，十多年了没怎么更新过，现在客户想加一个小功能：在线预览Word文档。 首先想到的是用第三方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">python神经网络使用Keras构建RNN训练_python</a></h4>
                <p>目录  Keras中构建RNN的重要函数  1、SimpleRNN 2、model.train_on_batch  全部代码     Keras中构建RNN的重要函数  1、SimpleRNN Sim</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-221.htm">线程安全问题的解决方案有哪些？</a></h4>
                <p>线程安全是指某个方法或某段代码，在多线程中能够正确的执行，不会出现数据不一致或数据污染的情况，我们把这样的程序称之为线程安全的，反之则为非线程安全的。在 Java 中，解决线程安全问题有以下 3 种手</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">vue 使用echarts绘制折线图</a></h4>
                <p>&lt;template&gt;     &lt;div&gt;         &lt;!-- 方法一，注册echarts到vue的原型对象中，指定某个div作为echarts的画布 --&gt; </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">Spring Security 一键接入验证码登录和小程序登录</a></h4>
                <p>最近实现了一个多端登录的Spring Security组件，用起来非常丝滑，开箱即用，可插拔，而且灵活性非常强。我觉得能满足大部分场景的需要。目前完成了手机号验证码和微信小程序两种自定义登录，加上默认</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">MySQL——union(合并结果集)、limit(获取部分数据)、关于MySQL中常用数据类型</a></h4>
                <p>博客目录 1、union(合并结果集) 2、limit(获取一张表中某部分数据) 3、表——创建表、删除表 4、关于MySQL中的数据类型  一、union(合并结果集)  将两个查询结果合并(可以是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">Vue &#8211; 缓存页面（keepAlive）</a></h4>
                <p>前言  项目主流程缓存优化，主流程页面（组件）切换时保持之前加载的状态，避免反复渲染影响页面性能，同时也可以很大程度上减少接口请求，减小服务器压力。  例如，我们将某个列表类组件内容滑动到第 100 </p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>