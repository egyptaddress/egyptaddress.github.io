<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-28.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>使用 docker-compose 部署 golang 的 Athens 私有代理 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">使用 docker-compose 部署 golang 的 Athens 私有代理</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<ul> <li><a href="#go%E4%B8%AD%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86%E6%90%AD%E5%BB%BA" rel="nofollow">go中私有代理搭建</a> <ul> <li><a href="#%E5%89%8D%E8%A8%80" rel="nofollow">前言</a></li> <li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9-athens" rel="nofollow">为什么选择 athens</a></li> <li><a href="#%E4%BD%BF%E7%94%A8-docker-compose-%E9%83%A8%E7%BD%B2" rel="nofollow">使用 docker-compose 部署</a> <ul> <li><a href="#%E9%85%8D%E7%BD%AE%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E7%9A%84%E8%AE%A4%E8%AF%81%E4%BF%A1%E6%81%AF" rel="nofollow">配置私有仓库的认证信息</a></li> <li><a href="#%E9%85%8D%E7%BD%AE%E4%B8%8B%E8%BD%BD%E6%A8%A1%E5%BC%8F" rel="nofollow">配置下载模式</a></li> <li><a href="#%E9%83%A8%E7%BD%B2" rel="nofollow">部署</a></li> <li><a href="#%E4%BD%BF%E7%94%A8%E7%A7%98%E9%92%A5%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%A4%E8%AF%81%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93" rel="nofollow">使用秘钥的方式认证私有仓库</a> <ul> <li><a href="#1%E9%85%8D%E7%BD%AE%E7%A7%98%E9%92%A5" rel="nofollow">1、配置秘钥</a></li> <li><a href="#2%E9%85%8D%E7%BD%AE-http-%E4%B8%8E-ssh-%E9%87%8D%E5%86%99%E8%A7%84%E5%88%99" rel="nofollow">2、配置 HTTP 与 SSH 重写规则</a></li> <li><a href="#3%E9%85%8D%E7%BD%AE-ssh-%E6%9D%A5%E7%BB%95%E8%BF%87%E4%B8%BB%E6%9C%BA-ssh-%E9%94%AE%E9%AA%8C%E8%AF%81" rel="nofollow">3、配置 SSH 来绕过主机 SSH 键验证</a></li> </ul> </li> </ul> </li> <li><a href="#%E5%8F%82%E8%80%83" rel="nofollow">参考</a></li> </ul> </li> </ul> <h2 id="go中私有代理搭建">go中私有代理搭建</h2> <h3 id="前言">前言</h3> <p>最近公司的代理出现问题了，刚好借这个机会来学习下，athens 如何构建私有代理</p> <h3 id="为什么选择-athens">为什么选择 athens</h3> <p>私有化代理的选取标准无非就是下面的几点</p> <p>1、托管私有模块；</p> <p>2、排除对公有模块的访问；</p> <p>3、存储公有模块；</p> <p><strong>athens 的特点：</strong></p> <p>Athens 首先可以配置访问私有仓库；</p> <p>Athens 的会存储每次拉取的包，如果该模块之前没有通过 athens，athens 会向目标地址请求数据，在返回给客户端的时候，会存储该模块到存储中，这样实现了<code>go mod download</code>永远只会发生一次；</p> <p>Athens 处理存储的策略为仅追加，一个模块被保存，它就永远不会改变，即使开发人员对 tag 进行了强推，那么也不会被删除；</p> <p>Athens 也可以配置下载策略，过滤一些有安全隐患的包。</p> <p>Athens 支持 disk, mongo, gcs, s3, minio, 外部存储/自定义，不过一般建议使用 disk。</p> <h3 id="使用-docker-compose-部署">使用 docker-compose 部署</h3> <p>官方网站已经，提供了通过 docker 和 二进制部署的方案，这里秉着好记性不如烂笔头的原则，这里自己也做了记录</p> <h4 id="配置私有仓库的认证信息">配置私有仓库的认证信息</h4> <p>通过<code>.netrc</code> 文件来配置，里面可以放自己的私有仓库的地址，以及用户，密码认证信息</p> <pre><code># cat .netrc machine gitlab.test.com login test-name password test-pass</code></pre> <p>有几个私有仓库，配置几个就可以了</p> <h4 id="配置下载模式">配置下载模式</h4> <p>通过<code>The download mode</code> (下载模式配置策略)是现在 ATHENS 中比较推崇的，之前通过<code>Filtering modules</code>（过滤模式）的方法，目前已经被弃用了。</p> <p>来看下如何配置</p> <pre><code># DownloadMode defines how Athens behaves when a module@version # is not found in storage. There are 4 options: # 1. "sync" (default): download the module synchronously and # return the results to the client. # 2. "async": return 404, but asynchronously store the module # in the storage backend. # 3. "redirect": return a 301 redirect status to the client # with the base URL as the DownloadRedirectURL from below. # 4. "async_redirect": same as option number 3 but it will # asynchronously store the module to the backend. # 5. "none": return 404 if a module is not found and do nothing. # 6. "file:&lt;path&gt;": will point to an HCL file that specifies # any of the 5 options above based on different import paths. # 7. "custom:&lt;base64-encoded-hcl&gt;" is the same as option 6 # but the file is fully encoded in the option. This is # useful for using an environment variable in serverless # deployments. # Env override: ATHENS_DOWNLOAD_MODE DownloadMode = "sync"</code></pre> <p>通过环境变量 ATHENS_DOWNLOAD_MODE 可指定，也可以修改指定的<code>config.dev.toml</code>来配置，默认是 sync</p> <p>ATHENS_DOWNLOAD_MODE 可指定的内容：</p> <p>1、通过<code>file:&lt;path&gt;</code>指定一个 hcl 文件,里面可以对不同的仓库，设置下载模式；</p> <p>2、通过<code>custom:&lt;base64-encoded-hcl&gt;</code> 指定一个 base64 编码的 HCL 文件；</p> <p>3、指定具体的全局策略，<code>sync, async, none, redirect, or async_redirect</code>，这是一个全局的设置，上面的两种是可以定制策略组的。</p> <p>来看下具体的下载模式</p> <ul> <li> <p>sync: 通过 同步从 VCS 下载模块<code>go mod download</code>，将其持久化到存储中，并立即将其返回给用户。请注意，这是默认行为；</p> </li> <li> <p>async：向客户端返回 404，并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> <li> <p>none：返回 404 并且什么也不做；</p> </li> <li> <p>redirect：重定向到上游代理（例如proxy.golang.org），之后什么也不做；</p> </li> <li> <p>async_redirect：重定向到上游代理（例如<code>proxy.golang.org</code>）并异步下载<code>module@version</code> 并将其持久化到存储中；</p> </li> </ul> <p>下面看下配置策略的 hcl 文件</p> <pre><code># cat download.hcl    downloadURL = "https://goproxy.cn"  mode = "async_redirect"  download "gitlab.test.com/*" {     mode = "sync" }</code></pre> <h4 id="部署">部署</h4> <p>这里使用 docker-composer 部署</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./.netrc:/root/.netrc       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl     environment:       - ATHENS_NETRC_PATH=/root/.netrc       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>ATHENS_GONOSUM_PATTERNS：配置为私库地址，配置的仓库地址，不会进行安全向校验。</p> <p>go 处于安全性考虑，为了保证开发者的依赖库不被人恶意劫持篡改，所以引入了 GOSUMDB 环境变量来设置校验服务器</p> <p>当你在本地对依赖进行变动（更新/添加）操作时，Go 会自动去这个服务器进行数据校验，保证你下的这个代码库和世界上其他人下的代码库是一样的。如果有问题，会有个大大的安全提示。当然背后的这些操作都已经集成在 Go 里面了，开发者不需要进行额外的操作。</p> <p>对于我们的私有仓库，去公共安全校验库校验，肯定是不能通过校验的，我们可以通过 ATHENS_GONOSUM_PATTERNS 这个环境变量来设置不做校验的代码仓库， 它可以设置多个匹配路径，用逗号相隔。</p> <p>启动<code>docker-compose up -d</code></p> <p>客户端设置代理<code>export GOPROXY=http://xxxx:3000</code></p> <p>这样就能使用我们的代理服务了</p> <p>因为选择的 ATHENS_STORAGE_TYPE 为 disk，athens 服务会在拉取资源包的同时，也会下载资源包到配置的 ATHENS_DISK_STORAGE_ROOT 中。</p> <h4 id="使用秘钥的方式认证私有仓库">使用秘钥的方式认证私有仓库</h4> <p>上面通过<code>.netrc</code> 的方式来认证私有仓库，因为账号密码是铭文的总归不太好，可以使用秘钥的方式来认证</p> <h5 id="1配置秘钥">1、配置秘钥</h5> <p>首先查看电脑有没有秘钥</p> <pre><code># cd .ssh # ls id_rsa		id_rsa.pub</code></pre> <p>没有的话通过下面的命令的生成</p> <pre><code># ssh-keygen -t rsa -C "youremail@example.com"</code></pre> <p>邮箱换成自己的，一路回车即可</p> <p>然后将<code>id_rsa.pub</code> 公钥的内容添加到自己的私有仓库中，如何添加自己 google 吧，比较简单</p> <h5 id="2配置-http-与-ssh-重写规则">2、配置 HTTP 与 SSH 重写规则</h5> <pre><code># cat gitconfig  <div class="down down-link"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://"  rel="external nofollow" target="_blank"><i class="be be-download"></i></a><div class="clear"></div></div><div class="down-line"></div>         insteadOf = https://gitlab.test.com</code></pre> <h5 id="3配置-ssh-来绕过主机-ssh-键验证">3、配置 SSH 来绕过主机 SSH 键验证</h5> <pre><code># cat config  Host gitlab.test.com Hostname gitlab.test.com StrictHostKeyChecking no IdentityFile /root/.ssh/id_rsa</code></pre> <p>将上面配置的认证信息，映射到容器中即可</p> <pre><code class="language-yaml">version: '2' services:   athens:     image: gomods/athens:v0.11.0     restart: always     container_name: athens_proxy     ports:       - "3000:3000"     volumes:       - ./athens-storage:/var/lib/athens       - ./download.hcl:/root/download.hcl       - ./gitconfig:/root/.gitconfig       - ./ssh-keys:/root/.ssh     environment:       - ATHENS_STORAGE_TYPE=disk       - ATHENS_DISK_STORAGE_ROOT=/var/lib/athens       - ATHENS_GOGET_WORKERS=100       - ATHENS_DOWNLOAD_MODE=file:/root/download.hcl       - ATHENS_GONOSUM_PATTERNS=gitlab.test.com</code></pre> <p>这样即可实现秘钥的认证了</p> <p>需要注意私钥的权限，刚开始没注意，执行报了下面的错误</p> <pre><code>        @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         @         WARNING: UNPROTECTED PRIVATE KEY FILE!          @         @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         Permissions 0644 for '/root/.ssh/id_rsa' are too open.         It is required that your private key files are NOT accessible by others.         This private key will be ignored.         Load key "/root/.ssh/id_rsa": bad permissions         git@gitlab.test.com: Permission denied (publickey).         fatal: Could not read from remote repository.</code></pre> <p>看报错就可推断出，是权限太大了，需要私钥文件不能被其他人所访问。</p> <p>修改权限就可以了</p> <pre><code>ssh-keys # chmod 600 id_rsa</code></pre> <p>具体的 demo 地址，可参见<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/tree/master/golang/go_environment/athens"  target="_blank" rel="nofollow">athens私有代理部署</a></p> <h3 id="参考">参考</h3> <p>【介绍 ATHENS】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gomods.io/zh/intro/"  target="_blank" rel="nofollow">https://gomods.io/zh/intro/</a><br /> 【download】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md"  target="_blank" rel="nofollow">https://github.com/gomods/athens/blob/main/docs/content/configuration/download.md</a><br /> 【athens构建golang私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a><br /> 【使用 docker-compose 部署 golang 的 Athens 私有代理】<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens%E6%9E%84%E5%BB%BAgolang%E7%A7%81%E6%9C%89%E4%BB%A3%E7%90%86.md"  target="_blank" rel="nofollow">https://github.com/boilingfrog/Go-POINT/blob/master/golang/go_environment/athens构建golang私有代理.md</a></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-27.htm">mysql中的时间字段用什么数据类型</a></p>
                                        <p>下一个：<a href="/html/category/article-29.htm">vue实现右键菜单栏_vue.js_</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Springboot 设置过滤器以及重复读取request里的body</a></h4>
                <p>需求：request的content-type为applciation/json，进入controller之前需要把body中的参数取出来做一次处理，然后和hearder中的另一个参数做对比。 思路：</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">docker存储路径修改</a></h4>
                <p>docker修改对应的存储路径 修改daemon.json的内容不进行复述。 假设你已经编辑好/etc/docker/daemon.json文件的graph配置，要将其从d01修改到d02 {   "</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑</a></h4>
                <p>前提： 由于业务需要在entity Product已经实现了@version的乐观锁的基础上再加上了悲观锁的控制 @Lock(value = LockModeType.PESSIMISTIC_WRIT</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-257.htm">springboot+layui有关分页问题</a></h4>
                <p>问题描述 分页不生效明明可以分页 但是后端接收到的pagenum始终是1  &nbsp;   &nbsp;  &nbsp; 提示：这里描述项目中遇到的问题： 例如：分页出问题 @Override pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Springboot使用@Cacheable注解实现数据缓存</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;本文介绍如何在Springboot中通过@Cacheable注解实现数据缓存。在每次调用添加了@Cach</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">指针的高级运用——指针进阶</a></h4>
                <p>文章目录  学习目标 1.1 动态内存分配   引子 1.1动态分配内存函数 1.2malloc函数 1.3 calloc 函数 1.4 realloc函数 1.5 free函数 1.6 动态内存编程</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">python神经网络使用Keras构建RNN训练_python</a></h4>
                <p>目录  Keras中构建RNN的重要函数  1、SimpleRNN 2、model.train_on_batch  全部代码     Keras中构建RNN的重要函数  1、SimpleRNN Sim</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Azure Virtual Desktop创建配置管理详解</a></h4>
                <p>一，引言 Azure 虚拟创面是一项 Azure 服务，可以让我们管理： 　　1）VDI（虚拟桌面基础架构） 　　2）云端的 RDSH：RDSH 是 RDS（远程桌面服务）中的一个角色。这些类型的服务</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">最大生成树Bad Cowtractors_在线工具</a></h4>
                <p>题目链接：http://poj.org/problem?id=2377；     仔细阅读题目，你会发现一个词-" as large as possible"，这个词的意思是尽可能最大；  来，我们翻</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>