<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-82.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C语言实现BMP格式转RGB格式、YUV格式 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">C语言实现BMP格式转RGB格式、YUV格式</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> <a id="1_0" rel="nofollow"></a>1、前言</h1> <blockquote> <p>此代码的功能是传入BMP格式的数据，传出提取的RGB数据。BMP图像支持8bit、16bit、24bit、32bit的格式，得到的都是24bit的RGB格式图像，如果想得到YUV格式的图像，可以将得到RGB再转为YUV格式。RGB转YUV格式参考博客<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/weixin_42031299/article/details/115267037"  rel="nofollow">《C语言实现RGB packet格式转YUV(NV21)格式》</a>。</p> </blockquote> <h1> <a id="2_2" rel="nofollow"></a>2、示例代码</h1> <pre><code class="prism language-c"><span class="token comment">//BMP图片的压缩方式</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BI_RGB</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BI_BITFIELDS</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//RGB555的掩码</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB555_RED_MASK</span>        <span class="token expression"><span class="token punctuation">(</span><span class="token number">31744</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB555_GREEN_MASK</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">992</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB555_BLUE_MASK</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//RGB565的掩码</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB565_RED_MASK</span>        <span class="token expression"><span class="token punctuation">(</span><span class="token number">63488</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB565_GREEN_MASK</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">RGB565_BLUE_MASK</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//BMP图片的像素位数</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_8_BIT</span>          <span class="token expression"><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_16_BIT</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_24_BIT</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_32_BIT</span>         <span class="token expression"><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//16位BMP图片从文件头到图像数据的偏移量</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_16_BIT_BI_BITFIELDS_OFFSET</span>    <span class="token expression"><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_16_BIT_BI_RGB_OFFSET</span>     <span class="token expression"><span class="token punctuation">(</span><span class="token number">54</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//8位BMP图片调色板的大小</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_8_BIT_OFFSET</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></span></span>  <span class="token comment">//BMP图片的文件头，固定14字节</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BMP_FILE_HEADER_LENGTH</span>       <span class="token expression"><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span></span></span>  <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">isNull</span><span class="token expression"><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span>        	<span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> <span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">isNotNull</span><span class="token expression"><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span>        <span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">!=</span> <span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>  <span class="token comment">// BMP 文件头</span> <span class="token keyword">typedef</span> <span class="token keyword">struct</span>   <span class="token punctuation">{<!-- --></span>     <span class="token comment">//unsigned short    	bfType;  			// 2</span>     <span class="token keyword">unsigned</span> <span class="token keyword">long</span>    	bfSize<span class="token punctuation">;</span> 			<span class="token comment">// 4 </span>     <span class="token keyword">unsigned</span> <span class="token keyword">short</span>    	bfReserved1<span class="token punctuation">;</span>       <span class="token keyword">unsigned</span> <span class="token keyword">short</span>    	bfReserved2<span class="token punctuation">;</span>       <span class="token keyword">unsigned</span> <span class="token keyword">long</span>    	bfOffBits<span class="token punctuation">;</span>   <span class="token punctuation">}</span> ClBitMapFileHeader<span class="token punctuation">;</span>  <span class="token comment">//BMP图片的信息头</span> <span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">InfoHeader</span> <span class="token punctuation">{<!-- --></span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> 		bisize<span class="token punctuation">;</span>				<span class="token comment">//信息头的大小，一般是40</span>  <span class="token keyword">int</span> 				biWidth<span class="token punctuation">;</span>			<span class="token comment">//位图的宽</span>  <span class="token keyword">int</span> 				biHeight<span class="token punctuation">;</span>			<span class="token comment">//位图的高</span>  <span class="token keyword">unsigned</span> <span class="token keyword">short</span> 	biPlanes<span class="token punctuation">;</span>			<span class="token comment">//固定值1</span>  <span class="token keyword">unsigned</span> <span class="token keyword">short</span> 	biBitCount<span class="token punctuation">;</span>			<span class="token comment">//每个像素的位数</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> 		biCompression<span class="token punctuation">;</span>		<span class="token comment">//压缩方式,BI_RGB(0)为不压缩, BI_BITFIELDS(3)用于16位、32位位图  </span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> 		biSizeImage<span class="token punctuation">;</span>		<span class="token comment">//位图全部像素占用的字节</span>  <span class="token keyword">int</span> 				biXpelsPerMeter<span class="token punctuation">;</span>	<span class="token comment">//水平分辨率</span>  <span class="token keyword">int</span> 				biYPelsPerMeter<span class="token punctuation">;</span>	<span class="token comment">//垂直分辨率</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> 		biClrUsed<span class="token punctuation">;</span>			<span class="token comment">//位图使用的颜色数。0代表颜色数为2的biBitCount次方</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> 		biClrImportant<span class="token punctuation">;</span>		<span class="token comment">//重要的颜色数，0代表所有颜色都重要</span>   <span class="token punctuation">}</span>BmpInfoHeader<span class="token punctuation">;</span>  <span class="token comment">/* *函数功能：将bmp图片传入，输出BGR图像，图像方向是正的 *传参：	pSrcData(in)	——输入bmp图像数据 *		pDstData(out)	——输出BGR图像 *		pWidth(out)		——bmp图像的宽 *		pHeight	(out)	——bmp图像的高 * *返回值：成功返回0，失败返回-1 */</span> <span class="token keyword">int</span> <span class="token function">BMPExtractBGR</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> pSrcData<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> pDstData<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>pWidth<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>pHeight<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	 BmpInfoHeader BmpInfoHeader<span class="token punctuation">;</span> 	 <span class="token keyword">unsigned</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> height<span class="token punctuation">;</span> 	 <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span> 	 <span class="token keyword">int</span> offSet<span class="token punctuation">;</span> 	 <span class="token keyword">int</span> RGB24 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	 <span class="token keyword">unsigned</span> <span class="token keyword">short</span> RGB16 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   	 <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	 ClBitMapFileHeader fHeader<span class="token punctuation">;</span> 	  	 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNull</span><span class="token punctuation">(</span>pSrcData<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isNull</span><span class="token punctuation">(</span>pDstData<span class="token punctuation">)</span><span class="token punctuation">)</span> 	 <span class="token punctuation">{<!-- --></span> 	  	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input parameter invalid\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	  	<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> 	 <span class="token punctuation">}</span>  	<span class="token comment">//根据前两个字节，判断是不是BMP图片</span> 	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pSrcData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'B'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>pSrcData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'M'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token function">printf</span><span class="token punctuation">(</span> <span class="token string">"not a bmp picture.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span>  	<span class="token comment">//获取文件头，要跳过前两个字节</span> 	<span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fHeader<span class="token punctuation">,</span> pSrcData <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>ClBitMapFileHeader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	 	 	<span class="token comment">//获取信息头</span> 	<span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>BmpInfoHeader<span class="token punctuation">,</span> pSrcData <span class="token operator">+</span> BMP_FILE_HEADER_LENGTH<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   	width  <span class="token operator">=</span> BmpInfoHeader<span class="token punctuation">.</span>biWidth<span class="token punctuation">;</span> 	height <span class="token operator">=</span> BmpInfoHeader<span class="token punctuation">.</span>biHeight<span class="token punctuation">;</span>  	<span class="token comment">//将宽高信息传递出去</span> 	<span class="token operator">*</span>pWidth <span class="token operator">=</span> width<span class="token punctuation">;</span> 	<span class="token operator">*</span>pHeight <span class="token operator">=</span> height<span class="token punctuation">;</span>  	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"biBitCount = %d, bisize = %d, wxh=%dx%d, bfOffBits=%d, bfSize=%d\n"</span><span class="token punctuation">,</span> \ 				BmpInfoHeader<span class="token punctuation">.</span>biBitCount<span class="token punctuation">,</span> BmpInfoHeader<span class="token punctuation">.</span>bisize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> fHeader<span class="token punctuation">.</span>bfOffBits<span class="token punctuation">,</span> fHeader<span class="token punctuation">.</span>bfSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  	<span class="token comment">//判断BMP图片像素的位数</span> 	<span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biBitCount <span class="token operator">==</span> BMP_24_BIT<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span>  		offSet <span class="token operator">=</span> fHeader<span class="token punctuation">.</span>bfOffBits<span class="token punctuation">;</span><span class="token comment">//文件头到BGR数据的偏移量</span> 		 	j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 	<span class="token comment">//读取文件的BRG数据</span> 	<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 			<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> j <span class="token operator">*</span> width <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> pSrcData <span class="token operator">+</span> offSet <span class="token operator">+</span> i <span class="token operator">*</span> width <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> width <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			j<span class="token operator">++</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biBitCount <span class="token operator">==</span> BMP_8_BIT<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span>  		offSet <span class="token operator">=</span> BMP_FILE_HEADER_LENGTH <span class="token operator">+</span> BmpInfoHeader<span class="token punctuation">.</span>bisize <span class="token operator">+</span> BMP_8_BIT_OFFSET<span class="token punctuation">;</span> 		<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 		   	<span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> width<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 		   	<span class="token punctuation">{<!-- --></span>  		    	<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> count <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> pSrcData <span class="token operator">+</span> BMP_FILE_HEADER_LENGTH <span class="token operator">+</span> BmpInfoHeader<span class="token punctuation">.</span>bisize <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>pSrcData<span class="token punctuation">[</span>offSet <span class="token operator">+</span> i <span class="token operator">*</span> width <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		    	count<span class="token operator">++</span><span class="token punctuation">;</span> 		    <span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biBitCount <span class="token operator">==</span> BMP_16_BIT<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span>  	  	<span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biCompression <span class="token operator">==</span> BI_BITFIELDS<span class="token punctuation">)</span> 	  	<span class="token punctuation">{<!-- --></span>  		   	<span class="token comment">//根据掩码判断是RGB555</span> 		   	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB555_RED_MASK<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB555_GREEN_MASK<span class="token punctuation">)</span> \ 		    	<span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB555_BLUE_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span> 		   	<span class="token punctuation">{<!-- --></span> 		    	<span class="token comment">//提取BGR数据</span> 		    	<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> 		    	<span class="token punctuation">{<!-- --></span> 			     	<span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> width<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 			     	<span class="token punctuation">{<!-- --></span> 				      	RGB24 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 				      	RGB16 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> BMP_16_BIT_BI_BITFIELDS_OFFSET <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> width <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				      	RGB24 <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_RED_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_GREEN_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_BLUE_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				      	<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> count <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>RGB24<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				      	count<span class="token operator">++</span><span class="token punctuation">;</span> 			     	<span class="token punctuation">}</span> 		    	<span class="token punctuation">}</span>    			<span class="token punctuation">}</span> 	   		<span class="token comment">//根据掩码判断是RGB565</span> 			<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB565_RED_MASK<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB565_GREEN_MASK<span class="token punctuation">)</span> \ 			<span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> RGB565_BLUE_MASK<span class="token punctuation">)</span><span class="token punctuation">)</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> 				<span class="token punctuation">{<!-- --></span> 					 <span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> width<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 					 <span class="token punctuation">{<!-- --></span> 					  	RGB24 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 					  	RGB16 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> BMP_16_BIT_BI_BITFIELDS_OFFSET <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> width <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					  	RGB24 <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB565_RED_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB565_GREEN_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB565_BLUE_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					  	<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> count <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>RGB24<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					  	count<span class="token operator">++</span><span class="token punctuation">;</span> 					 <span class="token punctuation">}</span> 				<span class="token punctuation">}</span> 			<span class="token punctuation">}</span>   		<span class="token punctuation">}</span> 		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biCompression <span class="token operator">==</span> BI_RGB<span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token comment">//提取BGR数据</span> 			<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> width<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 				<span class="token punctuation">{<!-- --></span> 					RGB24 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 					RGB16 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">short</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>pSrcData <span class="token operator">+</span> BMP_16_BIT_BI_RGB_OFFSET <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> width <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					RGB24 <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_RED_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_GREEN_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RGB16 <span class="token operator">&amp;</span> RGB555_BLUE_MASK<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> count <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>RGB24<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 					count<span class="token operator">++</span><span class="token punctuation">;</span> 				<span class="token punctuation">}</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>BmpInfoHeader<span class="token punctuation">.</span>biBitCount <span class="token operator">==</span> BMP_32_BIT<span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		offSet <span class="token operator">=</span> BMP_FILE_HEADER_LENGTH <span class="token operator">+</span> BmpInfoHeader<span class="token punctuation">.</span>bisize<span class="token punctuation">;</span><span class="token comment">//文件头到BGR数据的偏移量</span> 		count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> 		<span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> 		<span class="token punctuation">{<!-- --></span> 			<span class="token keyword">for</span><span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> width<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> 			<span class="token punctuation">{<!-- --></span> 				<span class="token function">memcpy</span><span class="token punctuation">(</span>pDstData <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span>count<span class="token punctuation">,</span> pSrcData <span class="token operator">+</span> offSet <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span><span class="token punctuation">(</span>i <span class="token operator">*</span> width <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				count<span class="token operator">++</span><span class="token punctuation">;</span> 			<span class="token punctuation">}</span>   		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token keyword">else</span> 	<span class="token punctuation">{<!-- --></span> 		<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"not support bmp format\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span> 	  	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> <h1> <a id="3_215" rel="nofollow"></a>3、代码说明</h1> <blockquote> <p>(1)BMPExtractBGR()函数功能是从BMP图像中提取出BGR数据，并将图像旋转180度，具体参数含义见注释；<br /> (2)BMPExtractBGR()函数支持8bit、16bit、24bit、32bit的BMP图像格式；<br /> (3)<code>想要能直接编译成可执行程序的源码，可在我的资源里下载，该源码可直接将bmp格式转换成bgr格式</code>；<br /> (3)需要完善的地方：上面的BMPExtractBGR()函数代码太多，可以将8bit、16bit、24bit、32bit的BMP格式分别拆分成单个函数，我不想花时间再调试，如果是要移植到公司的项目中，切记要拆分，不然函数代码这么长会被批斗的。</p> </blockquote> <h1> <a id="4_221" rel="nofollow"></a>4、代码的易错点</h1> <blockquote> <p>(1)在BMP的文件头中前两个字节是’BM’，是BMP图片的特征值，本来在文件头ClBitMapFileHeader结构体中应该用short变量去表示这两个字节，但实际在文件头结构体中将bfType变量注释掉，因为2个字节是没有对齐的，如果不注释掉则会因为结构体的变量对齐导致数据错位；<br /> (2)文件头ClBitMapFileHeader结构体中使用了long型变量，long在32位机器中是4字节，在64位机器中是8字节，上面的代码只能在32位的机器上运行，在64位机器上运行会出错；</p> </blockquote></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-81.htm">react实战系列 —— 我的仪表盘（bizcharts、antd、moment）_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-83.htm">Spring Ioc源码分析系列&#8211;Ioc的基础知识准备_在线工具</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Redis的数据淘汰策略和数据过期后的删除策略</a></h4>
                <p>Redis的数据淘汰策略  volatile-lru（least recently used）：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰 vol</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-203.htm">Python tkinter库图形绘制例子分享_python_</a></h4>
                <p>目录  一、椭圆绘制 二、矩形绘制 三、多边形绘制    一、椭圆绘制 实例代码：  import tkinter as tk                    # 导入tkinter库，并重命名</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-233.htm">使用Python实现KNN算法解决简单分类问题</a></h4>
                <p>使用Python实现KNN算法解决简单分类问题 KNN分类 KNN算法属于监督学习算法，它可以解决分类问题，也可以解决回归问题。对于一组带标签的数据，当我们使用KNN算法进行分类时，有两种分类方式。K</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-209.htm">Java基础知识 29（同步代码块，同步方法，静态同步方法，Lock锁，死锁问题）</a></h4>
                <p>Java基础知识 29  先回顾一下上节课讲的多个窗口共同卖票的问题，首先我们设置三个不同的线程来同步进行卖票，我们把所有的票数全部设置成静态变量，让这三个线程可以共享这些票。通过设置这个静态变量我们</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Android 4.0.1破坏了WebView HTML 5本地存储？</a></h4>
                <p>要解决此问题，请执行以下步骤- 对于版本低于4.4的android，将数据加载到具有这样的目录的文件方案的web视图中将不起作用。 browser.loadDataWithBaseUrl("file:</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Android jetpack room+ViewModel+liveData 数据自动更新</a></h4>
                <p>Android jetpack room的使用_安果移不动的博客-CSDN博客 接上篇博客 我们用google推荐的这种方式  &nbsp; 修改： StudentDao package com.an</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">C ++中的虚拟基类</a></h4>
                <p>在本教程中，我们将讨论一个程序，以了解C ++中的虚拟基类。 虚拟类主要在多重继承期间使用。为了避免将同一类的多个实例带到同一类中，这随后会引起歧义，因此使用虚拟类。 示例 #include&nbsp</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">解决antdv的table因数据量过大导致的卡顿问题</a></h4>
                <p>遇到的问题：antdv的table表格使用时因数据量过大，造成标签页切换卡顿的问题 解决办法：绑定滚动事件，页面只显示在可视区域内的数据，没在可视区域内的数据不予展示，dom元素的scrollHeig</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-249.htm">vue 使用echarts绘制折线图</a></h4>
                <p>&lt;template&gt;     &lt;div&gt;         &lt;!-- 方法一，注册echarts到vue的原型对象中，指定某个div作为echarts的画布 --&gt; </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Java String.equals()与==。</a></h4>
                <p>equals()方法将此字符串与指定的对象进行比较。当且仅当参数不为null并且是一个String对象，表示与此对象相同的字符序列时，结果为true。 示例 public&nbsp;class&nbs</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>