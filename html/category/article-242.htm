<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-242.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>PyQt5 按钮Button 添加事件(信号/槽) - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">PyQt5 按钮Button 添加事件(信号/槽)</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>本文基于<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhouzhiwengang/article/details/119732734"  title="PyQt5 按钮Buttons样式设计" rel="nofollow">PyQt5 按钮Buttons样式设计</a>，针对按钮添加响应的点击事件触发。</p> <h1>效果截图:</h1> <p><img fetchpriority="high" decoding="async" alt="" height="250" src="http://img.555519.xyz/uploads/20230109/a9bfb10d301adb08cb09511f214c4b35.jpg"></p> <h1>PyQt 模型设计：</h1> <p><img decoding="async" alt="" height="409" src="http://img.555519.xyz/uploads/20230109/9bdd0cc129b101d17145762c0e548bb9.jpg"></p> <h1>&nbsp;PyQt 设计器截图：</h1> <p><img decoding="async" alt="" height="396" src="http://img.555519.xyz/uploads/20230109/f66c5b2fa095f590bee0b137777315aa.jpg"></p> <h2>*.UI 源码</h2> <pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;ui version="4.0"&gt;  &lt;class&gt;MainWindow&lt;/class&gt;  &lt;widget class="QMainWindow" name="MainWindow"&gt;   &lt;property name="geometry"&gt;    &lt;rect&gt;     &lt;x&gt;0&lt;/x&gt;     &lt;y&gt;0&lt;/y&gt;     &lt;width&gt;800&lt;/width&gt;     &lt;height&gt;600&lt;/height&gt;    &lt;/rect&gt;   &lt;/property&gt;   &lt;property name="windowTitle"&gt;    &lt;string&gt;MainWindow&lt;/string&gt;   &lt;/property&gt;   &lt;widget class="QWidget" name="centralwidget"&gt;    &lt;widget class="QWidget" name="horizontalLayoutWidget"&gt;     &lt;property name="geometry"&gt;      &lt;rect&gt;       &lt;x&gt;20&lt;/x&gt;       &lt;y&gt;30&lt;/y&gt;       &lt;width&gt;478&lt;/width&gt;       &lt;height&gt;80&lt;/height&gt;      &lt;/rect&gt;     &lt;/property&gt;     &lt;layout class="QHBoxLayout" name="horizontalLayout"&gt;      &lt;item&gt;       &lt;widget class="QPushButton" name="pushButton_5"&gt;        &lt;property name="minimumSize"&gt;         &lt;size&gt;          &lt;width&gt;0&lt;/width&gt;          &lt;height&gt;48&lt;/height&gt;         &lt;/size&gt;        &lt;/property&gt;        &lt;property name="text"&gt;         &lt;string&gt;PushButton&lt;/string&gt;        &lt;/property&gt;       &lt;/widget&gt;      &lt;/item&gt;      &lt;item&gt;       &lt;widget class="QPushButton" name="pushButton_4"&gt;        &lt;property name="minimumSize"&gt;         &lt;size&gt;          &lt;width&gt;0&lt;/width&gt;          &lt;height&gt;48&lt;/height&gt;         &lt;/size&gt;        &lt;/property&gt;        &lt;property name="text"&gt;         &lt;string&gt;PushButton&lt;/string&gt;        &lt;/property&gt;       &lt;/widget&gt;      &lt;/item&gt;      &lt;item&gt;       &lt;widget class="QPushButton" name="pushButton_3"&gt;        &lt;property name="minimumSize"&gt;         &lt;size&gt;          &lt;width&gt;0&lt;/width&gt;          &lt;height&gt;48&lt;/height&gt;         &lt;/size&gt;        &lt;/property&gt;        &lt;property name="text"&gt;         &lt;string&gt;PushButton&lt;/string&gt;        &lt;/property&gt;       &lt;/widget&gt;      &lt;/item&gt;      &lt;item&gt;       &lt;widget class="QPushButton" name="pushButton_2"&gt;        &lt;property name="minimumSize"&gt;         &lt;size&gt;          &lt;width&gt;0&lt;/width&gt;          &lt;height&gt;48&lt;/height&gt;         &lt;/size&gt;        &lt;/property&gt;        &lt;property name="text"&gt;         &lt;string&gt;PushButton&lt;/string&gt;        &lt;/property&gt;       &lt;/widget&gt;      &lt;/item&gt;      &lt;item&gt;       &lt;widget class="QPushButton" name="pushButton"&gt;        &lt;property name="minimumSize"&gt;         &lt;size&gt;          &lt;width&gt;0&lt;/width&gt;          &lt;height&gt;48&lt;/height&gt;         &lt;/size&gt;        &lt;/property&gt;        &lt;property name="text"&gt;         &lt;string&gt;PushButton&lt;/string&gt;        &lt;/property&gt;       &lt;/widget&gt;      &lt;/item&gt;     &lt;/layout&gt;    &lt;/widget&gt;    &lt;widget class="QWidget" name="horizontalLayoutWidget_2"&gt;     &lt;property name="geometry"&gt;      &lt;rect&gt;       &lt;x&gt;20&lt;/x&gt;       &lt;y&gt;110&lt;/y&gt;       &lt;width&gt;478&lt;/width&gt;       &lt;height&gt;80&lt;/height&gt;      &lt;/rect&gt;     &lt;/property&gt;     &lt;layout class="QHBoxLayout" name="horizontalLayout_2"&gt;      &lt;item&gt;       &lt;widget class="QPlainTextEdit" name="plainTextEdit"/&gt;      &lt;/item&gt;     &lt;/layout&gt;    &lt;/widget&gt;   &lt;/widget&gt;  &lt;/widget&gt;  &lt;resources/&gt;  &lt;connections&gt;   &lt;connection&gt;    &lt;sender&gt;pushButton&lt;/sender&gt;    &lt;signal&gt;clicked()&lt;/signal&gt;    &lt;receiver&gt;plainTextEdit&lt;/receiver&gt;    &lt;slot&gt;zoomIn()&lt;/slot&gt;    &lt;hints&gt;     &lt;hint type="sourcelabel"&gt;      &lt;x&gt;362&lt;/x&gt;      &lt;y&gt;39&lt;/y&gt;     &lt;/hint&gt;     &lt;hint type="destinationlabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;149&lt;/y&gt;     &lt;/hint&gt;    &lt;/hints&gt;   &lt;/connection&gt;   &lt;connection&gt;    &lt;sender&gt;pushButton_2&lt;/sender&gt;    &lt;signal&gt;clicked()&lt;/signal&gt;    &lt;receiver&gt;plainTextEdit&lt;/receiver&gt;    &lt;slot&gt;zoomIn()&lt;/slot&gt;    &lt;hints&gt;     &lt;hint type="sourcelabel"&gt;      &lt;x&gt;355&lt;/x&gt;      &lt;y&gt;69&lt;/y&gt;     &lt;/hint&gt;     &lt;hint type="destinationlabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;149&lt;/y&gt;     &lt;/hint&gt;    &lt;/hints&gt;   &lt;/connection&gt;   &lt;connection&gt;    &lt;sender&gt;pushButton_3&lt;/sender&gt;    &lt;signal&gt;clicked()&lt;/signal&gt;    &lt;receiver&gt;plainTextEdit&lt;/receiver&gt;    &lt;slot&gt;zoomIn()&lt;/slot&gt;    &lt;hints&gt;     &lt;hint type="sourcelabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;69&lt;/y&gt;     &lt;/hint&gt;     &lt;hint type="destinationlabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;149&lt;/y&gt;     &lt;/hint&gt;    &lt;/hints&gt;   &lt;/connection&gt;   &lt;connection&gt;    &lt;sender&gt;pushButton_4&lt;/sender&gt;    &lt;signal&gt;clicked()&lt;/signal&gt;    &lt;receiver&gt;plainTextEdit&lt;/receiver&gt;    &lt;slot&gt;zoomIn()&lt;/slot&gt;    &lt;hints&gt;     &lt;hint type="sourcelabel"&gt;      &lt;x&gt;162&lt;/x&gt;      &lt;y&gt;69&lt;/y&gt;     &lt;/hint&gt;     &lt;hint type="destinationlabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;149&lt;/y&gt;     &lt;/hint&gt;    &lt;/hints&gt;   &lt;/connection&gt;   &lt;connection&gt;    &lt;sender&gt;pushButton_5&lt;/sender&gt;    &lt;signal&gt;clicked()&lt;/signal&gt;    &lt;receiver&gt;plainTextEdit&lt;/receiver&gt;    &lt;slot&gt;zoomIn()&lt;/slot&gt;    &lt;hints&gt;     &lt;hint type="sourcelabel"&gt;      &lt;x&gt;65&lt;/x&gt;      &lt;y&gt;69&lt;/y&gt;     &lt;/hint&gt;     &lt;hint type="destinationlabel"&gt;      &lt;x&gt;258&lt;/x&gt;      &lt;y&gt;149&lt;/y&gt;     &lt;/hint&gt;    &lt;/hints&gt;   &lt;/connection&gt;  &lt;/connections&gt; &lt;/ui&gt; </code></pre> <h2>*.UI 源码 转换为*.py</h2> <pre><code># -*- coding: utf-8 -*-  # Form implementation generated from reading ui file 'untitled2.ui' # # Created by: PyQt5 UI code generator 5.15.4 # # WARNING: Any manual changes made to this file will be lost when pyuic5 is # run again.  Do not edit this file unless you know what you are doing. import sys  from PyQt5 import QtCore, QtGui, QtWidgets from PyQt5.QtWidgets import QApplication, QMainWindow  StyleSheet = """ /*这里是通用设置，所有按钮都有效，不过后面的可以覆盖这个*/ QPushButton {     border: none; /*去掉边框*/ } /* QPushButton#xxx 或者 #xx 都表示通过设置的objectName来指定 */ QPushButton#pushButton {     background-color: #f44336; /*背景颜色*/ } #pushButton:hover {     background-color: #e57373; /*鼠标悬停时背景颜色*/ } /*注意pressed一定要放在hover的后面，否则没有效果*/ #pushButton:pressed {     background-color: #ffcdd2; /*鼠标按下不放时背景颜色*/ } #pushButton_2 {     background-color: #4caf50;     border-radius: 5px; /*圆角*/ } #pushButton_2:hover {     background-color: #81c784; } #pushButton_2:pressed {     background-color: #c8e6c9; } #pushButton_3 {     background-color: #2196f3;     /*限制最小最大尺寸*/     min-width: 96px;     max-width: 96px;     min-height: 96px;     max-height: 96px;     border-radius: 48px; /*圆形*/ } #pushButton_3:hover {     background-color: #64b5f6; } #pushButton_3:pressed {     background-color: #bbdefb; } #pushButton_4 {     max-height: 48px;     border-top-right-radius: 20px; /*右上角圆角*/     border-bottom-left-radius: 20px; /*左下角圆角*/     background-color: #ff9800; } #pushButton_4:hover {     background-color: #ffb74d; } #pushButton_4:pressed {     background-color: #ffe0b2; } /*根据文字内容来区分按钮,同理还可以根据其它属性来区分*/ #pushButton_5 {     color: white; /*文字颜色*/     background-color: #9c27b0; } """   class Ui_MainWindow(object):     def setupUi(self, MainWindow):         MainWindow.setObjectName("MainWindow")         MainWindow.resize(800, 600)         self.centralwidget = QtWidgets.QWidget(MainWindow)         self.centralwidget.setObjectName("centralwidget")         self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)         self.horizontalLayoutWidget.setGeometry(QtCore.QRect(20, 30, 478, 80))         self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")         self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)         self.horizontalLayout.setContentsMargins(0, 0, 0, 0)         self.horizontalLayout.setObjectName("horizontalLayout")         self.pushButton_5 = QtWidgets.QPushButton(self.horizontalLayoutWidget)         self.pushButton_5.setMinimumSize(QtCore.QSize(0, 48))         self.pushButton_5.setObjectName("pushButton_5")         self.horizontalLayout.addWidget(self.pushButton_5)         self.pushButton_4 = QtWidgets.QPushButton(self.horizontalLayoutWidget)         self.pushButton_4.setMinimumSize(QtCore.QSize(0, 48))         self.pushButton_4.setObjectName("pushButton_4")         self.horizontalLayout.addWidget(self.pushButton_4)         self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)         self.pushButton_3.setMinimumSize(QtCore.QSize(0, 48))         self.pushButton_3.setObjectName("pushButton_3")         self.horizontalLayout.addWidget(self.pushButton_3)         self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)         self.pushButton_2.setMinimumSize(QtCore.QSize(0, 48))         self.pushButton_2.setObjectName("pushButton_2")         self.horizontalLayout.addWidget(self.pushButton_2)         self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)         self.pushButton.setMinimumSize(QtCore.QSize(0, 48))         self.pushButton.setObjectName("pushButton")         self.horizontalLayout.addWidget(self.pushButton)         self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)         self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(20, 110, 478, 80))         self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")         self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)         self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)         self.horizontalLayout_2.setObjectName("horizontalLayout_2")         self.plainTextEdit = QtWidgets.QPlainTextEdit(self.horizontalLayoutWidget_2)         self.plainTextEdit.setObjectName("plainTextEdit")         self.horizontalLayout_2.addWidget(self.plainTextEdit)         MainWindow.setCentralWidget(self.centralwidget)          self.retranslateUi(MainWindow)         # Qt Designer 设计器自动生成相关事件代码(信号/槽)         # self.pushButton.clicked.connect(self.plainTextEdit.zoomIn)         # self.pushButton_2.clicked.connect(self.plainTextEdit.zoomIn)         # self.pushButton_3.clicked.connect(self.plainTextEdit.zoomIn)         # self.pushButton_4.clicked.connect(self.plainTextEdit.zoomIn)         # self.pushButton_5.clicked.connect(self.plainTextEdit.zoomIn)         # 自定义函数进行相关(信号/槽)事件绑定         self.pushButton.clicked.connect(self.onClicked)         self.pushButton_2.clicked.connect(self.onPressed)         self.pushButton_3.clicked.connect(self.onReleased)         self.pushButton_4.clicked.connect(self.onToggled)         self.pushButton_5.clicked.connect(self.onToggled)         QtCore.QMetaObject.connectSlotsByName(MainWindow)      def retranslateUi(self, MainWindow):         _translate = QtCore.QCoreApplication.translate         MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))         self.pushButton_5.setText(_translate("MainWindow", "PushButton"))         self.pushButton_4.setText(_translate("MainWindow", "PushButton"))         self.pushButton_3.setText(_translate("MainWindow", "PushButton"))         self.pushButton_2.setText(_translate("MainWindow", "PushButton"))         self.pushButton.setText(_translate("MainWindow", "PushButton"))      # 自定义按钮点击触发事件     def onClicked(self):         self.plainTextEdit.appendPlainText(             '按钮{0}被点击'.format(self.pushButton.objectName()))      def onPressed(self):         self.plainTextEdit.appendPlainText(             '按钮{0}被按下'.format(self.pushButton_2.objectName()))      def onReleased(self):         self.plainTextEdit.appendPlainText(             '按钮{0}被释放'.format(self.pushButton_3.objectName()))      def onToggled(self, checked):         self.plainTextEdit.appendPlainText(             '按钮{0}被选中：{1}'.format(self.pushButton_4.objectName(), checked))   if __name__ == '__main__':     app = QApplication(sys.argv)     app.setStyleSheet(StyleSheet)     MainWindow = QMainWindow()     ui = Ui_MainWindow()     ui.setupUi(MainWindow)     MainWindow.show()     sys.exit(app.exec_()) </code></pre> <p>&nbsp;重点:</p> <p>1、通过组件的ObjectName + 应用app的setStyleSheet(StyleSheet) 实现自定义样式绑定</p> <p>2、通过组件的Clicked.connect() 绑定自定义函数。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; # 自定义函数进行相关(信号/槽)事件绑定<br /> &nbsp; &nbsp; &nbsp; &nbsp; self.pushButton.clicked.connect(self.onClicked)&nbsp; # pushButton 绑定onClicked 函数<br /> &nbsp; &nbsp; &nbsp; &nbsp; self.pushButton_2.clicked.connect(self.onPressed)# pushButton_2绑定onPressed函数<br /> &nbsp; &nbsp; &nbsp; &nbsp; self.pushButton_3.clicked.connect(self.onReleased)# pushButton_3绑定onReleased函数<br /> &nbsp; &nbsp; &nbsp; &nbsp; self.pushButton_4.clicked.connect(self.onToggled)# pushButton_4绑定onToggled函数<br /> &nbsp; &nbsp; &nbsp; &nbsp; self.pushButton_5.clicked.connect(self.onToggled)# pushButton_5 绑定onToggled函数</p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-241.htm">git 回滚到之前某一commit</a></p>
                                        <p>下一个：<a href="/html/category/article-243.htm">tomcat服务器项目迁移到另外一台tomcat服务器</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">vue父组件向子组件传值与传递方法</a></h4>
                <p>vue父组件向子组件传值与传递方法 学习笔记 1、父组件向子组件传值（props）  在子组件中，默认是无法访问到父组件中的data上的数据和methods中的方法 父组件可以在引用子组件的时候，通过</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-218.htm">到底什么是消息队列</a></h4>
                <p>最近公司重构订单中心，用到消息中间件，闲暇时间对此进行学习了解，下面是学习内容的总结。 一、什么是消息队列 消息（Message）是指在应用之间传送的数据，消息可以非常简单，比如只包含文本字符串，也可</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">通俗易懂：窗口函数案例详解</a></h4>
                <p>什么是窗口函数 相信很多人都比较熟悉 SQL 聚合函数的语法，比如 count(), sum(), max()等， 窗口函数类似聚合函数，不同的是窗口函数不改变原有的行。 窗口函数是数据分析和数据开发</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-209.htm">Java基础知识 29（同步代码块，同步方法，静态同步方法，Lock锁，死锁问题）</a></h4>
                <p>Java基础知识 29  先回顾一下上节课讲的多个窗口共同卖票的问题，首先我们设置三个不同的线程来同步进行卖票，我们把所有的票数全部设置成静态变量，让这三个线程可以共享这些票。通过设置这个静态变量我们</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">从查询重写角度理解elasticsearch的高亮原理</a></h4>
                <p>一、高亮的一些问题 elasticsearch提供了三种高亮方式，前面我们已经简单的了解了elasticsearch的高亮原理; 高亮处理跟实际使用查询类型有十分紧密的关系，其中主要的一点就是muti</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Android 4.0.1破坏了WebView HTML 5本地存储？</a></h4>
                <p>要解决此问题，请执行以下步骤- 对于版本低于4.4的android，将数据加载到具有这样的目录的文件方案的web视图中将不起作用。 browser.loadDataWithBaseUrl("file:</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">kafka踩坑java找不到kafka-run-class.sh: line 309: exec: java: not found</a></h4>
                <p>今天执行 user_1@test_1:/opt/kafka$ sudo bin/zookeeper-server-start.sh config/zookeeper.properties/opt/ka</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">git 回滚到之前某一commit</a></h4>
                <p>git log git reset –hard 8ff24a6803173208f3e606e32dfcf82db9ac84d8</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">解决antdv的table因数据量过大导致的卡顿问题</a></h4>
                <p>遇到的问题：antdv的table表格使用时因数据量过大，造成标签页切换卡顿的问题 解决办法：绑定滚动事件，页面只显示在可视区域内的数据，没在可视区域内的数据不予展示，dom元素的scrollHeig</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>