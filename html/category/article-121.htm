<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-121.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>0501-使用Python访问Kerberos环境下的Kafka(二) - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">0501-使用Python访问Kerberos环境下的Kafka(二)</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="1__0" rel="nofollow"></a>1 文档编写目的</h2> <p>在前面的文章Fayson介绍了一种Python访问Kerberos环境下Kafka的文章，参考《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247495475&amp;idx=1&amp;sn=f889461ce032bc79f13e5b78f86aef35&amp;chksm=ec293f3adb5eb62cf3d2a9380f924f63de74321216a42cc5bd7ef4536bd26f767febda2851d5&amp;scene=21#wechat_redirect"  rel="nofollow">0500-使用Python2访问Kerberos环境下的Kafka</a>》，本篇文章主要介绍另一种方式访问Kerberos环境下的Kafka。</p> <p>在学习本篇文章内容前你还需要知道《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247485371&amp;idx=1&amp;sn=e4c7cc77c2354634059295d5cf63b815&amp;chksm=ec2ad7b2db5d5ea46406cb9d26c95f7d6cf52740e90a131f97909bbfaa10c8d4a751cc2bf1e8&amp;scene=21#wechat_redirect"  rel="nofollow">如何通过Cloudera Manager为Kafka启用Kerberos及使用</a>》。</p> <ul> <li>内容概述：</li> </ul> <p>1.环境准备</p> <p>2.Python2示例代码</p> <p>3.访问验证</p> <p>4.总结</p> <ul> <li>测试环境：</li> </ul> <p>1.操作系统：Redhat7.4</p> <p>2.CM和CDH版本为5.15.0</p> <p>3.CDK2.2.0（0.10.2）</p> <p>4.Python 2.7.15</p> <h2> <a id="2__26" rel="nofollow"></a>2 环境准备</h2> <p>在使用Python访问Kafka前，还需要为Python环境安装相关的Kafka包，这里Fayson使用官网推荐使用的kafka-python依赖包。该依赖包的GitHub地址为：</p> <p>https://github.com/dpkp/kafka-python，关于kafka-python的详细说明可以参考GitHub。</p> <p>接下来准备Python访问Kafka的运行环境。</p> <p>1.安装操作系统依赖包</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># yum <span class="token operator">-</span>y install gcc<span class="token operator">-</span>c<span class="token operator">++</span> python<span class="token operator">-</span>devel<span class="token punctuation">.</span>x86_64 cyrus<span class="token operator">-</span>sasl<span class="token operator">-</span>devel<span class="token punctuation">.</span>x86_64 </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9d9dd36dfc94029e741bacf647b4ea56.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.安装gssapi依赖包，该依赖包为Python访问Kerberos环境的模块</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>pip install gssapi </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/514c28370518a4d7ff546cc97656ee7a.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>3.安装kafka-python依赖包</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>pip install kafka<span class="token operator">-</span>python </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/af7ad3ddd252ac488404feb1a98c40dc.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="3_Python2_58" rel="nofollow"></a>3 Python2示例代码</h2> <p>1.如下为Python2访问Kerberos环境下Kafka示例代码</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># more kafka_test<span class="token punctuation">.</span>py  <span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaProducer  <span class="token keyword">import</span> logging logging<span class="token punctuation">.</span><span class="token function">basicConfig</span><span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">'example.log'</span><span class="token punctuation">,</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span>   conf <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token string">'bootstrap_servers'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cdh2.fayson.com:9092'</span><span class="token punctuation">,</span><span class="token string">'cdh3.fayson.com:9092'</span><span class="token punctuation">,</span><span class="token string">'cdh4.fayson.com:9092'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">'security_protocol'</span><span class="token punctuation">:</span> <span class="token string">'SASL_PLAINTEXT'</span><span class="token punctuation">,</span>         <span class="token string">'sasl_mechanism'</span><span class="token punctuation">:</span> <span class="token string">'GSSAPI'</span><span class="token punctuation">,</span>         <span class="token string">'client_id'</span><span class="token punctuation">:</span> <span class="token string">'testgroup'</span><span class="token punctuation">}</span>  producer <span class="token operator">=</span> <span class="token function">KafkaProducer</span><span class="token punctuation">(</span><span class="token operator">**</span>conf<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> b<span class="token string">'some_message_bytes'</span><span class="token punctuation">)</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/5dcb433d924569ec404d961ed459c3b0.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.关于Kafka支持的属性配置可以参考如下地址</p> <p>https://github.com/dpkp/kafka-python/blob/master/kafka/producer/kafka.py</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/607de8e9145948e1ec81996619f99c67.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="4__88" rel="nofollow"></a>4 访问验证</h2> <p>本文提供的示例代码为向Kerberos环境Kafka的test Topic中发送消息，在命令行使用Kafka提供的kafka-console-consumer命令消费Python示例生产的消息。</p> <p>1.准备客户端消费配置文件</p> <p>jaas.conf内容如下：</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh05 consumer<span class="token punctuation">]</span># more jaas<span class="token punctuation">.</span>conf  KafkaClient <span class="token punctuation">{<!-- --></span>    com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>security<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>module<span class="token punctuation">.</span>Krb5LoginModule required    useKeyTab<span class="token operator">=</span><span class="token boolean">true</span>    keyTab<span class="token operator">=</span><span class="token string">"/data/disk1/python_code/fayson.keytab"</span>    principal<span class="token operator">=</span><span class="token string">"fayson@FAYSON.COM"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/6738dcc1e3c30b9ac115f10d15bb0bc2.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>client.properties内容如下：</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh05 consumer<span class="token punctuation">]</span># more client<span class="token punctuation">.</span>properties  security<span class="token punctuation">.</span>protocol<span class="token operator">=</span><span class="token constant">SASL_PLAINTEXT</span> sasl<span class="token punctuation">.</span>kerberos<span class="token punctuation">.</span>service<span class="token punctuation">.</span>name<span class="token operator">=</span>kafka group<span class="token punctuation">.</span>id<span class="token operator">=</span>testgroup </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/8d1828ea85b1728decd5c95c7b616565.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.在命令行运行如下脚本启动客户端消费</p> <pre><code class="prism language-javascript"><span class="token keyword">export</span> <span class="token constant">KAFKA_OPTS</span><span class="token operator">=</span><span class="token string">"-Djava.security.auth.login.config=/data/disk1/python_code/consumer/jaas.conf"</span> kafka<span class="token operator">-</span>console<span class="token operator">-</span>consumer <span class="token operator">--</span>topic test <span class="token operator">--</span><span class="token keyword">from</span><span class="token operator">-</span>beginning <span class="token operator">--</span>bootstrap<span class="token operator">-</span>server cdh2<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span><span class="token punctuation">,</span>cdh3<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span><span class="token punctuation">,</span>cdh4<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span> <span class="token operator">--</span>consumer<span class="token punctuation">.</span>config <span class="token operator">/</span>data<span class="token operator">/</span>disk1<span class="token operator">/</span>python_code<span class="token operator">/</span>consumer<span class="token operator">/</span>client<span class="token punctuation">.</span>properties </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/172cd4d232235fc67ff4a9243198f495.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>3.在命令行运行python2的示例代码向test发送100条“some_message_bytes”消息</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># kinit fayson <span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>python kafka_test<span class="token punctuation">.</span>py </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/690610919126b20a88e4fda32d46706a.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>4.查看Kafka消费程序接收到两条消息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/a7b5c782612339d2d1478c89ffe06147.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="5__141" rel="nofollow"></a>5 总结</h2> <p>1.kafka-python依赖包需要Python的环境有2.7、3.4、3.5、3.6</p> <p>2.如果使用kafka-python访问Kerberos环境下的Kafka，需要安装gssapi依赖包，使用pip方式安装即可。</p> <p>3.相较于之前的访问方式，该方式会更简单一些，Python的依赖包不会显得太复杂。</p> <blockquote> <p>提示：代码块部分可以左右滑动查看噢<br /> 为天地立心，为生民立命，为往圣继绝学，为万世开太平。<br /> 温馨提示：如果使用电脑查看图片不清晰，可以使用手机打开文章单击文中的图片放大查看高清原图。</p> </blockquote></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-120.htm">解决rancher和k8s集群ingress部署在同一台机器导致的80及443端口占用问题</a></p>
                                        <p>下一个：<a href="/html/category/article-122.htm">springboot接口如何控制版本？</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-228.htm">Android jetpack room+ViewModel+liveData 数据自动更新</a></h4>
                <p>Android jetpack room的使用_安果移不动的博客-CSDN博客 接上篇博客 我们用google推荐的这种方式  &nbsp; 修改： StudentDao package com.an</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">Redis 如何保证数据库和缓存双写一致性？</a></h4>
                <p>前言  数据库和缓存（比如：redis）双写数据一致性问题，是一个跟开发语言无关的公共问题。尤其在高并发的场景下，这个问题变得更加严重。 我很负责的告诉大家，该问题无论在面试，还是工作中遇到的概率非常</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">从查询重写角度理解elasticsearch的高亮原理</a></h4>
                <p>一、高亮的一些问题 elasticsearch提供了三种高亮方式，前面我们已经简单的了解了elasticsearch的高亮原理; 高亮处理跟实际使用查询类型有十分紧密的关系，其中主要的一点就是muti</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">kafka踩坑java找不到kafka-run-class.sh: line 309: exec: java: not found</a></h4>
                <p>今天执行 user_1@test_1:/opt/kafka$ sudo bin/zookeeper-server-start.sh config/zookeeper.properties/opt/ka</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">C\C++ 中 malloc、calloc、realloc 函数的用法</a></h4>
                <p>C\C++ 中 malloc、calloc、realloc 函数的用法 转自：https://www.jianshu.com/p/d6f209b8796d 前言 C\C++提供了底层的内存操作，为程序</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-209.htm">Java基础知识 29（同步代码块，同步方法，静态同步方法，Lock锁，死锁问题）</a></h4>
                <p>Java基础知识 29  先回顾一下上节课讲的多个窗口共同卖票的问题，首先我们设置三个不同的线程来同步进行卖票，我们把所有的票数全部设置成静态变量，让这三个线程可以共享这些票。通过设置这个静态变量我们</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-250.htm">Redis的数据淘汰策略和数据过期后的删除策略</a></h4>
                <p>Redis的数据淘汰策略  volatile-lru（least recently used）：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰 vol</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">vue写一个简单的文件上传控件</a></h4>
                <p>这篇将介绍如何写一个简单的基于Vue+Element的文件上传控件。 控件将具有 1. 上传队列的列表，显示文件名称，大小等信息，可以显示上传进度实时刷新 2. 取消上传  &nbsp;使用Eleme</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">如何保证Redis缓存和数据库一致性？</a></h4>
                <p>首先我们先了解下缓存是什么？ 缓存就是把低速存储的结果，临时保存在高速存储的技术。 为什么使用redis进行缓存数据？ Redis嘛，就是一种运行速度很快，并发很强的跑在内存上的NoSql数据库，支持</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>