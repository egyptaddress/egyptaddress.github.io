<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-140.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>【Spring】——事务实现过程及原理 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">【Spring】——事务实现过程及原理</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <h1 style="margin:0in; margin-left:.375in; font-size:14.0pt"> <span lang="en-US" style="font-family:Calibri; color:#3A3838">1</span><span lang="zh-CN" style="font-family:宋体; color:#3A3838">、</span><span lang="en-US" style="font-family:宋体"><strong>Spring</strong></span><span lang="zh-CN" style="font-family:宋体"><strong>中事务处理的作用：</strong></span><br /> </h1> <p style="margin:0in 0in 0in 0.375in; font-family:宋体; font-size:14pt">&nbsp;</p> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="en-US">Spring</span><span lang="zh-CN">事务处理，是将事务处理的工作统一起来，并为事务处理提供通用的支持。</span></p> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h1 style="margin:0in; margin-left:.375in; font-size:14.0pt; color:#3A3838"> <span lang="en-US" style="font-family:Calibri">2</span><span lang="zh-CN" style="font-family:宋体">、</span><span lang="zh-CN" style="font-family:宋体"><strong>工作原理及实现</strong></span><br /> </h1> <p style="margin:0in; margin-left:.375in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h2 style="margin:0in; margin-left:.75in; font-size:14.0pt"> <span lang="en-US" style="font-family:Calibri; color:#3A3838">a</span><span lang="zh-CN" style="font-family:宋体; color:#3A3838">、</span><span lang="zh-CN" style="font-family:宋体; color:#ED7D31"><strong>划分处理单元——</strong></span><span lang="en-US" style="font-family:宋体; color:#ED7D31"><strong>IOC</strong></span><br /> </h2> <p lang="en-US" style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#ED7D31"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="zh-CN">由于</span><span lang="en-US">spring</span><span lang="zh-CN">解决的问题是对单个数据库进行局部事务处理的，具体的实现首相用</span><span lang="en-US">spring</span><span lang="zh-CN">中的</span><span lang="en-US">IOC</span><span lang="zh-CN">划分了事务处理单元。并且将对事务的各种配置放到了</span><span lang="en-US">ioc</span><span lang="zh-CN">容器中（设置事务管理器，设置事务的传播特性及隔离机制）。</span></p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h2 style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt"> <span lang="en-US" style="color:#3A3838">b</span><span lang="zh-CN" style="color:#3A3838">、</span><span lang="en-US" style="color:#ED7D31"><strong>AOP</strong></span><span lang="zh-CN" style="color:#ED7D31"><strong>拦截需要进行事务处理的类</strong></span><br /> </h2> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#ED7D31"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="en-US">Spring</span><span lang="zh-CN">事务处理模块是通过</span><span lang="en-US">AOP</span><span lang="zh-CN">功能来实现声明式事务处理的，具体操作（比如事务实行的配置和读取，事务对象的抽象），用</span><span lang="en-US">TransactionProxyFactoryBean</span><span lang="zh-CN">接口来使用</span><span lang="en-US">AOP</span><span lang="zh-CN">功能，生成</span><span lang="en-US">proxy</span><span lang="zh-CN">代理对象，通过</span><span lang="en-US">TransactionInterceptor</span><span lang="zh-CN">完成对代理方法的拦截，将事务处理的功能编织到拦截的方法中。</span></p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="zh-CN">读取</span><span lang="en-US">ioc</span><span lang="zh-CN">容器事务配置属性，转化为</span><span lang="en-US">spring</span><span lang="zh-CN">事务处理需要的内部数据结构（</span><span lang="en-US">TransactionAttributeSourceAdvisor</span><span lang="zh-CN">），转化为</span><span lang="en-US">TransactionAttribute</span><span lang="zh-CN">表示的数据对象。</span></p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h2 style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt"> <span lang="en-US" style="color:#3A3838">c</span><span lang="zh-CN" style="color:#3A3838">、</span><span lang="zh-CN" style="color:#ED7D31"><strong>对事物处理实现（事务的生成、提交、回滚、挂起）</strong></span><br /> </h2> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#ED7D31"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="en-US">spring</span><span lang="zh-CN">委托给具体的事务处理器实现。实现了一个抽象和适配。适配的具体事务处理器：</span><span lang="en-US">DataSource</span><span lang="zh-CN">数据源支持、</span><span lang="en-US">hibernate</span><span lang="zh-CN">数据源事务处理支持、</span><span lang="en-US">JDO</span><span lang="zh-CN">数据源事务处理支持，</span><span lang="en-US">JPA</span><span lang="zh-CN">、</span><span lang="en-US">JTA</span><span lang="zh-CN">数据源事务处理支持。这些支持都是通过设计</span><span lang="en-US">PlatformTransactionManager</span><span lang="zh-CN">、</span><span lang="en-US">AbstractPlatforTransaction</span><span lang="zh-CN">一系列事务处理的支持。</span></p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:.75in; font-size:14.0pt; color:#3A3838"><span lang="en-US" style="font-family:Calibri">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="zh-CN" style="font-family:宋体">为常用数据源支持提供了一系列的</span><span lang="en-US" style="font-family:宋体">TransactionManager</span><span lang="zh-CN" style="font-family:宋体">。</span></p> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h2 style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt"> <span lang="en-US" style="color:#3A3838">d</span><span lang="zh-CN" style="color:#3A3838">、</span><span lang="zh-CN" style="color:#ED7D31"><strong>结合</strong></span><br /> </h2> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#ED7D31"> &nbsp;</p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="en-US">PlatformTransactionManager</span><span lang="zh-CN">实现了</span><span lang="en-US">TransactionInterception</span><span lang="zh-CN">接口，让其与</span><span lang="en-US">TransactionProxyFactoryBean</span><span lang="zh-CN">结合起来，形成一个</span><span lang="en-US">Spring</span><span lang="zh-CN">声明式事务处理的设计体系。</span></p> <p style="margin:0in; margin-left:1.125in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <h1 style="margin:0in; margin-left:.375in; font-size:14.0pt; color:#3A3838"> <span lang="en-US" style="font-family:Calibri">3</span><span lang="zh-CN" style="font-family:宋体">、</span><span lang="zh-CN" style="font-family:宋体"><strong>应用场景</strong></span><br /> </h1> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> &nbsp;</p> <p style="margin:0in; margin-left:.75in; font-family:宋体; font-size:14.0pt; color:#3A3838"> <span lang="zh-CN">&nbsp; 支持不同数据源，在底层进行封装，可以做到事务即开即用，这样的好处是：即使有其他的数据源事务处理需要，</span><span lang="en-US">Spring</span><span lang="zh-CN">也提供了一种一致的方式。</span></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-139.htm">微服务架构概述(帝炎)</a></p>
                                        <p>下一个：<a href="/html/category/article-141.htm">SpringBoot + SpringSecurity + Mybatis-Plus + JWT实现分布式系统认证和授权</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-227.htm">vue更新数据后重新请求数据并刷新页面</a></h4>
                <p>首先要配置好路由 在app.vue添加下面代码 export default {   provide() {     return {       reload: this.reload,     }</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">git 回滚到之前某一commit</a></h4>
                <p>git log git reset –hard 8ff24a6803173208f3e606e32dfcf82db9ac84d8</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">js数组删除的方法</a></h4>
                <p>js的数组删除，我建议大家使用splice函数，不要使用slice函数，因为slice是返回一个新数组，并不是从原来的数组中删除。 比如： let a=[111,222,333,444]; a.spl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-223.htm">Spring Security——【认证、授权、注销及权限控制】</a></h4>
                <p>目录 Spring Security简介： 实验环境搭建： 认证和授权 权限控制和注销  Spring Security简介： Spring Security 是针对Spring项目的安全框架，也是S</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-211.htm">谨慎使用Arrays.asList()</a></h4>
                <p>经过了两个月的【深入学习Java编程方法】课程学习，对Java的一些新特性有了更多的了解。依旧，坑洼遍地。 Java中的Collection类是一个很好用、很常用的类，省去了当年C语言手动链表的麻烦之</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Android 4.0.1破坏了WebView HTML 5本地存储？</a></h4>
                <p>要解决此问题，请执行以下步骤- 对于版本低于4.4的android，将数据加载到具有这样的目录的文件方案的web视图中将不起作用。 browser.loadDataWithBaseUrl("file:</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">实战代码（十）：Springboot RestTemplate连接池</a></h4>
                <p>一、理论基础 RestTemplate是Springboot中内置的Http请求工具，可以直接注入使用。 两个常用的构造方法如下图 (点击进入文档地址)  从上面可以看出，最简单的方式就是使用默认配置</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-247.htm">.NET如何快速比较两个byte数组是否相等</a></h4>
                <p>前言  之前在群里面有群友问过一个这样的问题，在.NET中如何快速的比较两个byte数组是否完全相等，听起来是一个比较两个byte数组是完全相等是一个简单的问题，但是深入研究以后，觉得还是有很多方案的</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">Docker从入门到放弃(1) Docker简介与安装_在线工具</a></h4>
                <p>​ 目录 一、Docker简介 1、Docker是什么： 2、为什么有docke的出现： 3、docker与传统容器的区别： 4、docker基本组成 5、docker工作原理： 二、Docker安装</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-210.htm">JAVA8 | 日期时间API（LocalDate、LocalDateTime、LocalTime）</a></h4>
                <p>目录      日期 时间 合并日期和时间 时间戳 时间段   Duration Period   操作日期 日期格式化 时区 日历       Java8 引入全新的日期和时间API，主要包括Loc</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>