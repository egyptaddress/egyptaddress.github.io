<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-99.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>浅谈快速傅里叶变化的Matlab与Python实现与区别 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">浅谈快速傅里叶变化的Matlab与Python实现与区别</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> <a id="MatlabPython_0" rel="nofollow"></a>浅谈快速傅里叶变化的Matlab与Python实现与区别</h1> <p>信号处理免不了要求频率、画频谱图，但Matlab的 fft() 函数与Python的 numpy.fft.fft() 与 scipy.fftpack.fft() 函数得到的是fft变化后的双边复数值，离画频谱图还有几句代码的距离。<br /> 基本原理不介绍了，下面直接懒人投喂，给出Matlab与Python的两个函数，直接调用即可画频谱图。</p> <h4> <a id="fft_3" rel="nofollow"></a>注：两种语言的fft算法是有区别的，最后细聊！</h4> <h4> <a id="Matlabfftlw_5" rel="nofollow"></a>Matlab的fftlw函数</h4> <p>输入是信号序列、对应的时间序列、以及是否作图，输出可以得到单边归一化之后的频率与对应的振幅，通过输出可以直接画出常用的频谱图！</p> <pre><code class="prism language-python">function <span class="token punctuation">[</span> F<span class="token punctuation">,</span>M <span class="token punctuation">]</span> <span class="token operator">=</span> fftlw<span class="token punctuation">(</span> x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>draw <span class="token punctuation">)</span> <span class="token operator">%</span>FFTLW 快速傅里叶变化<span class="token number">2021.10</span><span class="token number">.26</span> <span class="token operator">%</span>输入   x<span class="token operator">-</span><span class="token operator">-</span>时间 y<span class="token operator">-</span><span class="token operator">-</span>信号 draw<span class="token operator">-</span><span class="token operator">-</span><span class="token number">1</span>为画频谱图，<span class="token number">0</span>为不画 <span class="token operator">%</span>输出   F<span class="token operator">-</span><span class="token operator">-</span>频率 M<span class="token operator">-</span><span class="token operator">-</span>幅值   N<span class="token operator">=</span>length<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token operator">%</span>采样点数 <span class="token keyword">if</span><span class="token punctuation">(</span>mod<span class="token punctuation">(</span>N<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span>     N<span class="token operator">=</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> end    Fs<span class="token operator">=</span><span class="token punctuation">(</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>x<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token operator">-</span>x<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token operator">%</span>采样频率 F<span class="token operator">=</span><span class="token punctuation">(</span>N<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">:</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>Fs<span class="token operator">/</span>N<span class="token operator">-</span>Fs<span class="token operator">/</span><span class="token number">2</span> <span class="token punctuation">;</span>            <span class="token operator">%</span>频率 y2<span class="token operator">=</span><span class="token builtin">abs</span><span class="token punctuation">(</span>fftshift<span class="token punctuation">(</span>fft<span class="token punctuation">(</span>y<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token operator">%</span>快速傅里叶变化 M<span class="token operator">=</span><span class="token number">2</span><span class="token operator">*</span>y2<span class="token punctuation">(</span>N<span class="token operator">/</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">)</span><span class="token operator">/</span>N<span class="token punctuation">;</span>                 <span class="token operator">%</span>归一化 M<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span>M<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>                       <span class="token operator">%</span>常量除以<span class="token number">2</span>  <span class="token keyword">if</span> draw<span class="token operator">==</span><span class="token number">1</span>                         <span class="token operator">%</span>可视化     figure     plot<span class="token punctuation">(</span>F<span class="token punctuation">,</span>M<span class="token punctuation">)</span>     xlabel<span class="token punctuation">(</span><span class="token string">'f/HZ'</span><span class="token punctuation">)</span>     ylabel<span class="token punctuation">(</span><span class="token string">'amplitude'</span><span class="token punctuation">)</span>     title<span class="token punctuation">(</span><span class="token string">'频谱图'</span><span class="token punctuation">)</span> end end </code></pre> <h4> <a id="Pythonfftlw_35" rel="nofollow"></a>Python的fftlw函数</h4> <p>输入与matlab的略有点不同，分别是采样频率、信号序列、是否作图，输出与matlab的函数一致。</p> <pre><code class="prism language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">from</span> scipy<span class="token punctuation">.</span>fftpack <span class="token keyword">import</span> fft<span class="token punctuation">,</span>ifft <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt  <span class="token keyword">def</span> <span class="token function">fftlw</span><span class="token punctuation">(</span>Fs<span class="token punctuation">,</span>y<span class="token punctuation">,</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token triple-quoted-string string">'''     Parameters     ----------     Fs : 采样频率     y :  信号序列     draw :1为画频谱图，0为不画       Returns     -------     f : 频率     M : 幅值     '''</span>     L<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>                              <span class="token comment">#采样点数</span>     f <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>L <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> Fs <span class="token operator">/</span> L    <span class="token comment">#频率</span>     <span class="token comment">#M = np.abs(np.fft.fft(y))*2/L         #采用numpy.fft.fft()函数并归一化</span>     M <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fft<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span><span class="token number">2</span><span class="token operator">/</span>L             <span class="token comment">#采用scipy.fftpack.fft()函数并归一化</span>     M <span class="token operator">=</span> M<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>L <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>                   <span class="token comment">#取单边谱</span>     M<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>M<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token number">2</span>                           <span class="token comment">#常量除以2</span>          <span class="token keyword">if</span> draw<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                           <span class="token comment">#可视化</span>         plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token punctuation">)</span>         plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'font.sans-serif'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'SimHei'</span><span class="token punctuation">]</span>         plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">False</span>         plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>f<span class="token punctuation">,</span>M<span class="token punctuation">)</span>         plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'f/HZ'</span><span class="token punctuation">)</span>         plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'amplitude'</span><span class="token punctuation">)</span>         plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'频谱图'</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> f<span class="token punctuation">,</span>M </code></pre> <h4> <a id="fftlw_73" rel="nofollow"></a>构造简单的信号对比两种语言fftlw效果</h4> <p>举个例子，构造如下信号验证所写函数的正确性：</p> <p><span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        y</p> <p>        =</p> <p>        3</p> <p>        +</p> <p>        t</p> <p>        ⋅</p> <p>        sin</p> <p>        ⁡</p> <p>        (</p> <p>        2</p> <p>        π</p> <p>        t</p> <p>        ⋅</p> <p>        100</p> <p>        )</p> <p>        +</p> <p>        3</p> <p>        ⋅</p> <p>        sin</p> <p>        ⁡</p> <p>        (</p> <p>        2</p> <p>        π</p> <p>        t</p> <p>        ⋅</p> <p>        200</p> <p>        )</p> <p>       y=3+t\cdot \sin (2\pi t\cdot 100)+3\cdot \sin (2\pi t\cdot 200)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.625em; vertical-align: -0.19444em;"></span><span style="margin-right: 0.03588em;" class="mord mathdefault">y</span><span class="mspace" style="margin-right: 0.277778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right: 0.277778em;"></span></span><span class="base"><span class="strut" style="height: 0.72777em; vertical-align: -0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.61508em; vertical-align: 0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span style="margin-right: 0.03588em;" class="mord mathdefault">π</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 0.64444em; vertical-align: 0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord">2</span><span style="margin-right: 0.03588em;" class="mord mathdefault">π</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p> <p>其中，包括常数项，周期项和趋势项，理论上该信号的频率应该为0Hz、100Hz、200Hz（具体怎么算的补一补书知识）。在这里，我设置采样频率 fs=10000，产生10000个数据点，时域图如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/1afa53ea36fe093ca60cd8e0468f98a7.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别"><strong>Matlab调用fftlw函数的主函数</strong></p> <pre><code class="prism language-python">fs<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">;</span>                                     <span class="token operator">%</span>采样频率 x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">/</span>fs<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>fs<span class="token punctuation">;</span>                        <span class="token operator">%</span>时间序列 y<span class="token operator">=</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>pi<span class="token operator">*</span>x<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token operator">*</span>x<span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>pi<span class="token operator">*</span>x<span class="token operator">*</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">;</span>     <span class="token operator">%</span>信号序列 figure                                        <span class="token operator">%</span>画时域图 plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> title<span class="token punctuation">(</span><span class="token string">'时域图'</span><span class="token punctuation">)</span> xlabel<span class="token punctuation">(</span><span class="token string">'t/s'</span><span class="token punctuation">)</span> ylabel<span class="token punctuation">(</span><span class="token string">'amplitude'</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>f<span class="token punctuation">,</span>m<span class="token punctuation">]</span><span class="token operator">=</span>fftlw<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token operator">%</span>快速傅里叶变化并画频谱图 </code></pre> <p>得到的频谱图如下：发现0Hz、100Hz、200Hz处的幅值分别为3，0.5，3。0Hz与200Hz处的幅值完美对应时域中常数项与<span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        s</p> <p>        i</p> <p>        n</p> <p>        (</p> <p>        2</p> <p>        π</p> <p>        t</p> <p>        ⋅</p> <p>        200</p> <p>        )</p> <p>       sin (2\pi t\cdot 200)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">2</span><span style="margin-right: 0.03588em;" class="mord mathdefault">π</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span>的系数；而100Hz项 <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        s</p> <p>        i</p> <p>        n</p> <p>        (</p> <p>        2</p> <p>        π</p> <p>        t</p> <p>        ⋅</p> <p>        200</p> <p>        )</p> <p>       sin (2\pi t\cdot 200)</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">2</span><span style="margin-right: 0.03588em;" class="mord mathdefault">π</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right: 0.222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right: 0.222222em;"></span></span><span class="base"><span class="strut" style="height: 1em; vertical-align: -0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span>的系数不是常数而是 <span class="katex--inline"><span class="katex"><span class="katex-mathml"></p> <p>        t</p> <p>       t</p> <p>    </span><span class="katex-html"><span class="base"><span class="strut" style="height: 0.61508em; vertical-align: 0em;"></span><span class="mord mathdefault">t</span></span></span></span></span>，且时间是0-1s，该项傅里叶变化得到的是该段时间内的平均幅值，也就是0.5。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/82bf66aa15f8a0ae0c10ea507790c94d.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别"><strong>Python调用fftlw函数的主函数</strong><br /> 直接加在def fftlw()的后文调用他就行。</p> <pre><code class="prism language-python">Fs<span class="token operator">=</span><span class="token number">10000</span>                <span class="token comment">#采用频率</span> L<span class="token operator">=</span><span class="token number">10000</span>                 <span class="token comment">#采样点数</span> t<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>L<span class="token operator">/</span>Fs<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">/</span>Fs<span class="token punctuation">)</span>   <span class="token comment">#时间序列        </span> y<span class="token operator">=</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">*</span>t<span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token operator">*</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span>  <span class="token comment">#信号序列</span> f<span class="token punctuation">,</span>M<span class="token operator">=</span>fftlw<span class="token punctuation">(</span>Fs<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>         <span class="token comment">#快速傅里叶变化并画频谱图</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/c7d2958d36b6e2e35aab1ddf259feb57.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别">图和matlab的一模一样！但是！</p> <h4> <a id="fftlw_105" rel="nofollow"></a>采用实际的振动信号对比两种语言fftlw效果</h4> <p>数据来源于西储大学转子实验台振动信号，采样频率为12000Hz，现取正常状态下、转速1796 rpm轴承振动信号1000个点如下。粗略的观察，有一个低频信号大概周期为0.035 s，频率大概 29Hz。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/3076afa9ec2a1f83cdae00af61ae3961.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别"><strong>Matlab画频谱图</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/2354434a3efd2dcf1e64223d3c9fff53.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别"><strong>Python画频谱图</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230108/69989de964a01f6e86381d10b58827bc.jpg" alt="浅谈快速傅里叶变化的Matlab与Python实现与区别">python的频谱图的幅值与原始数据量级差别较大，与matlab的频谱图也毫不相关，可能是底层傅里叶变换的算法不同所致，具体哪个正确还带进一步考证！！！</p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-98.htm">java字符串三种空字符串null、new String()、&#8221;&#8221;的区别</a></p>
                                        <p>下一个：<a href="/html/category/article-100.htm">spring boot web项目</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">vue 配置全局模块、SASS（自动引入模块）</a></h4>
                <p>ProvidePlugin Automatically load modules instead of having to import or require them everywhere 自动引入</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-211.htm">谨慎使用Arrays.asList()</a></h4>
                <p>经过了两个月的【深入学习Java编程方法】课程学习，对Java的一些新特性有了更多的了解。依旧，坑洼遍地。 Java中的Collection类是一个很好用、很常用的类，省去了当年C语言手动链表的麻烦之</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">C\C++ 中 malloc、calloc、realloc 函数的用法</a></h4>
                <p>C\C++ 中 malloc、calloc、realloc 函数的用法 转自：https://www.jianshu.com/p/d6f209b8796d 前言 C\C++提供了底层的内存操作，为程序</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required List parame</a></h4>
                <p>问题：Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required List par</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-208.htm">数据类产品设计和实现思路_在线工具</a></h4>
                <p>数据类产品 对数据类产品(或服务)的需求是信息化发展到一定阶段的必然产物, 在信息化时代, 现实世界的大部分活动都已经(或即将)被投射成数据, 在这个大背景下, 数据产品的作用也越来越大.  对于所有</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">通俗易懂：窗口函数案例详解</a></h4>
                <p>什么是窗口函数 相信很多人都比较熟悉 SQL 聚合函数的语法，比如 count(), sum(), max()等， 窗口函数类似聚合函数，不同的是窗口函数不改变原有的行。 窗口函数是数据分析和数据开发</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-221.htm">关于encodeURI和encodeURIComponent的使用场景</a></h4>
                <p>encodeURI：适用于url跳转时。 encodeURIComponent：适用于url作为参数传递时。 tips：当url作为参数传递时如果没有用encodeURIComponent进行编码，会</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-215.htm">你不知道的Python容器</a></h4>
                <p>你不知道的Python容器  你不知道的Python容器  散列表  ChainMap MappingProxyType   线性表 堆 参考资料    昨天阅读了《Python Tricks: Th</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">Ribbon（一）远程调用RestTemplate</a></h4>
                <p>目录 一、RestTemplate介绍 二、需求说明 1、业务结构及说明 三、模块搭建 1、新建一个maven项目 2、添加ribbon依赖 3、编辑yml 4、主程序 5、编辑RibbonContr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-258.htm">vue实现自定义全局右键菜单_vue.js</a></h4>
                <p>前段时间公司在做一个webIDE项目，其中有对文件树的各种操作，主要通过右键菜单实现，今天就来记录一下怎么在vue项目中实现全局的自定义右键菜单。效果如图所示：  注意： 需要在项目中找到页面整体布局</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>