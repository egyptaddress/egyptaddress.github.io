<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-32.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Go语学习笔记 &#8211; gorm使用 &#8211; 表增删改查 | Web框架Gin（八） - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Go语学习笔记 &#8211; gorm使用 &#8211; 表增删改查 | Web框架Gin（八）</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="%E6%96%B0%E5%A2%9E%E4%BF%AE%E6%94%B9%E6%8E%A5%E5%8F%A3-toc" style="margin-left:0px;"><a href="#%E6%96%B0%E5%A2%9E%E4%BF%AE%E6%94%B9%E6%8E%A5%E5%8F%A3" rel="nofollow">新增修改接口</a></p> <p id="%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%9C%AA%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3-toc" style="margin-left:0px;"><a href="#%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%9C%AA%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3" rel="nofollow">查询所有未逻辑删除接口</a></p> <p id="%E6%A0%B9%E6%8D%AEID%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3-toc" style="margin-left:0px;"><a href="#%E6%A0%B9%E6%8D%AEID%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3" rel="nofollow">根据ID删除接口</a></p> <p id="%E6%97%B6%E9%97%B4%E5%AD%97%E6%AE%B5%E5%BA%8F%E5%88%97%E5%8C%96%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86-toc" style="margin-left:0px;"><a href="#%E6%97%B6%E9%97%B4%E5%AD%97%E6%AE%B5%E5%BA%8F%E5%88%97%E5%8C%96%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86" rel="nofollow">时间字段序列化问题处理</a></p> <p id="%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81-toc" style="margin-left:0px;"><a href="#%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81" rel="nofollow">接口验证</a></p> <p id="%E5%B0%8F%E7%BB%93-toc" style="margin-left:0px;"><a href="#%E5%B0%8F%E7%BB%93" rel="nofollow">小结</a></p> <hr id="hr-toc"/> <p>学习笔记，写到哪是哪。</p> <p>接着上一篇文章：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/zhiweihongyan1/article/details/125482418"  title="Go语学习笔记 - gorm使用 - 数据库配置、表新增 | Web框架Gin（七）_剑客阿良_ALiang的博客-CSDN博客" rel="nofollow">Go语学习笔记 - gorm使用 - 数据库配置、表新增 | Web框架Gin（七）_剑客阿良_ALiang的博客-CSDN博客</a></p> <p>数据库初始化配置已经弄好了，上一篇文章中简单的写了一个demo接口。</p> <p>本篇文章接着上一篇，对表进行增删改查，同时对时间字段进行特殊处理。</p> <p>项目地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/Hy-1990/learn-gin"  title="github地址" rel="nofollow">github地址</a></p> <h1 id="%E6%96%B0%E5%A2%9E%E4%BF%AE%E6%94%B9%E6%8E%A5%E5%8F%A3">新增修改接口</h1> <p>一般我们在实际项目中，会把新增接口和更新修改接口合并，也就是传递参数中带ID的话则为修改，不带ID的话为新增。</p> <p>按照项目结构的编写方式，在student_service下新增AddOrUpdateStudent方法。</p> <p><strong><span style="color:#fe2c24;">方法代码如下：</span></strong></p> <pre><code class="language-Go">//新增或者更新学生 func (t StudentImpl) AddOrUpdateStudent(student *db_entity.Student) rsp.ResponseMsg { 	log.Logger.Info("新增或者更新学生参数:", log.Any("Student", student)) 	_db := mysql.GetDB() 	if student.Id != 0 { 		_db.Model(&amp;student).Updates(student) 	} else { 		_db.Create(&amp;student) 	} 	return *rsp.SuccessMsg("操作成功") }</code></pre> <p><strong><span style="color:#fe2c24;">注意：在接口测试中你会发现传递update_time时间字段解析错误，在下面的小结里面会讲到自定义事件结构体来解决json时间字段序列化问题。</span></strong></p> <h1 id="%E6%9F%A5%E8%AF%A2%E6%89%80%E6%9C%89%E6%9C%AA%E9%80%BB%E8%BE%91%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3">查询所有未逻辑删除接口</h1> <p>在student_service下新增SelectAll方法，对del_flag为0的用户进行查询。</p> <p><strong><span style="color:#fe2c24;">方法代码如下：</span></strong></p> <pre><code class="language-Go">//查询所有学生 func (t StudentImpl) SelectAll() rsp.ResponseMsg { 	log.Logger.Info("查询所有学生") 	_db := mysql.GetDB() 	var _result []db_entity.Student 	_db.Where("del_flag = ?", 0).Find(&amp;_result) 	return *rsp.SuccessMsg(_result) }</code></pre> <h1 id="%E6%A0%B9%E6%8D%AEID%E5%88%A0%E9%99%A4%E6%8E%A5%E5%8F%A3">根据ID删除接口</h1> <p>在student_service下新增根据ID删除数据接口。</p> <p><strong><span style="color:#fe2c24;">方法代码如下：</span></strong></p> <pre><code class="language-Go">//根据id删除学生 func (t StudentImpl) DeleteById(id int32) rsp.ResponseMsg { 	log.Logger.Info("根据id删除学生") 	_db := mysql.GetDB() 	_db.Delete(&amp;db_entity.Student{}, id) 	return *rsp.SuccessMsg("删除成功") }</code></pre> <h1 id="%E6%97%B6%E9%97%B4%E5%AD%97%E6%AE%B5%E5%BA%8F%E5%88%97%E5%8C%96%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86">时间字段序列化问题处理</h1> <p>由于json不能直接序列化time.Time类型，网上有多种解决方法，我这边主要采用自定义时间类型重写序列化方法的方法来解决。</p> <p>在constants目录下，创建common.go文件。</p> <p><span style="color:#fe2c24;"><strong>common.go代码如下：</strong></span></p> <pre><code class="language-Go">package constants  import ( 	"database/sql/driver" 	"fmt" 	"time" )  type HTime struct { 	time.Time }  var ( 	formatTime = "2006-01-02 15:04:05" )  func (t HTime) MarshalJSON() ([]byte, error) { 	formatted := fmt.Sprintf("\"%s\"", t.Format(formatTime)) 	return []byte(formatted), nil }  func (t *HTime) UnmarshalJSON(data []byte) (err error) { 	now, err := time.ParseInLocation(`"`+formatTime+`"`, string(data), time.Local) 	*t = HTime{Time: now} 	return }  func (t HTime) Value() (driver.Value, error) { 	var zeroTime time.Time 	if t.Time.UnixNano() == zeroTime.UnixNano() { 		return nil, nil 	} 	return t.Time, nil }  func (t *HTime) Scan(v interface{}) error { 	value, ok := v.(time.Time) 	if ok { 		*t = HTime{Time: value} 		return nil 	} 	return fmt.Errorf("can not convert %v to timestamp", v) } </code></pre> <p><strong><span style="color:#fe2c24;">注意：</span></strong></p> <p>1、重新定义HTime结构体，对序列化方法进行调整。</p> <p>2、Student结构体中UpdateTime字段数据类型调整为HTime，调整后如下。</p> <pre><code class="language-Go">type Student struct { 	Id         int32           `json:"id" gorm:"column:id;primary_key;AUTO_INCREMENT;comment:'id'"` 	Name       string          `json:"name" gorm:"column:name;type:varchar(255);comment:'名字'"` 	Age        int64           `json:"age" gorm:"column:age;comment:'年龄'"` 	Content    string          `json:"content" gorm:"column:content;type:varchar(255);comment:'描述'"` 	UpdateTime constants.HTime `json:"update_time" time_format:"unix" gorm:"column:update_time"` 	DelFlag    int64           `json:"del_flag" gorm:"column:del_flag;comment:'删除标识'"` }</code></pre> <h1 id="%E6%8E%A5%E5%8F%A3%E9%AA%8C%E8%AF%81">接口验证</h1> <p><strong><span style="color:#fe2c24;">controller层增加接口代码，如下：</span></strong></p> <pre><code class="language-Go">//新增或者修改一个学生信息 func (s StudentController) AddOrUpdateStudent(context *gin.Context) { 	var addOrUpdateStudent db_entity.Student 	log.Logger.Info("AddOrUpdateStudent接口") 	if err := context.ShouldBindJSON(&amp;addOrUpdateStudent); err != nil { 		log.Logger.Panic("参数异常") 	}  	if _, err := json.Marshal(addOrUpdateStudent); err != nil { 		log.Logger.Panic("参数解析异常") 	} 	_rsp := services.StudentServ.AddOrUpdateStudent(&amp;addOrUpdateStudent) 	context.JSON(http.StatusOK, _rsp) }  //查询所有学生 func (s StudentController) SelectAll(context *gin.Context) { 	log.Logger.Info("SelectAll接口") 	_rsp := services.StudentServ.SelectAll() 	context.JSON(http.StatusOK, _rsp) }  //根据id删除学生 func (s StudentController) DeleteById(context *gin.Context) { 	log.Logger.Info("DeleteById接口") 	_id := context.Query("id") 	_a, _ := strconv.ParseInt(_id, 10, 64) 	_rsp := services.StudentServ.DeleteById(int32(_a)) 	context.JSON(http.StatusOK, _rsp) }</code></pre> <p><strong><span style="color:#fe2c24;">router增加路由路径，如下：</span></strong></p> <pre><code class="language-Go">func StudentRouter(r *gin.Engine) { 	r.POST("/student/addOne", controllers.StudentCtrl.StudentAddOne) 	r.POST("/student/addOrUpdateStudent", controllers.StudentCtrl.AddOrUpdateStudent) 	r.GET("/student/selectAll", controllers.StudentCtrl.SelectAll) 	r.DELETE("/student/deleteById", controllers.StudentCtrl.DeleteById) } </code></pre> <p>分别验证一下3个接口。</p> <p><strong><span style="color:#4da8ee;">新增修改接口</span></strong></p> <p><img fetchpriority="high" decoding="async" alt="" height="445" src="http://img.555519.xyz/uploads/20221231/4581787ca0584efc68c58febe359675d.jpg"></p> <p><img decoding="async" alt="" height="25" src="http://img.555519.xyz/uploads/20221231/348af0dbb2093232a805ad4020a6ca1d.jpg"></p> <p><strong><span style="color:#4da8ee;">查询接口</span></strong></p> <p><img decoding="async" alt="" height="834" src="http://img.555519.xyz/uploads/20221231/ae4ea381fc5be491655732926abc198d.jpg"></p> <p><strong><span style="color:#4da8ee;">删除接口</span></strong></p> <p><img loading="lazy" decoding="async" alt="" height="477" src="http://img.555519.xyz/uploads/20221231/5fde0d5432cfdc9b30e756cb32cf23ab.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="115" src="http://img.555519.xyz/uploads/20221231/5353bd990eb5845657564ac6ffad8153.jpg"></p> <h1 id="%E5%B0%8F%E7%BB%93">小结</h1> <p>最近说实话有点忙了，在忙也要抽时间学习啊。后面继续操作一些复杂的查询操作。</p> <p>参考链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_26372385/article/details/107110173"  title="gorm time.Time 使用钩子函数解决反序列化问题_qq_26372385的博客-CSDN博客" rel="nofollow">gorm time.Time 使用钩子函数解决反序列化问题_qq_26372385的博客-CSDN博客</a></p> <p style="text-align:center;"></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-31.htm">Git回退代码到指定版本方法</a></p>
                                        <p>下一个：<a href="/html/category/article-33.htm">MySQL使用索引优化性能_Mysql</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Azure Virtual Desktop创建配置管理详解</a></h4>
                <p>一，引言 Azure 虚拟创面是一项 Azure 服务，可以让我们管理： 　　1）VDI（虚拟桌面基础架构） 　　2）云端的 RDSH：RDSH 是 RDS（远程桌面服务）中的一个角色。这些类型的服务</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</a></h4>
                <p>一 Gin、rest full api和mysql实现增删改查  1 目前架构、含义以及对项目进行go mod gin_restful的项目目录。 每个目录的意思描述： 对gin_restful项目进</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">ElasticSearch学习：springboot集成ElasticSearch</a></h4>
                <p>跟其他的菲关系类型数据库一样集成springboot，在生成代码时，勾选web和非关系数据库里面的ElasticSearch就可以。 demo的git地址我放在下面：git es demo 代码 这里</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">vue动态获取ref方式</a></h4>
                <p>&lt;div v-for="(item,index) in list" :key="index"              :class=" circleAnimation === 1 ? 'bal</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-231.htm">Java中时间类使用方法总结</a></h4>
                <p>//java.util.Date; Date类用法Date date = new Date();System.out.println(date);System.out.println("=======</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">MySQL——union(合并结果集)、limit(获取部分数据)、关于MySQL中常用数据类型</a></h4>
                <p>博客目录 1、union(合并结果集) 2、limit(获取一张表中某部分数据) 3、表——创建表、删除表 4、关于MySQL中的数据类型  一、union(合并结果集)  将两个查询结果合并(可以是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Spark连接Hive，进行Hive数据表的读写操作</a></h4>
                <p>基础环境   Hadoop安装-1，hadoop安装-2  spark安装 Hive安装   配置  将Hive的conf目录下的hive-site-xml文件拷贝到spark的conf目录下； 将H</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">VS code vue安装Vetur后还是没有高亮显示之离线安装插件</a></h4>
                <p>前言 因为公司项目是在云桌面开发，没有网络，需要在有网络的电脑安装vscode及插件然后压缩复制到云桌面，但是 安装了Vetur 压缩过去后vue文件代码还是没有高亮，试过很多种方法，但是都无效。然后</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">最大生成树Bad Cowtractors_在线工具</a></h4>
                <p>题目链接：http://poj.org/problem?id=2377；     仔细阅读题目，你会发现一个词-" as large as possible"，这个词的意思是尽可能最大；  来，我们翻</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">分布式服务请求报错：Read timed out executing POST http://businessApi/app/app/login</a></h4>
                <p>问题描述： 发送POST请求，控制台打印： 错误信息:Read timed out executing POST http://xxx 解决方法： 在配置文件中添加超时配置即可</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>