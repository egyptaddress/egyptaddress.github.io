<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-246.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>request和response——请求响应对象 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">request和response——请求响应对象</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="请求对象request">请求对象——request</h1> <h2 id="获取get请求的值">获取get请求的值</h2> <blockquote> <p>一次请求，返回一个响应。<br /> 地址栏：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://127.0.0.1:8000/day3/get_request?lan=python"  target="_blank" rel="nofollow">http://127.0.0.1:8000/day3/get_request?lan=python</a><br /> 问号：代表请求参数</p> </blockquote> <blockquote> <p>需求：拿到请求参数</p> </blockquote> <h3 id="传入单个值">传入单个值</h3> <pre><code class="language-python"># views.py def get_request(request):     return HttpResponse('getrequest') # urls.py path('getrequest',get_request),</code></pre> <p>想要拿到地址栏中的参数<br /><code>print(request.GET)</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/edce18ec10e3a70c3f7b50b558ff8f91.jpg" alt="request和response——请求响应对象"><br /> 发现打印出来的是字典，所以——<br /><code>print(request.GET.get('lan'))</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/21bddde9a8508d6c45afc1191bba4e3a.jpg" alt="request和response——请求响应对象"></p> <blockquote> <p><strong>【知识点】</strong><br /> 打印字典中的值，有两种办法：<br /> 1，print(request.GET.get('lan'))——（一般用这个）假设key不存在，返回空值None<br /> 2，print(request.GET['lan'])——key不存在，会抛出异常</p> </blockquote> <h3 id="传入多个值">传入多个值</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/1490fd63ff08d47e3e4d30082deca62f.jpg" alt="request和response——请求响应对象"><br /><code>print(request.GET.getlist('lan'))</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/e65701e970c5c59bfe5314329b2e6eca.jpg" alt="request和response——请求响应对象"></p> <h3 id="获取路由地址">获取路由地址</h3> <p>如何来到get_request函数的（这个视图函数）<br /><code>print(request.path_info)</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/7e3ab109f55aa7ba185a7fe482c209f1.jpg" alt="request和response——请求响应对象"></p> <h3 id="获取请求方式getpost">获取请求方式(get/post)</h3> <p><code>print(request.method)</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b4e073a471958ed8d65761502731ec16.jpg" alt="request和response——请求响应对象"></p> <blockquote> <p><strong>【知识点】</strong><br /> Django中地址栏默认是get请求，如果要发送post请求，需要把中间件的（选中的）注释掉<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/fea2c2a5b60d05c8492237511586afcf.jpg" alt="request和response——请求响应对象"></p> </blockquote> <blockquote> <p><strong>【知识点】</strong><br /> post请求，往表单中传入数据（用的postman）<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a54c50ce8c95d845bbe52a6fdcf884c0.jpg" alt="request和response——请求响应对象"></p> </blockquote> <h2 id="获取post请求的值">获取post请求的值</h2> <h3 id="获取value">获取value</h3> <p>假设表单中的值是这样的：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/89c6dd2c61fe96c05df6cf22fd66f0d2.jpg" alt="request和response——请求响应对象"><br /> 先看看request.POST打印出什么<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/382c934c4259fca399b8f5ffffe2e5e3.jpg" alt="request和response——请求响应对象"><br /> 拿到request.POST.get('b_title')<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b3b5a114b2ec77a0fc64db37a9367d7d.jpg" alt="request和response——请求响应对象"></p> <h3 id="表单上传">表单上传</h3> <p><code>print(request.FILES)</code><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/294fed407d8d3dc7060447b38ade7cca.jpg" alt="request和response——请求响应对象"><br /> (files里面对应的是文件对象）</p> <h2 id="根据请求方式选择路由">根据请求方式选择路由</h2> <pre><code>path('testgetpost', test_get_post), # 根据不同的请求方式做不同的处理 def test_get_post(request):     if request.method == 'GET':         return HttpResponse('get请求')     elif request.method == 'POST':         # li = [1,2]         # print(li[2])         return HttpResponse('post请求')     else:         return HttpResponse(request.method)</code></pre> <h1 id="响应对象response">响应对象——response</h1> <h2 id="常见的状态码">常见的状态码</h2> <blockquote> <p>200（响应成功）<br /> 500（python代码有问题）<br /> 404(资源找不到)<br /> 405（请求不被允许）<br /> 301 302 （重定向，浏览器的行为）</p> </blockquote> <h2 id="给定响应头">给定响应头</h2> <h3 id="默认返回的头信息">默认返回的头信息</h3> <pre><code> path('test_response_header',test_response_header), def test_response_header(request):     ret = HttpResponse('test_response_header')     return ret</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/d5648a943c90f0e9d35f3ee371814e03.jpg" alt="request和response——请求响应对象"></p> <h3 id="自定义头信息">自定义头信息</h3> <pre><code> path('test_response_header',test_response_header), def test_response_header(request):     # content-type是html类型     ret = HttpResponse('test_response_header')     # 自定义头信息     ret['msg'] = 'success'     ret['code'] = 'ok'     return ret</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b16df0e8b62bfbf9a62b9414dc170ff7.jpg" alt="request和response——请求响应对象"></p> <h2 id="其他响应对象">其他响应对象</h2> <blockquote> <p>json 数据格式 解决前后端数据不认识的问题 {'key':value}<br /> 前后不分离项目 ：前后端全部编写，会经常使用HttpResponse对象<br /> 前后分离项目时使用: 会经常使用JsonResponse对象</p> </blockquote> <h3 id="json-数据格式">json 数据格式</h3> <p>用途：一般做前后分离项目时使用</p> <pre><code>path('test_json_response', test_json_response), def test_json_response(request):     # content-type是json类型     return JsonResponse(request.GET)</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a448942a20a2025328e32ead59ee6cab.jpg" alt="request和response——请求响应对象"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/bb52fca78994d1aa5a70f90d8902ade9.jpg" alt="request和response——请求响应对象"></p> <h3 id="文件处理">文件处理</h3> <pre><code>path('test_file_response',test_file_response),  def test_file_response(request):     return FileResponse(open('manage.py','rb'))</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/ea961e8ae99f0f12ee260ae4bad2536d.jpg" alt="request和response——请求响应对象"></p> <h3 id="return-jsonresponse和return-fileresponse的区别">return JsonResponse和return FileResponse的区别</h3> <blockquote> <p>return JsonResponse和return：返回值类型是Json<br /> return FileResponse：返回值类型是文件的类型</p> </blockquote> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-245.htm">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</a></p>
                                        <p>下一个：<a href="/html/category/article-247.htm">使用类在C ++中实现矢量数量</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-252.htm">Azure Virtual Desktop创建配置管理详解</a></h4>
                <p>一，引言 Azure 虚拟创面是一项 Azure 服务，可以让我们管理： 　　1）VDI（虚拟桌面基础架构） 　　2）云端的 RDSH：RDSH 是 RDS（远程桌面服务）中的一个角色。这些类型的服务</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-218.htm">利用Python实现RSA加密解密方法实例_python</a></h4>
                <p>目录  前言 一、安装模块 二、生成密钥对 三、加密 四、解密 五、完整代码 总结    前言  加密技术在数据安全存储，数据传输中发挥着重要作用，能够保护用户隐私数据安全，防止信息窃取。RSA是一种</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">SpringBoot实战数据访问整合Mybatis和Redis</a></h4>
                <p>前言 在开发中我们通常会对数据库的数据进行操作，SpringBoot对关系性和非关系型数据库的访问操作都提供了非常好的整合支持。SpringData是spring提供的一个用于简化数据库访问、支持云服</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-224.htm">Asp.Net在线预览Word文档的解决方案与思路</a></h4>
                <p>前几天有个老项目找到我，有多老呢？比我工作年限都长，见到这个项目我还得叫一声前辈。 这个项目目前使用非常稳定，十多年了没怎么更新过，现在客户想加一个小功能：在线预览Word文档。 首先想到的是用第三方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">docker存储路径修改</a></h4>
                <p>docker修改对应的存储路径 修改daemon.json的内容不进行复述。 假设你已经编辑好/etc/docker/daemon.json文件的graph配置，要将其从d01修改到d02 {   "</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-203.htm">C++逆向 可变参数Hook</a></h4>
                <p>目录  C++逆向 可变参数Hook  0x00 前言： 0x01 C++可变参数：  可变参数简介 可变参数代码实战   0x02 逆向分析C++可变参数原理 0x03 printf Hook实战 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-208.htm">vue3.0下如何使用mapState，mapGetters和mapActions</a></h4>
                <p>vue3.0下如何使用mapState，mapGetters和mapActions      1、新建useMapper.js 2、新建useState.js 3、新建useGetters.js 4、</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">Vue3项目中的骨架屏</a></h4>
                <p>实现场景:刚进入页面的时候,需要后端接口回传的数据,还没有回来,为了客户有更好的体验,需要设置骨架屏,效果图如下:  &nbsp;实现步骤: 1.设置通用组件骨架屏(可以设置的属性:高，宽，背景颜色，</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-242.htm">SpringSecurity核心服务详解</a></h4>
                <p>现在我们对 Spring Security 体系结构及其核心类有了一个高层次的概述，让我们更仔细地看一两个核心接口及其实现，特别是AuthenticationManager&nbsp;、UserDet</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>