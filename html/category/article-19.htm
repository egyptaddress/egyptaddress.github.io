<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-19.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 id="理想的代码优化方式">理想的代码优化方式</h1> <p>团队日常协作中，自然而然的会出现很多重复代码，根据这些代码的种类，之前可能会以以下方式处理</p> <table> <thead> <tr> <th style="text-align: left">方式</th> <th style="text-align: left">描述</th> <th style="text-align: left">应用时可能产生的问题</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">硬编码</td> <td style="text-align: left">多数新手，或逐渐腐坏的项目会这么干，会直接复制之前实现的代码</td> <td style="text-align: left">带来的问题显而易见的多，例如架构会逐渐随时间被侵蚀，例外越来越多</td> </tr> <tr> <td style="text-align: left">提取函数</td> <td style="text-align: left">提取成为函数，然后复用</td> <td style="text-align: left">提取函数，然后复用，会比直接硬编码好些，但是仍然存在大量因“例外”而导致增加参数、增加函数重载的情况</td> </tr> <tr> <td style="text-align: left">模板生成器</td> <td style="text-align: left">CodeSmith/T4等</td> <td style="text-align: left">因为是独立进程，所以对于读取用户代码或项目，实现难度较高，且需要现有用户项目先生成成功，再进行生成 ，或者是完全基于新项目</td> </tr> <tr> <td style="text-align: left">代码片段</td> <td style="text-align: left">VS自带的代码片段功能</td> <td style="text-align: left">无法对复杂的环境或条件做出响应</td> </tr> <tr> <td style="text-align: left">AOP框架</td> <td style="text-align: left">面向切面编程，可以解决很多于用户代码前后增加操作的事情</td> <td style="text-align: left">但是大多AOP框架都是基于透明代理形式实现的，对于相互调用较多的代码，但形成性能压力，而且因为要符合透明代理的规则，所以要提供相应的子类或接口。</td> </tr> </tbody> </table> <h1 id="基于rosyln的编译时插入代码">基于Rosyln的编译时插入代码</h1> <p>但以上这几种，AOP算是最理想的方式，但是感觉上还可以有更好的解决方案。</p> <p>直到读到了这篇文章<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">Introducing C# Source Generators</a>，文中提供了一种新的解决方案，即通过<code>Roslyn</code>的<code>Source Generator</code>在编译时直接读取当前项目中的语法树，处理并生成的新代码，然后在编译时也使用这些新代码。</p> <p>那么如果可以读取现有代码的语法树，通过读取代码中的标记，那么在代码生成过程中是否就能直接生成。<br /> 实现如下效果：<br /><strong>项目中的源代码<code>Program.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         return a + b;     } }</code></pre> <p><strong>自动根据<code>LogAttribute</code> 自动编译成的代码<code>Program.g.cs</code></strong></p> <pre><code class="language-C#">internal class Program {     [Log]     private static int Add( int a, int b )     {         Console.WriteLine("Program.Add(int, int) 开始运行.");         int result;         result = a + b;         Console.WriteLine("Program.Add(int, int) 结束运行.");         return result;     } }</code></pre> <p>当然<code>LogAttribute</code>中需要去实现插入代码。<br /> 然后项目自动使用新生成的<code>Program.g.cs</code>进行编译。这样就实现了基于编译时的AOP。</p> <p>即实现以下流程<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/b60d3f4115a4368be8e27fe0c26fc6cd.jpg" alt="使用基于Roslyn的编译时AOP框架来解决.NET项目的代码复用问题"></p> <h1 id="使用metalama实现以上流程">使用Metalama实现以上流程</h1> <p>经过寻找，发现其实已经有框架可以实现我上面说的流程了，也就是在编译时实现代码的插入。<br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a> 。</p> <p>下面作一个简单示例</p> <ol> <li>创建一个.NET6.0的控制台应用，我这里命名为<code>LogDemo</code>,<br /> 其中的入口文件<code>Program.cs</code></li> </ol> <pre><code class="language-C#">namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 这里写一个简单的方法，一会对这个方法进行代码的插入         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     } }</code></pre> <ol start="2"> <li>在项目中使用<strong>Metalama</strong></li> </ol> <p>通过引用包<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.nuget.org/packages/Metalama.Framework"  target="_blank" rel="nofollow">https://www.nuget.org/packages/Metalama.Framework</a>, 注意Metalama当前是Preview版本，如果通过可视化Nuget管理器引入，需要注意勾选<strong>包含预发行版</strong></p> <pre><code class="language-ps">dotnet add package Metalama.Framework --version 0.5.7-preview</code></pre> <ol start="3"> <li>编写一个AOP的Attribute</li> </ol> <p>在项目中引入<code>Metalama.Framework</code>后无需多余配置或代码，直接编写一个AOP的<code>Attribute</code></p> <pre><code class="language-C#">using Metalama.Framework.Aspects;  namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             var result = a + b;             Console.WriteLine("Add" + result);             return result;         }     }     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod()         {             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 开始运行.");             var result = meta.Proceed();             Console.WriteLine(meta.Target.Method.ToDisplayString() + " 结束运行.");             return result;          }     } }</code></pre> <ol start="4"> <li>执行结果如下</li> </ol> <pre><code>Program.Add(int, int) 开始运行. Add3 Program.Add(int, int) 结束运行. 3</code></pre> <ol start="5"> <li>生成的程序集进行反编译，得到的代码如下：</li> </ol> <pre><code class="language-C#">using Metalama.Framework.Aspects; namespace LogDemo {     public class Program     {         public static void Main(string[] args)         {             var r = Add(1, 2);             Console.WriteLine(r);         }         // 在这个方法中使用了下面的Attribute         [LogAttribute]         private static int Add(int a, int b)         {             Console.WriteLine("Program.Add(int, int) 开始运行.");             int result_1;             var result = a + b;             Console.WriteLine("Add" + result);             result_1 = result;             Console.WriteLine("Program.Add(int, int) 结束运行.");             return result_1;         }     } #pragma warning disable CS0067     // 这里是增加的 Attribute     public class LogAttribute : OverrideMethodAspect     {         public override dynamic? OverrideMethod() =&gt;          throw new System.NotSupportedException("Compile-time-only code cannot be called at run-time.");     } #pragma warning restore CS0067 }</code></pre> <h1 id="总结">总结</h1> <p>这样就完全实现了我之前想要的效果，当然使用<code>Metalama</code>还可以实现很多能极大地提高生产力的功能，它不仅可以对方法进行改写，也可以对属性、字段、事件、甚至是类、命名空间进行一些操作 。</p> <h1 id="引用">引用</h1> <p>Introducing C# Source Generators：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/"  target="_blank" rel="nofollow">https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/</a><br /> Metalama官网：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postsharp.net/metalama"  target="_blank" rel="nofollow">https://www.postsharp.net/metalama</a></p> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-18.htm">c++堆内存默认大小_线上内存暴涨问题定位和解决</a></p>
                                        <p>下一个：<a href="/html/category/article-20.htm">Shell基础管道符介绍</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-234.htm">数据传输POST心法分享，做前端的你还解决不了这个bug？</a></h4>
                <p>背景 随时随地给大家提供技术支持的葡萄又来了。这次的事情是这样的，提供demo属于是常规操作，但是前两天客户突然反馈压缩传输模块抛出异常，具体情况是压缩内容传输到服务端后无法解压。 由于代码没有发生任</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">Java 集合框架ArrayList 储存自定义数组</a></h4>
                <p>package LinkedList;  import java.util.ArrayList; import java.util.Iterator;  import p.bean.Person;  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-246.htm">request和response——请求响应对象</a></h4>
                <p>请求对象——request 获取get请求的值  一次请求，返回一个响应。 地址栏：http://127.0.0.1:8000/day3/get_request?lan=python 问号：代表请求参</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-232.htm">使用JSR-303 Validation后端验证</a></h4>
                <p>&nbsp; 一、JSR-303简介：官网  JSR-303 是 JAVA EE 6 中的一项子规范，叫做 Bean Validation，官方参考实现是Hibernate Validator。 此实</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-243.htm">指针的高级运用——指针进阶</a></h4>
                <p>文章目录  学习目标 1.1 动态内存分配   引子 1.1动态分配内存函数 1.2malloc函数 1.3 calloc 函数 1.4 realloc函数 1.5 free函数 1.6 动态内存编程</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-210.htm">Code For Better 谷歌开发者之声—— 在 Windows 10 上对 Google Chrome 进行故障排除</a></h4>
                <p>???? 个人网站:【 海拥】【小霸王游戏机】 ???? 风趣幽默的前端学习课程：????28个案例趣学前端 ???? 想寻找共同学习交流、摸鱼划水的小伙伴，请点击【摸鱼学习交流群】 ???? 免费且</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-212.htm">ElasticSearch学习：springboot集成ElasticSearch</a></h4>
                <p>跟其他的菲关系类型数据库一样集成springboot，在生成代码时，勾选web和非关系数据库里面的ElasticSearch就可以。 demo的git地址我放在下面：git es demo 代码 这里</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-240.htm">python神经网络使用Keras构建RNN训练_python</a></h4>
                <p>目录  Keras中构建RNN的重要函数  1、SimpleRNN 2、model.train_on_batch  全部代码     Keras中构建RNN的重要函数  1、SimpleRNN Sim</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-245.htm">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</a></h4>
                <p>一 Gin、rest full api和mysql实现增删改查  1 目前架构、含义以及对项目进行go mod gin_restful的项目目录。 每个目录的意思描述： 对gin_restful项目进</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>