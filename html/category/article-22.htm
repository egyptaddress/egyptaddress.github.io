<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-22.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>C语言井字棋游戏 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">C语言井字棋游戏</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <p id="main-toc"><strong>目录</strong></p> <p id="%E5%A4%B4%E6%96%87%E4%BB%B6game.h-toc" style="margin-left:40px;"><a href="#%E5%A4%B4%E6%96%87%E4%BB%B6game.h" rel="nofollow">1.头文件game.h</a></p> <p id="%E6%BA%90%E6%96%87%E4%BB%B6-toc" style="margin-left:40px;"><a href="#%E6%BA%90%E6%96%87%E4%BB%B6" rel="nofollow">2.源文件</a></p> <p id="%E4%B8%BB%E5%87%BD%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E4%B8%BB%E5%87%BD%E6%95%B0" rel="nofollow">2.1主函数</a></p> <p id="%E5%AD%90%E5%87%BD%E6%95%B0-toc" style="margin-left:80px;"><a href="#%E5%AD%90%E5%87%BD%E6%95%B0" rel="nofollow">2.2子函数</a></p> <p id="%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%8D%E8%B6%B3-toc" style="margin-left:40px;"><a href="#%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%8D%E8%B6%B3" rel="nofollow">3.程序的不足</a></p> <h2 id="%E5%A4%B4%E6%96%87%E4%BB%B6game.h">1.头文件game.h</h2> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可取点：在头文件中，使用#define定义行和列类，在后续的程序中行和列没有具体数值，全部通过ROW和COL表示。这样以后想要对棋盘的大小进行修改的时候，直接在头文件中对#define进行修改即可。</p> <p>#define ROW 3<br /> #define COL 3</p> <pre><code class="language-cs">#pragma once  #define ROW 3 #define COL 3  #include&lt;stdio.h&gt;  //菜单函数 void menu(); //是否继续游戏菜单 void ContinueMenu(); //游戏函数 void game(); //初始化棋盘 void InitBoard(char Board[ROW][COL], int row, int col); //展示棋盘 void DisplayBoard(char Board[ROW][COL], int row, int col); //玩家下棋 void PlayerMove(char Board[ROW][COL], int row, int col); //电脑下棋 void ComputerMove(char Board[ROW][COL], int row, int col); //判断胜、负或平局 char Judge(char Board[ROW][COL], int row, int col); //判断棋盘是否下满了 int Full(char Board[ROW][COL], int row, int col);</code></pre> <h2 id="%E6%BA%90%E6%96%87%E4%BB%B6">2.源文件</h2> <h3 id="%E4%B8%BB%E5%87%BD%E6%95%B0">2.1主函数</h3> <pre><code class="language-cs">//井字棋游戏 #include"game.h"  int main() { 	int input = 0; 	int con = 0; 	do 	{ 		menu(); 		printf("请选择："); 		scanf("%d", &amp;input); 		switch (input) 		{ 		case 1: 			printf("开始游戏\n"); 			game(); 			ContinueMenu(); 			printf("请选择："); 			scanf("%d", &amp;con); 			break; 		case 2: 			printf("退出游戏\n"); 			break; 		default: 			printf("输入无效，请重新选择\n"); 			break; 		} 	} 	while (con == 1 ||(input != 2 &amp;&amp; input != 1)); 	return 0; }</code></pre> <h3 id="%E5%AD%90%E5%87%BD%E6%95%B0">2.2子函数</h3> <p><strong>要点</strong></p> <p>&nbsp; &nbsp; &nbsp; &nbsp;1. 子函数【2.2棋盘生成函数】，生成的棋盘样式如下图，不知道这样直观的展示出来，会方便理解该程序吗？</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230110/22d7459fb38f994a19ee7524ebbe2e43.jpg"></p> <p style="text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 2.子函数【2.3玩家下棋函数】中</p> <p style="text-align:justify;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因为数组的起始位置为[0][0],但大众一般认为的起始位置为[1][1],所以要进行+1、-1调整，以符合大众的认知。<br /> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ((i &gt; 0 &amp;&amp; i &lt; row+1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; col+1) &amp;&amp; (Board[i-1][j-1] == ' '))<br /> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<!-- --><br /> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Board[i-1][j-1] = 'O';<br /> &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ...</p> <p style="text-align:justify;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果输入的坐标无效，就要重新输入，为此设置了一个标志flag。如果flog=0，说明输入的坐标无效（位置被占用或超出棋盘范围），需要重新输入。</p> <p style="text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 3.生成随机数</p> <p style="text-align:justify;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;利用时间戳生成随机数，需要的头文件为#include&lt;stdlib.h&gt;和#include&lt;time.h&gt;，使用rand()函数生成随机数之前，需要先使用srand()函数，生成随机数种子。</p> <pre><code class="language-cs">#include&lt;stdlib.h&gt;  #include&lt;time.h&gt;  int ran;  srand((unsigned int)time(NULL));  ran = rand();</code></pre> <p style="margin-left:0;text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 4.【2.5判断胜负函数】</p> <p style="margin-left:0;text-align:justify;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果是玩家胜利，就返回玩家使用的符号‘O’</p> <p style="margin-left:0;text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 如果是电脑胜利，就返回电脑使用的符号‘X’</p> <p style="margin-left:0;text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 如果是棋盘满了且未分出胜负，就返回‘E’</p> <p style="margin-left:0;text-align:justify;">&nbsp; &nbsp; &nbsp; &nbsp; 如果以上三种情况都不是，就返回'C'，继续进行游戏</p> <pre><code class="language-cs">#define ROW 3 #define COL 3 #include&lt;stdio.h&gt; #include&lt;time.h&gt; #include&lt;stdlib.h&gt;  //1.菜单函数 void menu() { 	printf("************************\n"); 	printf("*****1.Play  2.Exit*****\n"); 	printf("************************\n"); }   //2.游戏函数 void game() { 	char result; 	//生成棋盘 	char Board[ROW][COL] = { 0 }; 	//初始化棋盘 	InitBoard(Board, ROW, COL); 	//展示棋盘 	DisplayBoard(Board, ROW, COL); 	while (1) 	{ 		//玩家下棋 		PlayerMove(Board, ROW, COL); 		DisplayBoard(Board, ROW, COL); 		//判断胜负 		result = Judge(Board, ROW, COL); 			if (result != 'C') 		{ 			break; 		} 		//电脑下棋 		ComputerMove(Board, ROW, COL); 		DisplayBoard(Board, ROW, COL); 		//判断胜负 		result = Judge(Board, ROW, COL); 		if (result != 'C') 		{ 			break; 		} 	} 	if (result == 'O') 		printf("玩家获胜\n"); 	else if (result == 'X') 		printf("电脑获胜\n"); 	else 		printf("平局\n"); }   //2.1棋盘初始化函数 void InitBoard(char Board[ROW][COL],int row,int col) { 	int i, j; 	for (i = 0; i &lt; row; i++) 	{ 		for (j = 0; j &lt; col; j++) 		{ 			Board[i][j] = ' '; 		} 	} }  //2.2棋盘生成函数 void DisplayBoard(char Board[ROW][COL], int row, int col) { 	int i, j; 	for (i = 0; i &lt; row; i++) 	{ 		for (j = 0; j &lt; col; j++) 		{ 			//1.打印一行数据 			printf(" %c ", Board[i][j]); 			if (j &lt; col - 1) 				printf("|"); 		} 		printf("\n"); 		//2.打印分割线 		if (i &lt; row - 1) 		{ 			for (j = 0; j &lt; col; j++) 			{ 				printf("---"); 				if (j &lt; col - 1) 				printf("|"); 			} 			printf("\n"); 		} 	} }  //2.3玩家下棋 void PlayerMove(char Board[ROW][COL], int row, int col) { 	int i, j; 	int flag = 1; 	printf("玩家回合\n"); 	do  	{ 		printf("请输入坐标："); 		scanf("%d%d", &amp;i, &amp;j);         //因为数组的起始位置为[0][0],但大众一般认为的起始位置为[1][1],所以要进行+1、-1调整 		if ((i &gt; 0 &amp;&amp; i &lt; row+1 &amp;&amp; j &gt; 0 &amp;&amp; j &lt; col+1) &amp;&amp; (Board[i-1][j-1] == ' ')) 		{ 			Board[i-1][j-1] = 'O'; 			flag = 1; 		} 		else 		{             //如果输入的坐标无效，就要重新输入，为此设置了一个标志flag 			printf("坐标无效，请重新输入\n"); 			flag = 0; 		} 	} 	while (flag == 0); }  //2.4电脑下棋 void ComputerMove(char Board[ROW][COL], int row, int col) { 	int i, j; 	int flag = 1; 	printf("电脑回合\n"); 	do  	{ 		//通过时间生成随机位置 		srand((unsigned int)time(NULL));         //通过模row取余数，就能让i在0~row-1之间浮动；j同理 		i = rand() % row; 		j = rand() % col; 		if (Board[i][j] == ' ') 		{ 			Board[i][j] = 'X'; 			flag = 1; 		} 		else 			flag = 0; 	} 	while (flag == 0); }  //2.5判断胜负函数 char Judge(char Board[ROW][COL], int row, int col) { 	int i, j; 	//判断行是否连成三个 	for (i = 0; i &lt; row; i++) 	{ 		int count = 0; 		for (j = 0; j &lt; col-1; j++) 		{ 			if ((Board[i][0] != ' ') &amp;&amp; (Board[i][j] == Board[i][j + 1])) 			{ 				count++; 			} 		} 		if (col-1 == count) 			return Board[i][0]; 	} 	//判断列是否连成三个 	for (j = 0; j &lt; col; j++) 	{ 		int count = 0; 		for (i = 0; i &lt; row-1; i++) 		{ 			if ((Board[0][j] != ' ') &amp;&amp; (Board[i][j] == Board[i+1][j])) 			{ 				count++; 			} 		}         //三个元素相等，计数器的数字应该比行数少1。可以用两刀切三段理解。 		if (row - 1 == count) 			return Board[0][j]; 	} 	//判断斜线是否连成三个 	if (Board[0][0] == Board[1][1] &amp;&amp; Board[2][2] == Board[1][1] &amp;&amp; Board[0][0] != ' ') 	return Board[0][0]; 	if (Board[0][2] == Board[1][1] &amp;&amp; Board[2][0] == Board[1][1] &amp;&amp; Board[0][2] != ' ') 	return Board[0][2]; 	//判断是否平局 	if (1 == Full(Board, ROW, COL)) 	{ 		return 'E'; 	} 	return 'C'; }  //2.5.1判断棋盘是否满了函数 int Full(char Board[ROW][COL], int row, int col) { 	int i, j; 	for (i = 0; i &lt; row; i++) 	{ 		for (j = 0; j &lt; col; j++) 		{ 			if (Board[i][j] == ' ') 				return 0; 		} 	} 	return 1; }    //3.继续游戏函数 void ContinueMenu() { 	printf("************************\n"); 	printf("游戏已结束，是否继续游戏\n"); 	printf("***1.Continue  2.Exit***\n"); 	printf("************************\n"); }  </code></pre> <h2 id="%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%8D%E8%B6%B3">3.程序的不足</h2> <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;程序的不足出现在子函数【2.4电脑下棋】函数中。在实际游玩的发现，在游戏的后期，电脑下棋的速度会变慢。我分析原因如下：</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 1.电脑下棋的位置完全靠随机数生成，这就导致在游玩的后期，当大多数格子被占用时，电脑往往需要进行多次循环，才能随机出新的位置，耗费计算资源。</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 2.完全随机的落子，也导致电脑下棋没什么策略性，导致玩家很容易胜利，游戏的趣味性降低。&nbsp;&nbsp;</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; 如果大家有好的解决方案，欢迎留言！</p> <pre><code class="language-cs">//2.4电脑下棋 void ComputerMove(char Board[ROW][COL], int row, int col) { 	int i, j; 	int flag = 1; 	printf("电脑回合\n"); 	do  	{ 		//通过时间生成随机位置 		srand((unsigned int)time(NULL));         //通过模row取余数，就能让i在0~row-1之间浮动；j同理 		i = rand() % row; 		j = rand() % col; 		if (Board[i][j] == ' ') 		{ 			Board[i][j] = 'X'; 			flag = 1; 		} 		else 			flag = 0; 	} 	while (flag == 0); }</code></pre> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-21.htm">vue+element-ui实现侧边菜单栏与标签页联动</a></p>
                                        <p>下一个：<a href="/html/category/article-23.htm">使用 bitnami/postgresql-repmgr 镜像快速设置 PostgreSQL HA</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">MySQL——union(合并结果集)、limit(获取部分数据)、关于MySQL中常用数据类型</a></h4>
                <p>博客目录 1、union(合并结果集) 2、limit(获取一张表中某部分数据) 3、表——创建表、删除表 4、关于MySQL中的数据类型  一、union(合并结果集)  将两个查询结果合并(可以是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Spark连接Hive，进行Hive数据表的读写操作</a></h4>
                <p>基础环境   Hadoop安装-1，hadoop安装-2  spark安装 Hive安装   配置  将Hive的conf目录下的hive-site-xml文件拷贝到spark的conf目录下； 将H</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-249.htm">Unity 内置渲染管线转URP</a></h4>
                <p>一、CG 替换 HLSL   未使用光照计算的shader升级后不做修改仍然可以使用，但是可能会不兼容SRP Batcher，所以仍然需要修改，使用了光照计算的shader必须要修改。   SubSh</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">Java 集合框架ArrayList 储存自定义数组</a></h4>
                <p>package LinkedList;  import java.util.ArrayList; import java.util.Iterator;  import p.bean.Person;  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">聊聊系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响</a></h4>
                <p>　　大家好，我是痞子衡，是正经搞技术的痞子。今天痞子衡给大家介绍的是系统看门狗WDOG1在i.MXRT1xxx系统启动中的应用及影响。 　　软件看门狗模块（WDOG）在 MCU 应用里可以说是非常基础</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-238.htm">JavaScript中querySelector和getElementByld(getXXXBy XX)的区别</a></h4>
                <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在日常开发中，我学使用原生JavaScript获取元素的时候，最常用的方法就document.getEl</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">vue 使用echarts绘制折线图</a></h4>
                <p>&lt;template&gt;     &lt;div&gt;         &lt;!-- 方法一，注册echarts到vue的原型对象中，指定某个div作为echarts的画布 --&gt; </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-236.htm">「BUAA OO Unit 2 HW8」第二单元总结_在线工具</a></h4>
                <p>「BUAA OO Unit 2 HW8」第二单元总结   目录   「BUAA OO Unit 2 HW8」第二单元总结  Part 0 前言  Part 1 第五次作业  1.1 作业要求 1.2 </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></h4>
                <p>文章目录        前言 集中配置组件SpringCloudConfig   1.SpringCloudConfig 简介 2.配置客户端 3.配置服务端 4.测试   消息总线 SpringCl</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>