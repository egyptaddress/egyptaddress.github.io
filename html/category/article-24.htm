<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-24.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>mybatis mysql 多租户_详解基于Mybatis-plus多租户实现方案 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">mybatis mysql 多租户_详解基于Mybatis-plus多租户实现方案</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="htmledit_views"> <div style="font-size:16px;"> <p>一、引言</p> <p>小编先解释一下什么叫多租户，什么场景下使用多租户。</p> <p>多租户是一种软件架构技术，在多用户的环境下，共有同一套系统，并且要注意数据之间的隔离性。</p> <p>举个实际例子：小编曾经开发过一套支付宝程序，这套程序应用在不同的小程序上，当使用者访问不同，并且进入相对应的小程序页面，小程序则会把用户相关数据传输到小编这里。在传输的时候需要带上小程序标识(租户ID)，以便小编将数据进行隔离。</p> <p>当不同的租户使用同一套程序，这里就需要考虑一个数据隔离的情况。</p> <p>数据隔离有三种方案：</p> <p>1、独立数据库：简单来说就是一个租户使用一个数据库，这种数据隔离级别最高，安全性最好，但是提高成本。</p> <p>2、共享数据库、隔离数据架构：多租户使用同一个数据裤，但是每个租户对应一个Schema(数据库user)。-</p> <p>3、共享数据库、共享数据架构：使用同一个数据库，同一个Schema，但是在表中增加了租户ID的字段，这种共享数据程度最高，隔离级别最低。</p> <p>二、具体实现</p> <p>这里采用方案三，即共享数据库，共享数据架构，因为这种方案服务器成本最低，但是提高了开发成本。</p> <p>实现架构逻辑：</p> <p align="center"><img decoding="async" src="http://img.555519.xyz/uploads3/20220605/e37f329a5ca6553b0c7ee638ce66cdbc.jpg" alt="mybatis mysql 多租户_详解基于Mybatis-plus多租户实现方案"></p> <p>Mybatis-plus实现多租户方案</p> <p>Mybatis-plus就提供了一种多租户的解决方案，实现方式是基于分页插件(拦截器)进行实现的；</p> <p>第一步：在应用添加维护一张tenant(租户表)，在需要进行隔离的数据表上新增租户id；</p> <p>第二步：实现TenantHandler接口并实现它的方法：</p> <p>public interface TenantHandler {<!-- --></p> <p>/**</p> <p>* 获取租户 ID 值表达式，支持多个 ID 条件查询</p> <p>*</p> <p>* 支持自定义表达式，比如：tenant_id in (1,2) @since 2019-8-2</p> <p>*</p> <p>* @param where 参数 true 表示为 where 条件 false 表示为 insert 或者 select 条件</p> <p>* @return 租户 ID 值表达式</p> <p>*/</p> <p>Expression getTenantId(boolean where);</p> <p>/**</p> <p>* 获取租户字段名</p> <p>*</p> <p>* @return 租户字段名</p> <p>*/</p> <p>String getTenantIdColumn();</p> <p>/**</p> <p>* 根据表名判断是否进行过滤</p> <p>*</p> <p>* @param tableName 表名</p> <p>* @return 是否进行过滤, true:表示忽略，false:需要解析多租户字段</p> <p>*/</p> <p>boolean doTableFilter(String tableName);</p> <p>}</p> <p>PreTenantHandler 实现 TenantHandler</p> <p>@Slf4j</p> <p>@Component</p> <p>public class PreTenantHandler implements TenantHandler {<!-- --></p> <p>@Autowired</p> <p>private PreTenantConfigProperties configProperties;</p> <p>/**</p> <p>* 租户Id</p> <p>*</p> <p>* @return</p> <p>*/</p> <p>@Override</p> <p>public Expression getTenantId(boolean where) {<!-- --></p> <p>//可以通过过滤器从请求中获取对应租户id</p> <p>Long tenantId = PreTenantContextHolder.getCurrentTenantId();</p> <p>log.debug("当前租户为{}", tenantId);</p> <p>if (tenantId == null) {<!-- --></p> <p>return new NullValue();</p> <p>}</p> <p>return new LongValue(tenantId);</p> <p>}</p> <p>/**</p> <p>* 租户字段名</p> <p>*</p> <p>* @return</p> <p>*/</p> <p>@Override</p> <p>public String getTenantIdColumn() {<!-- --></p> <p>return configProperties.getTenantIdColumn();</p> <p>}</p> <p>/**</p> <p>* 根据表名判断是否进行过滤</p> <p>* 忽略掉一些表：如租户表(sys_tenant)本身不需要执行这样的处理</p> <p>*</p> <p>* @param tableName</p> <p>* @return</p> <p>*/</p> <p>@Override</p> <p>public boolean doTableFilter(String tableName) {<!-- --></p> <p>return configProperties.getIgnoreTenantTables().stream().anyMatch((e) -&gt; e.equalsIgnoreCase(tableName));</p> <p>}</p> <p>}</p> <p>第三步：配置mybatisPlus的分页插件配置</p> <p>@EnableTransactionManagement</p> <p>@Configuration</p> <p>@MapperScan({"com.xd.pre.**.mapper"})</p> <p>public class MyBatisPlusConfig {<!-- --></p> <p>@Autowired</p> <p>private PreTenantHandler preTenantHandler;</p> <p>/**</p> <p>* 分页插件</p> <p>*/</p> <p>@Bean</p> <p>public PaginationInterceptor paginationInterceptor() {<!-- --></p> <p>PaginationInterceptor paginationInterceptor = new PaginationInterceptor();</p> <p>List sqlParserList = new ArrayList&lt;&gt;();</p> <p>// 攻击 SQL 阻断解析器、加入解析链</p> <p>sqlParserList.add(new BlockAttackSqlParser());</p> <p>// 多租户拦截</p> <p>TenantSqlParser tenantSqlParser = new TenantSqlParser();</p> <p>tenantSqlParser.setTenantHandler(preTenantHandler);</p> <p>sqlParserList.add(tenantSqlParser);</p> <p>paginationInterceptor.setSqlParserList(sqlParserList);</p> <p>return paginationInterceptor;</p> <p>}</p> <p>}</p> <p>配置好之后，不管是查询、新增、修改删除方法，MP都会自动加上租户ID的标识，测试如下：</p> <p>@Test</p> <p>public void select(){<!-- --></p> <p>List users = userMapper.selectList(Wrappers.lambdaQuery().eq(User::getAge, 18));</p> <p>users.forEach(System.out::println);</p> <p>}</p> <p>运行sql实例：</p> <p>DEBUG==&gt; Preparing: SELECT id, login_name, name, password,</p> <p>email, salt, sex, age, phone, user_type, status,</p> <p>organization_id, create_time, update_time, version,</p> <p>tenant_id FROM sys_user</p> <p>WHERE sys_user.tenant_id = '001' AND is_delete = '0' AND age = ?</p> <p>注：特定SQL过滤 如果在程序中，有部分SQL不需要加上租户ID的表示，需要过滤特定的sql，可以通过如下两种方式：</p> <p>方式一：在配置分页插件中加上配置ISqlParserFilter解析器，如果配置SQL很多，比较麻烦，不建议；</p> <p>paginationInterceptor.setSqlParserFilter(new ISqlParserFilter() {<!-- --></p> <p>@Override</p> <p>public boolean doFilter(MetaObject metaObject) {<!-- --></p> <p>MappedStatement ms = SqlParserHelper.getMappedStatement(metaObject);</p> <p>// 对应Mapper、dao中的方法</p> <p>if("com.example.demo.mapper.UserMapper.selectList".equals(ms.getId())){<!-- --></p> <p>return true;</p> <p>}</p> <p>return false;</p> <p>}</p> <p>});</p> <p>方式二：通过租户注解 @SqlParser(filter = true) 的形式，目前只能作用于Mapper的方法上：</p> <p>public interface UserMapper extends BaseMapper {<!-- --></p> <p>/**</p> <p>* 自定Wrapper修改</p> <p>*</p> <p>* @param userWrapper 条件构造器</p> <p>* @param user 修改的对象参数</p> <p>* @return</p> <p>*/</p> <p>@SqlParser(filter = true)</p> <p>int updateByMyWrapper(@Param(Constants.WRAPPER) Wrapper userWrapper, @Param("user") User user);</p> <p>}</p> <p>注：</p> <p align="center"><img decoding="async" src="http://img.555519.xyz/uploads3/20220605/37533b9b03ca6438db4abf5a057b5425.jpg" alt="mybatis mysql 多租户_详解基于Mybatis-plus多租户实现方案"></p> <p>到此这篇关于详解基于Mybatis-plus多租户实现方案的文章就介绍到这了,更多相关Mybatis-plus多租户内容请搜索以前的文章或继续浏览下面的相关文章希望大家以后多多支持！</p> </div> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-23.htm">mysql中的date、datetime、timestamp你还不知道怎么使用吗_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-25.htm">C#使用RestClient调用Web API_C#教程</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-221.htm">关于encodeURI和encodeURIComponent的使用场景</a></h4>
                <p>encodeURI：适用于url跳转时。 encodeURIComponent：适用于url作为参数传递时。 tips：当url作为参数传递时如果没有用encodeURIComponent进行编码，会</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-242.htm">PyQt5 按钮Button 添加事件(信号/槽)</a></h4>
                <p>本文基于PyQt5 按钮Buttons样式设计，针对按钮添加响应的点击事件触发。 效果截图:  PyQt 模型设计：  &nbsp;PyQt 设计器截图：  *.UI 源码 &lt;?xml vers</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">Redis 如何保证数据库和缓存双写一致性？</a></h4>
                <p>前言  数据库和缓存（比如：redis）双写数据一致性问题，是一个跟开发语言无关的公共问题。尤其在高并发的场景下，这个问题变得更加严重。 我很负责的告诉大家，该问题无论在面试，还是工作中遇到的概率非常</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-235.htm">C#中检查null的语法糖_在线工具</a></h4>
                <p>今天看到已经更新了devblogs，新增的C# 11的!!（用于检查null的语法）经过非常长的讨论，最后取消了。然后我又想起来null检查，这个可以说一说。 函数参数null检查 传统写法 写一个函</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">Ribbon（一）远程调用RestTemplate</a></h4>
                <p>目录 一、RestTemplate介绍 二、需求说明 1、业务结构及说明 三、模块搭建 1、新建一个maven项目 2、添加ribbon依赖 3、编辑yml 4、主程序 5、编辑RibbonContr</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">kafka踩坑java找不到kafka-run-class.sh: line 309: exec: java: not found</a></h4>
                <p>今天执行 user_1@test_1:/opt/kafka$ sudo bin/zookeeper-server-start.sh config/zookeeper.properties/opt/ka</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">JavaScript找到两个数组之间的差异方法详解</a></h4>
                <p>我们有两个这样的数字数组- const&nbsp;arr1&nbsp;=&nbsp;[12,&nbsp;54,&nbsp;2,&nbsp;4,&nbsp;6,&nbsp;34,&nbsp;3]; co</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-253.htm">Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required List parame</a></h4>
                <p>问题：Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required List par</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-226.htm">C\C++ 中 malloc、calloc、realloc 函数的用法</a></h4>
                <p>C\C++ 中 malloc、calloc、realloc 函数的用法 转自：https://www.jianshu.com/p/d6f209b8796d 前言 C\C++提供了底层的内存操作，为程序</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-204.htm">Kafka启动报错处理：/opt/module/kafka/bin/kafka-run-class.sh: 第 258 行:exec: java: 未找到</a></h4>
                <p>今天在学习Kafka的时候，写了个脚本，用于集群中kafka的群起。发现启动不了。???? 去掉-daemon参数后，继续启动，看到了它报的错误(日志中也有显示)。找不到java？？？ 看了相关资料后</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>