<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-239.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>vue中watch监听，ajax异步问题解决 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">vue中watch监听，ajax异步问题解决</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> <a id="1_0" rel="nofollow"></a>1.组装参数调方法</h1> <pre><code class="prism language-javascript"><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	<span class="token comment">//组装requestParam1和requestParam2参数 </span> 	<span class="token keyword">let</span> requestParam1 <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	<span class="token keyword">let</span> requestParam2 <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	requestParam1<span class="token punctuation">.</span>screen <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>screenData<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>dimension <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>measure <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>formInline <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formInline <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>tableSel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tableSel<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>chartType <span class="token operator">=</span> <span class="token string">"scatter"</span><span class="token punctuation">;</span> 	 	requestParam2<span class="token punctuation">.</span>screen <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>screenData<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>dimension <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>measure <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>formInline <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formInline <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>tableSel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tableSel<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>chartType <span class="token operator">=</span> <span class="token string">"scatter"</span><span class="token punctuation">;</span> 	 	<span class="token comment">//调方法</span> 	<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChartDataLater</span><span class="token punctuation">(</span>requestParam1<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChartDataLater</span><span class="token punctuation">(</span>requestParam2<span class="token punctuation">)</span><span class="token punctuation">;</span>  	<span class="token comment">//得到返回的this.results</span> 	<span class="token keyword">let</span> _options <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chartOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">let</span> _temp_options <span class="token operator">=</span> <span class="token function">scatterRender</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">,</span> _options<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">if</span><span class="token punctuation">(</span>_temp_options<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>chartOptions <span class="token operator">=</span> _temp_options<span class="token punctuation">;</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">getChartDataLater</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">getChartData</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span> 		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <ul> <li>上面的这种写法可能会出现，<strong>getChartDataLater</strong>方法还没执行完成，this.results这个数组还没有push两次（可能<strong>ajax</strong>异步导致），就执行了下面得到_options的代码，这时候参数中<strong>this.results</strong>还只是个空数组</li> </ul> <hr/> <h1> <a id="2watch_43" rel="nofollow"></a>2.使用watch监听</h1> <pre><code class="prism language-javascript"><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	<span class="token comment">//组装requestParam1和requestParam2参数 </span> 	<span class="token keyword">let</span> requestParam1 <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	<span class="token keyword">let</span> requestParam2 <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	requestParam1<span class="token punctuation">.</span>screen <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>screenData<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>dimension <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>measure <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>formInline <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formInline <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>tableSel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tableSel<span class="token punctuation">;</span> 	requestParam1<span class="token punctuation">.</span>chartType <span class="token operator">=</span> <span class="token string">"scatter"</span><span class="token punctuation">;</span> 	 	requestParam2<span class="token punctuation">.</span>screen <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>screenData<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>dimension <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>measure <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>formInline <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>formInline <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>tableSel <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tableSel<span class="token punctuation">;</span> 	requestParam2<span class="token punctuation">.</span>chartType <span class="token operator">=</span> <span class="token string">"scatter"</span><span class="token punctuation">;</span> 	 	<span class="token comment">//调方法</span> 	<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChartDataLater</span><span class="token punctuation">(</span>requestParam1<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChartDataLater</span><span class="token punctuation">(</span>requestParam2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>；  <span class="token function">getChartDataLater</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">getChartData</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">//定义一个 a_watch 初始值为0，每执行一次getChartData就自增1</span> 		<span class="token comment">//在watch中监听 a_watch 为2时，说明getChartData已经执行了两次，this.results数组组装完成</span> 		<span class="token keyword">this</span><span class="token punctuation">.</span>a_watch <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a_watch <span class="token operator">+</span> <span class="token number">1</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=&gt;</span> <span class="token punctuation">{<!-- --></span> 		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//watch</span> watch <span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span> 	<span class="token function">a_watch</span><span class="token punctuation">(</span>newval<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newval<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span> 		<span class="token comment">//第一次getChartData执行完，newval=1，oldVal=0</span> 		<span class="token comment">//第二次getChartData执行完，newval=2，oldVal=1</span> 		<span class="token comment">//newval=2时，this.results已经组装完成</span> 		<span class="token keyword">if</span><span class="token punctuation">(</span>newval <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>results<span class="token punctuation">)</span> 			<span class="token keyword">let</span> _options <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chartOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token keyword">let</span> _temp_options <span class="token operator">=</span> <span class="token function">scatterRender</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dimensionData<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>measureData<span class="token punctuation">,</span> _options<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token keyword">if</span><span class="token punctuation">(</span>_temp_options<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 				<span class="token keyword">this</span><span class="token punctuation">.</span>chartOptions <span class="token operator">=</span> _temp_options<span class="token punctuation">;</span> 			<span class="token punctuation">}</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <hr/> <h1> <a id="3watch_99" rel="nofollow"></a>3.watch属性监听补充</h1> <h6> <a id="1watchdata_100" rel="nofollow"></a>1.watch监听data内数据的变化</h6> <pre><code class="prism language-javascript">data<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>  a<span class="token punctuation">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> watch<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>  <span class="token function">a</span><span class="token punctuation">(</span>newval<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">// 做点什么。。。</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newval<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h6> <a id="2watchdeep_true__113" rel="nofollow"></a>2.watch监听整个对象，deep: true 深度监测</h6> <pre><code class="prism language-javascript">data<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>  <span class="token keyword">return</span> <span class="token punctuation">{<!-- --></span>   msg<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>    name<span class="token punctuation">:</span> <span class="token string">'hahah'</span><span class="token punctuation">,</span>    color<span class="token punctuation">:</span> <span class="token string">'red'</span>   <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span>  watch<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>  msg<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>   <span class="token function">handler</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>    <span class="token comment">// 做点什么。。。</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  deep<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> </code></pre> <h6> <a id="3watchcomputed_134" rel="nofollow"></a>3.watch监听对象内的某一具体属性，可以通过computed做中间层来实现</h6> <pre><code class="prism language-javascript">computed<span class="token punctuation">:</span> <span class="token punctuation">{<!-- --></span>  <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>   <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">.</span>name  <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> watch<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>  <span class="token function">name</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>    <span class="token comment">// 做点什么。。。</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newval<span class="token punctuation">,</span> oldVal<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-238.htm">js数组删除的方法</a></p>
                                        <p>下一个：<a href="/html/category/article-240.htm">vue写一个简单的文件上传控件</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-234.htm">Pandas 如何处理超大规模数据</a></h4>
                <p>作者&nbsp;|&nbsp;Sara&nbsp;A.&nbsp;Metwalli 译者&nbsp;|&nbsp;盖磊 策划&nbsp;|&nbsp;陈思  处理大规模数据集时常是棘手的事情，尤其在内</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">2、java mybatis 命名空间</a></h4>
                <p>命名空间： 在之前版本的 MyBatis 中，命名空间（Namespaces）的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。 命名空间的作用有两个，一个是利用更长的全限定</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">vue 配置全局模块、SASS（自动引入模块）</a></h4>
                <p>ProvidePlugin Automatically load modules instead of having to import or require them everywhere 自动引入</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">pandas高阶应用</a></h4>
                <p>1、时间序列相关操作 pd的date_range中的基本时间序列频率     Alias   Description（偏移量类型）   说明     B   business day frequenc</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-230.htm">java中RabbitMQ高级应用_java</a></h4>
                <p>目录  1、消息可靠性投递   1.1、确认模式  1.2、退回模式  1.3、确认机制  2、消费端限流  3、消息过期时间  4、死信队列   4.1、死信概念  4.2、延迟队列     1、消</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-247.htm">.NET如何快速比较两个byte数组是否相等</a></h4>
                <p>前言  之前在群里面有群友问过一个这样的问题，在.NET中如何快速的比较两个byte数组是否完全相等，听起来是一个比较两个byte数组是完全相等是一个简单的问题，但是深入研究以后，觉得还是有很多方案的</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">Centos7服务器上RabbitMQ单机安装_在线工具</a></h4>
                <p>一、背景 最近项目中用到了RabbitMQ，但是发现自己本地没有安装，此文记录一下本地RabbitMQ的安装过程。注意不同的系统安装方式略有不同，此处我们记录的是Centos7的安装方式。 二、安装方</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-219.htm">如何使用HTML5 SVG绘制正弦波？</a></h4>
                <p>要使用SVG绘制正弦波，请使用以下近似正弦波的一半。我使用三次贝塞尔近似。使用&lt;path&gt;元素。 示例 &lt;!DOCTYPE&nbsp;html&gt; &lt;html&gt; &n</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-255.htm">解决antdv的table因数据量过大导致的卡顿问题</a></h4>
                <p>遇到的问题：antdv的table表格使用时因数据量过大，造成标签页切换卡顿的问题 解决办法：绑定滚动事件，页面只显示在可视区域内的数据，没在可视区域内的数据不予展示，dom元素的scrollHeig</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-251.htm">SpringMVC拦截器path路径的坑</a></h4>
                <p>SpringMVC提供了很方便的拦截器供我们开发使用。在配置文件中通过&lt;mvc:mapping path="" /&gt;进行配置拦截的路径，但是这个path在配置的时候有一个小坑 我们都知道在</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>