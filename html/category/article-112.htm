<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-112.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>idea集成docker实现springboot一键部署 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">idea集成docker实现springboot一键部署</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h4> <a id="1ideadocker_0" rel="nofollow"></a>1.idea安装docker插件</h4> <p>打开Preferences-&gt;Plugins-&gt;Marketplace<br /> 搜索安装docker<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/0ff582e348d348cface1d9c62eb0e780.jpg" alt="idea集成docker实现springboot一键部署"></p> <h4> <a id="2docker_4" rel="nofollow"></a>2.配置docker</h4> <p>打开Preferences-&gt;Build,Execution,Deployment-&gt;Docker<br /> 添加docker服务<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/d4534bb67abdc647a2f99c5090a94846.jpg" alt="idea集成docker实现springboot一键部署"><br /> 若显示Connection successful，则表示添加成功<br /> docker如何开通远程可参照<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/sinat_31855011"  rel="nofollow">docker安装</a></p> <h4> <a id="3springbootpomdocker_10" rel="nofollow"></a>3.springboot项目pom添加docker打包插件</h4> <pre><code class="prism language-java">           <span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>spotify<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>docker<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>将插件绑定在某个phase执行<span class="token operator">--</span><span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>executions<span class="token punctuation">&gt;</span></span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>execution<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>id<span class="token punctuation">&gt;</span></span>build<span class="token operator">-</span>image<span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>将插件绑定在<span class="token keyword">package</span>这个phase上。也就是说，用户只需执行mvn <span class="token keyword">package</span> ，就会自动执行mvn docker<span class="token operator">:</span>build<span class="token operator">--</span><span class="token operator">&gt;</span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>phase<span class="token punctuation">&gt;</span></span><span class="token keyword">package</span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">&gt;</span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>goals<span class="token punctuation">&gt;</span></span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>goal<span class="token punctuation">&gt;</span></span>build<span class="token operator">&lt;</span><span class="token operator">/</span>goal<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">&gt;</span>                 <span class="token generics function"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定生成的镜像名<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>imageName<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>artifactId<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>imageName<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定标签<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>imageTags<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>imageTag<span class="token punctuation">&gt;</span></span>latest<span class="token operator">&lt;</span><span class="token operator">/</span>imageTag<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>imageTags<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 指定 Dockerfile 路径 $<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>basedir<span class="token punctuation">}</span>：项目根路径下<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>dockerDirectory<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>basedir<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>dockerDirectory<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>指定远程 docker api地址<span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>dockerHost<span class="token punctuation">&gt;</span></span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.31</span><span class="token number">.6</span><span class="token operator">:</span><span class="token number">2375</span><span class="token operator">&lt;</span><span class="token operator">/</span>dockerHost<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这里是复制 jar 包到 docker 容器指定目录配置 <span class="token operator">--</span><span class="token operator">&gt;</span>                     <span class="token generics function"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>                         <span class="token generics function"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>targetPath<span class="token punctuation">&gt;</span></span><span class="token operator">/</span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">&gt;</span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>jar 包所在的路径 此处配置的 即对应 target 目录<span class="token operator">--</span><span class="token operator">&gt;</span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>directory<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>                              <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　<span class="token operator">--</span><span class="token operator">&gt;</span>                             <span class="token generics function"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>finalName<span class="token punctuation">}</span><span class="token punctuation">.</span>jar<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">&gt;</span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">&gt;</span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>             <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span> </code></pre> <h4> <a id="4springbootDockerfilepom_52" rel="nofollow"></a>4.springboot项目创建Dockerfile文件（与pom文件同级）</h4> <pre><code class="prism language-java">#指定基础镜像，在其上进行定制，树莓派专用jdk FROM armhfbuild<span class="token operator">/</span>java MAINTAINER <span class="token string">"Edison"</span><span class="token operator">&lt;</span><span class="token number">631697494</span><span class="token annotation punctuation">@qq</span><span class="token punctuation">.</span>com<span class="token operator">&gt;</span>  #添加 target<span class="token operator">/</span>pi<span class="token operator">-</span>service<span class="token punctuation">.</span>jar 到容器里 ADD pi<span class="token operator">-</span>service<span class="token punctuation">.</span>jar app<span class="token punctuation">.</span>jar  #声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务 EXPOSE <span class="token number">9999</span>  #指定容器启动程序及参数   <span class="token generics function"><span class="token punctuation">&lt;</span>ENTRYPOINT<span class="token punctuation">&gt;</span></span> <span class="token string">"&lt;CMD&gt;"</span> ENTRYPOINT <span class="token punctuation">[</span><span class="token string">"java"</span><span class="token punctuation">,</span><span class="token string">"-jar"</span><span class="token punctuation">,</span><span class="token string">"app.jar"</span><span class="token punctuation">]</span> </code></pre> <h4> <a id="5_68" rel="nofollow"></a>5.服务部署</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230217/6ad092a0b528e2379ba24ce01304c25a.jpg" alt="idea集成docker实现springboot一键部署"><br /> 右击创建容器的时候，填入相应配置即可启动容器<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/dab962b7a47d10fdd792290e9b99116b.jpg" alt="idea集成docker实现springboot一键部署"><br /> 启动后可看到以下信息表示启动成功，可通过开放端口访问服务啦！<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/5320bb8433f637ec54d1f617bc2a4800.jpg" alt="idea集成docker实现springboot一键部署"></p> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-111.htm">React18之状态批处理的使用_React</a></p>
                                        <p>下一个：<a href="/html/category/article-113.htm">js中数组常用遍历，VUE 中数组常用遍历</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-220.htm">C/C++编程：异常处理(exception handling)的原理</a></h4>
                <p>引入原因  问题：很久之前，C程序是使用错误码来处理错误的，那为什么C++还要引入异常呢？  回答：异常不能被忽略。  如果一个函数通过设置一个状态变量来返回错误码来表示一个异常状态，没有办法保证函数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-229.htm">基于docker部署Oracle 19c的详细记录_docker</a></h4>
                <p>目录  一. 拉取Oracle 19c镜像 二. 查看镜像 三. 创建Oracle 19c镜像的容器  3.1创建目录 3.2 创建实例 3.3 查看日志  四、 修改密码  五、连接数据库  5.1</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-259.htm">C ++程序查找n个数的GCD和LCM</a></h4>
                <p>这是找出n个数字的GCD和LCM的代码。两个或更多不都是零的整数的GCD或最大公除数是将每个整数相除的最大正整数。GCD也被称为最大公因数。 两个数字的最小公倍数(LCM)是两个数字的倍数的最小数字（</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-207.htm">MySQL——union(合并结果集)、limit(获取部分数据)、关于MySQL中常用数据类型</a></h4>
                <p>博客目录 1、union(合并结果集) 2、limit(获取一张表中某部分数据) 3、表——创建表、删除表 4、关于MySQL中的数据类型  一、union(合并结果集)  将两个查询结果合并(可以是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-248.htm">jpa mysql乐观锁_JPA @Lock(value = LockModeType.PESSIMISTIC_WRITE) 悲观锁防坑</a></h4>
                <p>前提： 由于业务需要在entity Product已经实现了@version的乐观锁的基础上再加上了悲观锁的控制 @Lock(value = LockModeType.PESSIMISTIC_WRIT</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-208.htm">vue3.0下如何使用mapState，mapGetters和mapActions</a></h4>
                <p>vue3.0下如何使用mapState，mapGetters和mapActions      1、新建useMapper.js 2、新建useState.js 3、新建useGetters.js 4、</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-216.htm">Spark连接Hive，进行Hive数据表的读写操作</a></h4>
                <p>基础环境   Hadoop安装-1，hadoop安装-2  spark安装 Hive安装   配置  将Hive的conf目录下的hive-site-xml文件拷贝到spark的conf目录下； 将H</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">redis专题：redis键值设计、性能优化以及redis连接池配置</a></h4>
                <p>文章目录  1.redis键值设计   ①：key设计规范 ②：value设计规范   2. 命令使用优化 3. redis连接池配置参数设计 4. redis连接池预热 5. redis的key过期</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-205.htm">SpringBoot扩展点EnvironmentPostProcessor_在线工具</a></h4>
                <p>一、背景 之前项目中用到了Apollo配置中心，对接Apollo配置中心后，配置中心的属性就可以在程序中使用了，那么这个是怎么实现的呢？配置中心的属性又是何时加载到程序中的呢？那么我们如果找到了这个是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-215.htm">uniapp中封装一个弹框组件</a></h4>
                <p>1，准备组件popup // components文件夹中popup组件&lt;template&gt;&lt;view&gt;&lt;viewclass="show-box-bg wx-login-</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>