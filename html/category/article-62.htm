<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-62.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>YARN线上动态资源调优 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">YARN线上动态资源调优</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<h1 class="md-end-block md-heading"><span class="md-plain md-expand">背景</span></h1> <p class="md-end-block md-p"><span class="md-plain">线上Hadoop集群资源严重不足，可能存在添加磁盘，添加CPU，添加节点的操作，那么在添加这些硬件资源之后，我们的集群是不能立马就利用上这些资源的，需要修改集群Yarn资源配置，然后使其生效。</span></p> <h1 class="md-end-block md-heading"><span class="md-plain">现有环境</span></h1> <p class="md-end-block md-p"><span class="md-plain">服务器：12台，内存64Gx12=768G，物理cpu16x12=192，磁盘12Tx12=144T</span></p> <p class="md-end-block md-p"><span class="md-plain">组件：Hadoop-2.7.7，Hive-2.3.4，Presto-220，Dolphinscheduler-1.3.6，Sqoop-1.4.7</span></p> <p class="md-end-block md-p"><span class="md-pair-s"><strong><span class="md-plain">分配策略</span></strong></span></p> <p class="md-end-block md-p"><span class="md-plain">由于我们的版本是Hadoop-2.7.7，有些默认配置是固定一个值，好比可用内存8G，可用CPU核数8核，如果调优就需要我们配置的东西比较多。</span></p> <p class="md-end-block md-p"><span class="md-plain">官方Yarn参数配置：</span><span class="md-link md-pair-s" spellcheck="false"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://hadoop.apache.org/docs/r2.7.7/hadoop-yarn/hadoop-yarn-common/yarn-default.xml"  rel="nofollow">https://hadoop.apache.org/docs/r2.7.7/hadoop-yarn/hadoop-yarn-common/yarn-default.xml</a></span></p> <p class="md-end-block md-p md-focus"><span class="md-plain md-expand">未来的版本(Hadoop-3.0+)其实是有自动检测硬件资源的机制，需要开启配置：</span><span class="md-pair-s" spellcheck="false"><code>yarn.nodemanager.resource.detect-hardware-capabilities</code></span><span class="md-plain">，然后会自动计算资源配置，不过这个是默认关闭的，每个节点的NodeManager可用内存配置</span><span class="md-pair-s" spellcheck="false"><code>yarn.nodemanager.resource.memory-mb</code></span><span class="md-plain"> 和CPU核数</span><span class="md-pair-s" spellcheck="false"><code>yarn.nodemanager.resource.cpu-vcores</code></span><span class="md-plain"> 也是受此配置影响， 默认配置都是-1，则可用内存为8G，CPU核数为8核。如果开启了自动监测硬件资源，其他配置则可以忽略不用配置，简化了配置。</span></p> <p class="md-end-block md-p"><span class="md-plain">官方Yarn参数配置：</span><span class="md-link md-pair-s" spellcheck="false"><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-common/yarn-default.xml"  rel="nofollow">https://hadoop.apache.org/docs/stable/hadoop-yarn/hadoop-yarn-common/yarn-default.xml</a></span></p> <p class="md-end-block md-p"><span class="md-plain">还有一个重要的配置</span><span class="md-pair-s" spellcheck="false"><code>yarn.nodemanager.vmem-pmem-ratio</code></span><span class="md-plain"> ，表示NodeManager上的Container物理内存不足时，可用使用虚拟内存，默认为物理内存的2.1倍。</span></p> <h1 class="md-end-block md-heading"><span class="md-plain">修改配置</span></h1> <h2 class="md-end-block md-heading"><span class="md-plain">yarn-site.xml</span></h2> <p class="md-end-block md-p"><span class="md-plain">修改yarn-site.xml，有则修改，没有则添加，这里我们设置单个节点可用内存30G，可用CPU核数为16</span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="xml" spellcheck="false"><code>&lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;30720&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;每个节点可用内存,默认8192M(8G),这里设置30G&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;1024&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;单个任务可申请最少内存，默认1024MB&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;20480&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;单个任务可申请最大内存，默认8192M(8G),这里设置20G&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.app.mapreduce.am.resource.mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;2048&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;默认为1536。MR运行于YARN上时，为AM分配多少内存。默认值通常来说过小，建议设置为2048或4096等较大的值。&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;16&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;默认为8。每个节点可分配多少虚拟核给YARN使用，通常设为该节点定义的总虚拟核数即可。&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;32&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;分别为1/32，指定RM可以为每个container分配的最小/最大虚拟核数，低 于或高于该限制的核申请，会按最小或最大核数来进行分配。默认值适合 一般集群使用。&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;1&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;分别为1/32，指定RM可以为每个container分配的最小/最大虚拟核数，低 于或高于该限制的核申请，会按最小或最大核数来进行分配。默认值适合 一般集&gt;群使用。&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp;&lt;name&gt;yarn.nodemanager.vcores-pcores-ratio&lt;/name&gt;  &nbsp;&lt;value&gt;2&lt;/value&gt;  &nbsp;&lt;discription&gt;每使用一个物理cpu，可以使用的虚拟cpu的比例，默认为2&lt;/discription&gt; &lt;/property&gt;  &lt;property&gt;  &nbsp;&lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;  &nbsp;&lt;value&gt;5.2&lt;/value&gt;  &nbsp;&lt;discription&gt;物理内存不足时,使用的虚拟内存，默认是2.1，表示每使用1MB的物理内存，最多可以使用2.1MB的虚拟内存总量。&lt;/discription&gt; &lt;/property&gt;</code></pre> <h2 class="md-end-block md-heading"><span class="md-plain">mapred-site.xml</span></h2> <p class="md-end-block md-p"><span class="md-plain">修改mapred-site.xml，有则修改，没有则添加</span></p> <p class="md-end-block md-p"><span class="md-plain">给单个任务设置内存资源，注意这里的值不能大于上面对应的内存</span><span class="md-pair-s" spellcheck="false"><code>yarn.scheduler.maximum-allocation-mb</code></span></p> <pre class="md-fences md-end-block ty-contain-cm modeLoaded" lang="xml" spellcheck="false"><code>&lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;mapreduce.map.memory.mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;2048&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;默认均为1024，调度器为每个map/reduce task申请的内存数。各Job也可以单独指定。&lt;/discription&gt; &lt;/property&gt; &lt;property&gt;  &nbsp; &nbsp;&lt;name&gt;mapreduce.reduce.memory.mb&lt;/name&gt;  &nbsp; &nbsp;&lt;value&gt;2048&lt;/value&gt;  &nbsp; &nbsp;&lt;discription&gt;默认均为1024，调度器为每个map/reduce task申请的内存数。各Job也可以单独指定。&lt;/discription&gt; &lt;/property&gt;</code></pre> <h1 class="md-end-block md-heading"><span class="md-plain">集群生效</span></h1> <h2 class="md-end-block md-heading"><span class="md-plain">分发</span></h2> <p class="md-end-block md-p"><span class="md-plain">修改完配置后，一定要将配置分发到其他集群节点，使用 scp 或者 xsync 工具分发到其他节点，这里举例分发到一个节点</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>cd /data/soft/hadoop/hadoop-2.7.7/etc/hadoop</code></span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>scp -r yarn-site.xml mapred-site.xml data002:`pwd`</code></span></p> <h2 class="md-end-block md-heading"><span class="md-plain">动态重启</span></h2> <p class="md-end-block md-p"><span class="md-plain">为了不影响集群使用，我们单独启停Yarn，Yarn的服务主要有两个NodeManager和ResourceManager，单独启停命令</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>yarn-daemon.sh stop nodemanager</code></span><span class="md-pair-s" spellcheck="false"><code>yarn-daemon.sh start nademanager</code></span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>yarn-daemon.sh stop resourcemanager</code></span><span class="md-pair-s" spellcheck="false"><code>yarn-daemon.sh start resourcemanager</code></span></p> <p class="md-end-block md-p"><span class="md-plain">根据集群节点逐个执行以上命令，ResourceManager对应的节点执行对应的命令。这样我们就保证了集群资源的动态调优。</span></p> <p class="md-end-block md-p"><span class="md-plain">当然，如果单个重启麻烦，也可以执行Yarn的重启命令</span></p> <p class="md-end-block md-p"><span class="md-pair-s" spellcheck="false"><code>stop-yarn.sh</code></span><span class="md-pair-s" spellcheck="false"><code>start-yarn.sh</code></span></p> <p class="md-end-block md-p"><span class="md-plain">ResourceManager对应的从节点单独启停即可。</span></p> <blockquote> <p class="md-end-block md-p"><span class="md-plain md-expand">更多请在公号平台搜索：选手一号位，本文编号：2004，回复即可获取。</span></p> </blockquote> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-61.htm">快速学会SpringBoot的秘诀，看这篇就懂了</a></p>
                                        <p>下一个：<a href="/html/category/article-63.htm">【定义+用法+区别+使用场景】escape(),encodeURI(),encodeURIComponent()</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-210.htm">Java8 LocalDate、LocalDateTime、LocalTime、Instant</a></h4>
                <p>Java8日期时间API，新增了LocalDate、LocalDateTime、LocalTime等线程安全类，下面简单介绍他们的使用及Date与LocalDate互转。  &nbsp;1、Local</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-222.htm">由浅入深，带你用JavaScript实现响应式原理（Vue2、Vue3响应式原理）</a></h4>
                <p>由浅入深，带你用JavaScript实现响应式原理 前言 为什么前端框架Vue能够做到响应式？当依赖数据发生变化时，会对页面进行自动更新，其原理还是在于对响应式数据的获取和设置进行了监听，一旦监听到数</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-239.htm">Vue假数据应用——表格的添加、删除、搜索</a></h4>
                <p>Vue实现假数据的添加、删除、搜索 HTML &lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;script type="text/</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">C/C++内存申请函数总结</a></h4>
                <p>#include &lt;stdlib.h&gt; new char[size] void* malloc(unsigned size); void* realloc(void* ptr, unsig</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-217.htm">Vuex入门mapState, mapGetters, mapMutations, mapActions详解终结篇带源码</a></h4>
                <p>目录  知识不足的地方赶快点击学习呦~~~  Vuex入门(一)—— state,mapState,…mapState对象展开符详解Vuex入门(二)—— mutations详解Vuex入门(三)——</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-236.htm">tensorflow（三） 模型保存</a></h4>
                <p>tensorflow最简单的保存与加载模型的方法是Saver对象（存放在tensorflow.train）。构造器给graph所有的变量，或者定义在列表中的变量，添加save和restore的操作，分</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-262.htm">Python 认识列表和元组</a></h4>
                <p>列表和元组，都是一个可以放置任何数据类型的有序集合。   列表的特性 动态的（mutable）：长度大小不固定，可以随意地增加、删减或者改变元素。 会修改原来列表中的元素，而不会创建新的列表。 # 新</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-225.htm">Spring的3级缓存和循环引用的理解_在线工具</a></h4>
                <p>此处是我自己的一个理解，防止以后忘记，如若那个地方理解不对，欢迎指出。  一、背景 在我们写代码的过程中一般会使用 @Autowired 来注入另外的一个对象，但有些时候发生了 循环依赖，但是我们的代</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">feign post 参数对象不加@RequestBody的用法</a></h4>
                <p>最近在做小程序调支付服务接口的一个功能，这个feign接口传参真的太费事。 代码我就改造了下，不直接上真实代码。 比如小程序调支付服务的订单查询接口，支付服务那边的controller的订单查询方法是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-214.htm">Spring Boot 分层构建 Docker 镜像实战</a></h4>
                <p>系统环境：   Docker 版本：19.03.13   Open JDK 基础镜像版本：openjdk:8u275   私有的 Harbor 镜像仓库：自建 Harbor 私库   项目 Githu</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>