<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-125.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Unity 内置渲染管线转URP - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">Unity 内置渲染管线转URP</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1><a id="CG__HLSL_0" rel="nofollow"></a>一、CG 替换 HLSL</h1> <ol> <li> <p>未使用光照计算的shader升级后不做修改仍然可以使用，但是可能会不兼容SRP Batcher，所以仍然需要修改，使用了光照计算的shader必须要修改。</p> </li> <li> <p>SubShader的Tags中增加 “RenderPipeline”="UniversalPipeline"声明</p> </li> <li> <p>要保证多pass物体正确绘制，需要确保有个pass打上<code>UniversalForward</code> 的tag，其余pass有<code>SRPDefaultUnlit</code>的tag也行，没有也行。</p> </li> <li> <blockquote> <p>HLSLPROGRAM 替换 CGPROGRAM<br /> HLSLINCLUDE 替换 INCLUDE<br /> ENDHLSL 替换 ENDCG</p> </blockquote> </li> <li> <p><code>fixed</code> 替换为：<code>half</code> 或者<code>float</code></p> </li> <li> <p>FallBack<br /> FallBack “Hidden/Universal Render Pipeline/FallbackError”</p> </li> <li> <p>LightMode</p> <pre><code class="prism language-c"><span class="token string">"LightMode"</span> 要改为URP支持的模式， 比如<span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"Forward"</span>     替换为<span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"UniversalForward"</span>  其他常用URP的mode类型：<span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"Universal2D"</span><span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"Meta"</span><span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"DepthOnly"</span><span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"ShadowCaster"</span></code></pre> </li> <li> <p>使用URP ShaderLibrary引用Core.hlsl替换内置渲染管线中的UnityCG.cginc</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"</span></span> 替换<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"UnityCG.cginc"</span></span></code></pre> <p>其他库类似：</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Lighting.HLSLinc"</span></span> 替换为：<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/Shaders/LitInput.hlsl"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/Shaders/LitForwardPass.hlsl"</span></span>  阴影：<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/Shaders/ShadowCasterPass.hlsl"</span></span></code></pre> </li> <li> <p>内置结构体、内置函数 和矩阵</p> <blockquote> <p>appdata_full 这种结构体不能用了，如何一一替换我就不举例了<br /> 内置函数 和矩阵需要查阅Packages/Universal RP/ShaderLibrary/UnityInput<br /> 内置结构体、函数需要查阅<br /> Packages/Universal RP/ShaderLibrary/Input<br /> Packages/Universal RP/ShaderLibrary/Core</p> </blockquote> </li> <li> <p>使用 TransformObjectToHClip 替换 UnityObjectToClipPos<br /> 或者改成如下写法：</p> <pre><code class="prism language-c">Varyings<span class="token function">vert</span><span class="token punctuation">(</span>Attributes IN<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     Varyings OUT<span class="token punctuation">;</span>       VertexPositionInputs positionInputs<span class="token operator">=</span><span class="token function">GetVertexPositionInputs</span><span class="token punctuation">(</span>IN<span class="token punctuation">.</span>positionOS<span class="token punctuation">.</span>xyz<span class="token punctuation">)</span><span class="token punctuation">;</span>     OUT<span class="token punctuation">.</span>positionCS<span class="token operator">=</span> positionInputs<span class="token punctuation">.</span>positionCS<span class="token punctuation">;</span><span class="token comment">// Or this :</span><span class="token comment">//OUT.positionCS = TransformObjectToHClip(IN.positionOS.xyz);</span>       OUT<span class="token punctuation">.</span>uv<span class="token operator">=</span><span class="token function">TRANSFORM_TEX</span><span class="token punctuation">(</span>IN<span class="token punctuation">.</span>uv<span class="token punctuation">,</span> _BaseMap<span class="token punctuation">)</span><span class="token punctuation">;</span>     OUT<span class="token punctuation">.</span>color<span class="token operator">=</span> IN<span class="token punctuation">.</span>color<span class="token punctuation">;</span><span class="token keyword">return</span> OUT<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><strong>GetVertexPositionInputs</strong> 计算不同坐标系中的位置，结果包含世界坐标系坐标，观察坐标系坐标，裁剪坐标系坐标，标准设备坐标系坐标，未使用到的坐标不会被包含到编译出的shader中，所以不会有额外的不必要的计算量。TRANSFORM_TEX 在内置渲染管线和URP中都可以用。GetVertexNormalInputs 可以将法线和切线从对象坐标系变换到世界坐标系。也可以用 TransformObjectToWorldNormal(IN.normalOS) 代替。</p> <p><code>VertexNormalInputs normalInputs = GetVertexNormalInputs(IN.normalOS, IN.tangentOS);</code></p> </li> <li> <p>在URP中纹理和采样器的定义改成如下写法：</p> <pre><code class="prism language-c"><span class="token comment">// 将_BaseMap声明为Texture2D对象</span><span class="token function">TEXTURE2D</span><span class="token punctuation">(</span>_MainTex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 将_BaseMap声明为Texture2D对象</span><span class="token function">SAMPLER</span><span class="token punctuation">(</span>sampler_MainTex<span class="token punctuation">)</span><span class="token punctuation">;</span> 	 	float4<span class="token function">frag</span><span class="token punctuation">(</span>v2f i<span class="token punctuation">)</span><span class="token operator">:</span> SV_Target<span class="token punctuation">{<!-- --></span> 	    float4 col<span class="token operator">=</span><span class="token function">SAMPLE_TEXTURE2D</span><span class="token punctuation">(</span>_BaseMap<span class="token punctuation">,</span>sampler_BaseMap<span class="token punctuation">,</span> i<span class="token punctuation">.</span>texcoord<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> col<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </li> <li> <p>区分 multi_compile 和 shader_feature，剥离不需要的编译选项，减少shader变体。</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://zhuanlan.zhihu.com/p/77043332"  rel="nofollow">https://zhuanlan.zhihu.com/p/77043332</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jianshu.com/p/8750704a2f4c"  rel="nofollow">https://www.jianshu.com/p/8750704a2f4c</a></p> </li> <li> <p>URP不支持表面着色器，URP ShaderLibrary 中处理光照计算的函数在 Lighting.hlsl中，该文件需要手动include。</p> <pre><code class="prism language-c"><span class="token comment">//这些编译指令用于接收阴影</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS_CASCADE</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _SHADOWS_SOFT</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/ShaderLibrary/Lighting.hlsl"</span></span></code></pre> </li> <li> <p>当使用Lighting.hlsl支持光照和阴影，应该添加下面的编译选项，如果没有定义，ShaderLibrary会跳过一些计算。</p> <pre><code class="prism language-c"><span class="token comment">// Main Light Shadows</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS_CASCADE</span></span><span class="token comment">// Additional Lights &amp; Shadows</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _ADDITIONAL_LIGHT_SHADOWS</span></span><span class="token comment">// Soft Shadows</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _SHADOWS_SOFT</span></span><span class="token comment">// Other (Mixed lighting, baked lightmaps, fog)</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MIXED_LIGHTING_SUBTRACTIVE</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ DIRLIGHTMAP_COMBINED</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ LIGHTMAP_ON</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile_fog</span></span><span class="token comment">// Supporting shadows will also require passing a positionWS,</span><span class="token comment">// and shadowCoord into the fragment shader, again you'll have</span><span class="token comment">// to see the Lighting sections for actual examples.</span></code></pre> <p>接受投影：</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">"Packages/com.unity.render-pipelines.universal/ShaderLibrary/Lighting.hlsl"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile _ _MAIN_LIGHT_SHADOWS_CASCADE</span></span>  float4<span class="token function">frag</span><span class="token punctuation">(</span>v2f i<span class="token punctuation">)</span><span class="token operator">:</span> SV_Target<span class="token punctuation">{<!-- --></span>    float4 shadowCoords<span class="token operator">=</span><span class="token function">TransformWorldToShadowCoord</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>worldPos<span class="token punctuation">)</span><span class="token punctuation">;</span>    Light mainLight<span class="token operator">=</span><span class="token function">GetMainLight</span><span class="token punctuation">(</span>shadowCoords<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//阴影实时遮挡</span>    half shadow<span class="token operator">=</span> mainLight<span class="token punctuation">.</span>shadowAttenuation<span class="token punctuation">;</span><span class="token keyword">return</span> shadow<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <pre><code>被投影：</code></pre> <pre><code class="prism language-c"><span class="token comment">//新加一个pass</span>    UsePass<span class="token string">"Universal Render Pipeline/Lit/ShadowCaster"</span></code></pre> </li> <li> <p>为了处理雾，使用ComputeFogFactor 和 MixFog 函数。</p> <pre><code class="prism language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span><span class="token expression">multi_compile_fog</span></span><span class="token keyword">struct</span><span class="token class-name">Varyings</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     half fogFactor<span class="token operator">:</span> TEXCOORD5<span class="token punctuation">;</span><span class="token comment">// or whatever unused texcoord</span><span class="token comment">// if none are unused pack it together with a half3 or something</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment">// In the vertex shader :</span> half fogFactor<span class="token operator">=</span><span class="token function">ComputeFogFactor</span><span class="token punctuation">(</span>positionInputs<span class="token punctuation">.</span>positionCS<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// In the fragment, just before returning the color :</span> color<span class="token punctuation">.</span>rgb<span class="token operator">=</span><span class="token function">MixFog</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>rgb<span class="token punctuation">,</span> IN<span class="token punctuation">.</span>fogFactor<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </li> </ol> <h1><a id="Pass_183" rel="nofollow"></a>二、多Pass问题：</h1> <p>在URP中是使用的<code>single-pass</code>前向渲染，也就是单Pass。<br /> 转URP的时候我们会发现 以前多Pass的shader会异常，只会渲染第一个Pass。</p> <p>如果我们确实需要多Pass怎么办？</p> <p>我们可以通过设置第一个Pass的LightMode为：<code>UniversalForward</code>就行了。</p> <p><strong>例如：</strong></p> <pre><code class="prism language-c">Shader<span class="token string">"lcl/Shader"</span><span class="token punctuation">{<!-- --></span>       	Properties<span class="token punctuation">{<!-- --></span><span class="token function">_Color</span><span class="token punctuation">(</span><span class="token string">"Color"</span><span class="token punctuation">,</span> Color<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">_MainTex</span><span class="token punctuation">(</span><span class="token string">"Albedo"</span><span class="token punctuation">,</span><span class="token number">2</span>D<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">}</span>     	SubShader<span class="token punctuation">{<!-- --></span> 		LOD<span class="token number">100</span> 		Lighting Off 		Pass<span class="token punctuation">{<!-- --></span>  			Tags<span class="token punctuation">{<!-- --></span><span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"UniversalForward"</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span> 		Pass<span class="token punctuation">{<!-- --></span>   			Tags<span class="token punctuation">{<!-- --></span><span class="token string">"LightMode"</span><span class="token operator">=</span><span class="token string">"SRPDefaultUnlit"</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>但是不推荐多Pass渲染，因为会打断 SRP Batcher，使DrawCall增加。（当然 如果没使用SRP Batcher则不影响）</p> <p>具体什么是SRP Batcher可以参考这里</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://zhuanlan.zhihu.com/p/165574008"  rel="nofollow">https://zhuanlan.zhihu.com/p/165574008</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://zhuanlan.zhihu.com/p/165388825"  rel="nofollow">https://zhuanlan.zhihu.com/p/165388825</a></p> <p>·如果确实需要可以通过<code>RendererFeatures</code>实现多Pass效果</p> <h1><a id="SRP_Batcher_228" rel="nofollow"></a>三、兼容SRP Batcher：</h1> <h2><a id="_SRP_Batcher_230" rel="nofollow"></a>首先需要勾选 SRP Batcher。</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/8e83a942f44552c02a321fb77096a29b.jpg" alt="Unity 内置渲染管线转URP"></p> <h2><a id="shader_233" rel="nofollow"></a>shader代码修改：</h2> <p>Shader中所有的内置属性例如<code>unity_ObjectToWorld</code>，<code>unity_SHAr</code>等，都要在一个名为<code>UnityPerDraw</code>的CBUFFER中声明;<br /> 所有的Material属性都要在一个名为<code>UnityPerMaterial</code>的CBUFFER中声明。</p> <pre><code class="prism language-c"><span class="token function">CBUFFER_START</span><span class="token punctuation">(</span>UnityPerMaterial<span class="token punctuation">)</span><span class="token comment">//Properties</span> CBUFFER_END<span class="token function">CBUFFER_START</span><span class="token punctuation">(</span>UnityPerDraw<span class="token punctuation">)</span>     float4x4 unity_ObjectToWorld<span class="token punctuation">;</span> CBUFFER_END</code></pre> <p><strong>例如：</strong></p> <pre><code class="prism language-c">Properties<span class="token punctuation">{<!-- --></span><span class="token function">_Color1</span><span class="token punctuation">(</span><span class="token string">"Color 1"</span><span class="token punctuation">,</span> Color<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">_Color2</span><span class="token punctuation">(</span><span class="token string">"Color 2"</span><span class="token punctuation">,</span> Color<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">//原本的写法</span><span class="token comment">//float4 _Color1;</span><span class="token comment">//float4 _Color2;</span><span class="token comment">//兼容SRP Batcher的写法</span><span class="token function">CBUFFER_START</span><span class="token punctuation">(</span>UnityPerMaterial<span class="token punctuation">)</span> float4 _Color1<span class="token punctuation">;</span> float4 _Color2<span class="token punctuation">;</span> CBUFFER_END<span class="token function">CBUFFER_START</span><span class="token punctuation">(</span>UnityPerDraw<span class="token punctuation">)</span>     float4x4 unity_ObjectToWorld<span class="token punctuation">;</span> CBUFFER_END</code></pre> <p>如果shader报错：<font color="#ff0000">Shader error in ‘Unlit/SampleUnlit’: redefinition of ‘unity_ObjectToWorld’</font>，重复定义，如果自己的shader代码里面没有，那么就是引入了其他的库文件里面包含了该变量。</p> <p>最后，我们看Shader的面板，如果出现了类似的提示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220722/11e444d1fa9b5ab2b230402a2a465f57.jpg" alt="Unity 内置渲染管线转URP"></p> <p>则表示 该属性 未包含在 CBUFFER_START(UnityPerMaterial) 里面。</p> <p><strong>注意：如果Shader使用了多Pass渲染，则会打断 SRP Batcher。</strong></p> <h1><a id="_286" rel="nofollow"></a>参考链接：</h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://zhuanlan.zhihu.com/p/254810253"  rel="nofollow">https://zhuanlan.zhihu.com/p/254810253</a></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/wannaconquer/article/details/114092927"  rel="nofollow">https://blog.csdn.net/wannaconquer/article/details/114092927</a></p> </div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-124.htm">在vscode中快速新建html文件的2种方法总结_C 语言</a></p>
                                        <p>下一个：<a href="/html/category/article-126.htm">深入浅出Java线程池原理分析与使用</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1954.htm">FreeRTOS进阶之任务创建完全解析_操作系统</a></h4>
                <p>目录  前言 1.创建任务堆栈和任务TCB 2.初始化任务TCB必要的字段 3.初始化任务堆栈 4.进入临界区 5.当前任务数量增加1 6.为第一次运行做必要的初始化 7.更新当前正在运行的任务TCB</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-526.htm">SpringBoot生成docx文件并返回其Base64编码</a></h4>
                <p>直接上源码，      @ResponseBody     @RequestMapping(value = "/getDocx", method = RequestMethod.GET)     pu</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4123.htm">Vue +Vant 实现顶部搜索栏</a></h4>
                <p>搜索栏组件源码(SearchBar.vue) &lt;template&gt;   &lt;section class="city-search"&gt;     &lt;van-icon class</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1331.htm">为什么我建议需要定期重建数据量大但是性能关键的表_在线工具</a></h4>
                <p>个人创作公约：本人声明创作的所有文章皆为自己原创，如果有参考任何文章的地方，会标注出来，如果有疏漏，欢迎大家批判。如果大家发现网上有抄袭本文章的，欢迎举报，并且积极向这个github 仓库 提交 is</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4067.htm">lambda表达式之allMatch、anyMatch、noneMatch</a></h4>
                <p>　　allMatch：Stream中全部元素符合传入的predicate返回 true 　　anyMatch：Stream中只要有一个元素符合传入的predicate返回 true 　　noneMat</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4514.htm">戴尔vostro不认硬盘（戴尔 不识别硬盘）</a></h4>
                <p>摘要：       本篇文章给大家谈谈戴尔vostro不认硬盘，以及戴尔 不识别硬盘对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、戴尔笔记本电脑光驱位硬盘有时不能识别... </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2529.htm">Python 路径处理(os.path模块)</a></h4>
                <p>dest_file = r'D:\PythonProject\TestPython\test.py' # 实际存在 dest_fake_file = r'X:\PythonProject\TestPy</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4402.htm">狗粮品牌有哪些品牌 狗粮品牌有哪些品牌好</a></h4>
                <p>摘要：       大家好，今天小编关注到一个比较有意思的话题，就是关于狗粮品牌有哪些品牌的问题，于是小编就整理了2个相关介绍狗粮品牌有哪些品牌的解答，让我们一起看看吧。狗粮哪几个品牌比较好？狗粮哪个</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2823.htm">jQuery实现呼吸灯轮播图</a></h4>
                <p>jQuery实现呼吸灯轮播图  jQuery实现呼吸灯轮播图    jQuery实现呼吸灯轮播图 &lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;he</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1342.htm">import axios from ‘axios‘失效的问题</a></h4>
                <p>在搭建vue开发项目的时候，引入axios组件的时候，设置的全局axios总是访问不了，先以为是axios版本冲突问题，后来发现是项目打开层级的问题。 进入下层目录重新打开，解决了！</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>