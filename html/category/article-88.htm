<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io/html/category/article-88.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>android 黑夜模式适配记录 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?54eb6c7259fef0472f9cccce059c36b2";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title" style="word-break: break-all;">android 黑夜模式适配记录</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span></li>
                    <li><a href="/html/category/">文章分类</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                <div class="post-content-content">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#_4" rel="nofollow">前言</a></li> <li><a href="#_10" rel="nofollow">一、不开启深色模式</a></li> <li> <ul> <li><a href="#1_12" rel="nofollow">1.关闭自动深色模式</a></li> </ul> </li> <li><a href="#_57" rel="nofollow">二、自己适配深色模式</a></li> <li> <ul> <li><a href="#1_66" rel="nofollow">1.关闭自动深色模式</a></li> <li><a href="#2res_70" rel="nofollow">2.创建res深色适配目录</a></li> <li> <ul> <li> <ul> <li> <ul> <li><a href="#1_colorsstrings_74" rel="nofollow">(1) 适配colors,strings</a></li> <li><a href="#2_shape_99" rel="nofollow">(2) 适配图片或者shape等</a></li> <li><a href="#3_Activity_171" rel="nofollow">(3) Activity的处理</a></li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li><a href="#APP_203" rel="nofollow">三、APP内开启深色模式</a></li> </ul> </div> <hr color="#000000" size="1&quot;"/> <h1> <a id="_4" rel="nofollow"></a>前言</h1> <p><font color="#727272">在android 10以上，手机可开启深色模式，为了让手机更符合谷歌的规范，我们需要进行深色模式的适配</font></p> <hr color="#000000" size="1&quot;"/> <h1> <a id="_10" rel="nofollow"></a>一、不开启深色模式</h1> <p><font color="#727272">深色模式下，部分手机系统开启深色模式后，会自动帮我们将app转变为深色模式，即使我们并没有进行适配；这种自动的转色，大部分时候不尽人意，为了不让app在深色模式下显示紊乱，我们需要关闭深色模式；</font></p> <h2> <a id="1_12" rel="nofollow"></a>1.关闭自动深色模式</h2> <pre><code>1.一般我们都会让整个app使用统一的theme，如下： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span> 	<span class="token attr-name">...</span> 	<span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/mTheme<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span> 	... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span> </code></pre> <pre><code>在style.xml中，定义我们的theme，如下： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mTheme<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat.DayNight.NoActionBar<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token style language-css">          &lt;item name=<span class="token string">"colorPrimary"</span>&gt;@color/colorPrimary&lt;/item&gt;         &lt;item name=<span class="token string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/item&gt;         &lt;item name=<span class="token string">"colorAccent"</span>&gt;@color/colorAccent&lt;/item&gt;         &lt;item name=<span class="token string">"android:windowAnimationStyle"</span>&gt;@style/default_animation&lt;/item&gt;         &lt;item name=<span class="token string">"android:windowBackground"</span>&gt;@color/base_color_FDFDFD&lt;/item&gt;     </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span> </code></pre> <pre><code>为了关闭部分手机系统自动将app转为深色模式，我们需要在style中加入如下一行： 加入之后一般会报错，提示为此设置为api 29 以上才有，我们只需根据提示快速生成value-v29文件夹， 此时会自动在value-v29文件夹下生成style.xml </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:forceDarkAllowed<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span> </code></pre> <pre><code>2.如果APP在前台，系统转为深色模式，APP可见的Activity将会被重新创建，既然我们不开启深色模式， 那么我们也不需要重新创建Activity,在 AndroidManifest.xml 中,我们对Activity 做如下修改： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>             <span class="token attr-name">...</span>             <span class="token attr-name"><span class="token namespace">android:</span>configChanges</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uiMode<span class="token punctuation">"</span></span> 			<span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span> </code></pre> <hr/> <h1> <a id="_57" rel="nofollow"></a>二、自己适配深色模式</h1> <p><font color="#727272">适配深色模式一般有以下几种方式：</font></p> <ul> <li>让系统自动适配；就是上面我们关闭的那种，大部分情况下自动转变深色模式不尽人意，部分手机也无法实现；</li> <li>完全由我们自己适配；即为每种颜色定义一个深色模式下的颜色值，这种方案也需要关闭系统自动转变深色模式的功能，否则部分深色模式下的颜色值不生效，这种方案工作量比较大；</li> <li>系统自动适配与我们自己的适配共同使用；这种方案工作量相对较小；系统自动适配颜色，对转换的不如意的View，我们可以 setForceDarkAllowed(false),然后再自己适配颜色；</li> </ul> <p>我们采用第二种方案来讲解，完全自己适配，这样讲的东西比较多一点；</p> <h2> <a id="1_66" rel="nofollow"></a>1.关闭自动深色模式</h2> <pre><code>第一步我们要操作的当然是关闭自动深色模式，让我们自己接手颜色适配，参照文章中的第一个步骤即可； </code></pre> <h2> <a id="2res_70" rel="nofollow"></a>2.创建res深色适配目录</h2> <p><font color="#727272">当系统转变为深色模式时，会自动调用res目录下的xxx-night目录，在其中寻找匹配的颜色或图片；</font></p> <h5> <a id="1_colorsstrings_74" rel="nofollow"></a>(1) 适配colors,strings</h5> <pre><code>1.我们需要在res目录下，创建values-night文件夹，在文件夹中，创建colors.xml文件，用以适配颜色; </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221223/209c6efceda782bda9a2d40dc6cb7d49.jpg" alt="android 黑夜模式适配记录"><br /> 其中，values 下 colors.xml 内的颜色值名称 与 values-night 下 colors.xml 内的颜色值名称必须相同，这样，当转变为深色模式时，系统将使用 values-night 下的 colors.xml，如果 values-night 下没有相同的颜色值名称，则会继续使用 values 下colors.xml 内的颜色值；</p> <pre><code>2.strings 的适配也与上同理，如果我们在string中使用了富文本， 只需要在values-night 下生成strings.xml 即可；如下： </code></pre> <pre><code class="prism language-xml">values 下： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fuWenBen<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>         <span class="token cdata">&lt;![CDATA[            &lt;font&gt;&lt;textFont color=\'#000000\' size='41px'&gt;%s&lt;/textFont&gt;&lt;/font&gt;&lt;br/&gt;谁看过我          ]]&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span>  values-night 下：  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fuWenBen<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>         <span class="token cdata">&lt;![CDATA[            &lt;font&gt;&lt;textFont color=\'#FFFFFF\' size='41px'&gt;%s&lt;/textFont&gt;&lt;/font&gt;&lt;br/&gt;谁看过我          ]]&gt;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">&gt;</span></span> </code></pre> <h5> <a id="2_shape_99" rel="nofollow"></a>(2) 适配图片或者shape等</h5> <pre><code>1.我们可能在深色模式下，需要图标展现不同的颜色，如亮色模式下，图标是黑色的， 而在深色模式下，图标需要是白色的，我们只需创建drawable-night / mipmap-night 即可，如下： </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221223/2524fdd2bcad966be0519849b3a4f9e2.jpg" alt="android 黑夜模式适配记录"></p> <pre><code>2.其实适配图标我们还有其他的办法，即在colors中定义图标的颜色，如下： </code></pre> <pre><code class="prism language-xml">values 下 <span class="token comment">&lt;!--    图标颜色 灰色-白色--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconColor_999999<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>#999999<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span> values-night 下  <span class="token comment">&lt;!--    图标颜色 灰色-白色--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconColor_999999<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>#FFFFFF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span> </code></pre> <pre><code>定义完成之后，我们在需要变色的imageView,定义tint即可，tint 会帮助我们将图标修改成 我们定义的颜色，如下： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span> 			<span class="token attr-name">...</span> 			<span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/icon_phone<span class="token punctuation">"</span></span>  			<span class="token attr-name"><span class="token namespace">app:</span>tint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/iconColor_999999<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">tools:</span>ignore</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ContentDescription<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span> </code></pre> <pre><code>动态设置ImageView的tint,如下： </code></pre> <pre><code class="prism language-java">imageView<span class="token punctuation">.</span><span class="token function">setImageDrawable</span><span class="token punctuation">(</span>ContextCompat<span class="token punctuation">.</span><span class="token function">getDrawable</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_phone<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> imageView<span class="token punctuation">.</span><span class="token function">setImageTintList</span><span class="token punctuation">(</span> 	ColorStateList<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span> 		ContextCompat<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>colorBlack<span class="token punctuation">)</span> 	<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <pre><code>3.给亮色的背景图片增加蒙版，而不用增加图片来适配，如下： </code></pre> <pre><code class="prism language-xml">values 下 <span class="token comment">&lt;!--    图标颜色 灰色-白色--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconColor_mark<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>#00000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span> values-night 下  <span class="token comment">&lt;!--    图标颜色 灰色-白色--&gt;</span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconColor_mark<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>#40000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span> </code></pre> <pre><code>定义完成后，我们在需要增加蒙版的ImageView 增加 tintMode 与 tint，如下： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span> 			<span class="token attr-name">...</span>             <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/pink_bg<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fitXY<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">android:</span>tintMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src_atop<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">app:</span>tint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/iconColor_mark<span class="token punctuation">"</span></span>             <span class="token attr-name"><span class="token namespace">tools:</span>ignore</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ContentDescription<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> 		<span class="token attr-name">...</span> 		<span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/pink_bg<span class="token punctuation">"</span></span> 		<span class="token attr-name"><span class="token namespace">android:</span>backgroundTintMode</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src_atop<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">android:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/iconColor_mark<span class="token punctuation">"</span></span>        <span class="token punctuation">/&gt;</span></span>           </code></pre> <h5> <a id="3_Activity_171" rel="nofollow"></a>(3) Activity的处理</h5> <pre><code>1.当我们完成以上适配后，就需要注意一点，当APP处于前台，系统转为深色模式后， activity会被重新创建并切换深色模式，某些情况下这并不是我们希望看到的， 所以当系统转为深色模式时，如果我们不需要让activity重新创建，我们需要做如下编码： </code></pre> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span>             <span class="token attr-name">...</span>             <span class="token attr-name"><span class="token namespace">android:</span>configChanges</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uiMode<span class="token punctuation">"</span></span> 			<span class="token attr-name">...</span> <span class="token punctuation">/&gt;</span></span> </code></pre> <pre><code>不被重新创建的Activity,将不会应用深色模式，此种情况下，我们可能需要自己处理一些深色转变， 我们在Activity做如下编码，当系统深色模式启用/关闭时，以下方法将会被调用： </code></pre> <pre><code class="prism language-java"> 	<span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onConfigurationChanged</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> Configuration newConfig<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onConfigurationChanged</span><span class="token punctuation">(</span>newConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">int</span> currentNightMode <span class="token operator">=</span> newConfig<span class="token punctuation">.</span>uiMode <span class="token operator">&amp;</span> Configuration<span class="token punctuation">.</span>UI_MODE_NIGHT_MASK<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>currentNightMode <span class="token operator">==</span> Configuration<span class="token punctuation">.</span>UI_MODE_NIGHT_YES<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			<span class="token comment">//系统开启了深色模式，自己做相应处理</span> 		<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>             <span class="token comment">//系统关闭了深色模式，自己做相应处理</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <hr/> <h1> <a id="APP_203" rel="nofollow"></a>三、APP内开启深色模式</h1> <p><font color="#727272">有时候我们可能会有需求，在APP内设置切换深色模式，对此，我们可能需要手动切换为深色模式，即使系统当前并非深色模式；</font></p> <pre><code>1.做如下编码切换APP为 深色/亮色 模式： 	(1).已经被创建的Activity 只有调用recreate() / 关闭重新创建 才能切换深色/亮色模式； 	(2).调用此方法不会触发回调 onConfigurationChanged() 方法； </code></pre> <pre><code class="prism language-java"><span class="token comment">//设置为日间亮色模式</span> AppCompatDelegate<span class="token punctuation">.</span><span class="token function">setDefaultNightMode</span><span class="token punctuation">(</span>AppCompatDelegate<span class="token punctuation">.</span>MODE_NIGHT_NO<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置为夜间深色模式</span> AppCompatDelegate<span class="token punctuation">.</span><span class="token function">setDefaultNightMode</span><span class="token punctuation">(</span>AppCompatDelegate<span class="token punctuation">.</span>MODE_NIGHT_YES<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//重新创建Activity,以使用 深色/亮色 模式</span> <span class="token function">recreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <pre><code>2.做如下编码切换当前Activity为 深色/亮色 模式： 	(1).此方法不会使除 当前调用处的Activity 外 已创建/未创建 的 Activity 转换模式，简而言之， 	只有当前的Activity 会切换模式； 	(2).如果在AndroidManifest.xml中配置当前Activity android:configChanges="uiMode",则不会 	切换模式，但是会回调onConfigurationChanged() 方法；可调用reCreate()使当前Activity切换 	模式; 	(3).如果未配置configChanges="uiMode",则会重新创建当前Activity,并切换模式，不会回调 	onConfigurationChanged()方法； </code></pre> <pre><code class="prism language-java"><span class="token comment">//设置为日间亮色模式</span> <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLocalNightMode</span><span class="token punctuation">(</span>AppCompatDelegate<span class="token punctuation">.</span>MODE_NIGHT_NO<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置为夜间深色模式</span> <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLocalNightMode</span><span class="token punctuation">(</span>AppCompatDelegate<span class="token punctuation">.</span>MODE_NIGHT_YES<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <pre><code>3.判断当前的手机系统是否为深色模式： 	(1).此方法是判断系统的深色模式是否开启，我们上面的操作并不会影响此判断； </code></pre> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isDarkTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>uiMode <span class="token operator">&amp;</span> Configuration<span class="token punctuation">.</span>UI_MODE_NIGHT_MASK<span class="token punctuation">;</span>         <span class="token keyword">return</span> flag <span class="token operator">==</span> Configuration<span class="token punctuation">.</span>UI_MODE_NIGHT_YES<span class="token punctuation">;</span>     <span class="token punctuation">}</span> </code></pre> </p></div> 			                </div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/html/category/article-87.htm">一劳永逸，解决.NET发布云服务器的时区问题_在线工具</a></p>
                                        <p>下一个：<a href="/html/category/article-89.htm">Redis 单数据多源超高并发下的解决方案</a></p>
                                    </div>

                            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1331.htm">为什么我建议需要定期重建数据量大但是性能关键的表_在线工具</a></h4>
                <p>个人创作公约：本人声明创作的所有文章皆为自己原创，如果有参考任何文章的地方，会标注出来，如果有疏漏，欢迎大家批判。如果大家发现网上有抄袭本文章的，欢迎举报，并且积极向这个github 仓库 提交 is</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1925.htm">Spring Ioc源码分析系列&#8211;Ioc的基础知识准备_在线工具</a></h4>
                <p>Spring Ioc源码分析系列--Ioc的基础知识准备  本系列文章代码基于Spring Framework 5.2.x  Ioc的概念 在Spring里，Ioc的定义为The IoC Contai</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2824.htm">如何使用线程池执行定时任务？</a></h4>
                <p>在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadSchedul</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1629.htm">原生js实现楼层滚动（界面滑动）效果</a></h4>
                <p>截取自自己写的代码 思路很简单，就是改编自回到顶部效果，控制滚动条位移到指定位置  先有个布局，四个触发li和四张图片 &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;h</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-2530.htm">MySQL中的TEXT数据类型是什么？</a></h4>
                <p>TEXT数据对象对于在MySQL数据库中存储长格式文本字符串很有用。以下是关于TEXT数据类型的一些要点-   TEXT是列类型的族，旨在用作大容量字符存储。   实际的TEXT列类型为四种类型-TI</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">图像处理学习笔记——BMP图片详解</a></h4>
                <p>一、位图和调色板的概念  1.位图（Bitmap）： 例如我们常说的屏幕分辨率为 640*480，刷新频率为70Hz，意思是说每行要扫描 640 个象素，一共有 480 行，每秒重复扫描屏幕 70 次</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4124.htm">谈谈高并发系统的一些解决方案</a></h4>
                <p>本文结合项目经验，整理一份大纲，供参考。 常用指标   RT（Response Time）：响应时间。可能会衍生出 TP999、TP99、TP95、TP90等指标。一般在几毫秒到几百毫秒之间。   Q</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-4293.htm">免费领养宠物的平台小狗有哪些（免费领养宠物的app有哪些）</a></h4>
                <p>摘要：       本篇文章给大家谈谈免费领养宠物的平台小狗有哪些，以及免费领养宠物的app有哪些对应的知识点，希望对各位有所帮助，不要忘了收藏本站喔。本文目录一览：1、家中有一只狗想找新主人上哪..</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-258.htm">你确定你会用Enum枚举了？</a></h4>
                <p>一般在我们开发时如果能使用枚举罗列的，一般都会定义一个枚举类型。将枚举类型作为方法的参数，可以方便的进行调用，给我们带来不少的遍历，当然有时候它还不如直接用一个int类型带来，带来一定灵活性。但只要能</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-1630.htm">vue的路由组件的引入以及路由组件懒加载和router-link</a></h4>
                <p>App.vue &lt;template&gt;   &lt;div&gt;     &lt;router-link to="/"&gt;首页&lt;/router-link&gt;     &lt;</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
    
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->

    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })

        $('.post-content-content .js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>