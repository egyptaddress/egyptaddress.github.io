<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://egyptaddress.github.io" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>2024-03归档 - EgyptAddress</title>
    <link rel="icon" href="/assets/addons/xcblog/img/egyptaddress/favicon.ico" type="image/x-icon"/>
        <meta name="keywords" content="2024-03归档" />
        <meta name="description" content="2024-03归档" />
        <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/addons/xcblog/css/egyptaddress/style-starter.css">
        </head>

<body>
        <!-- header -->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                        <span class="fa fa-laptop"></span> EgyptAddress
                                    </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/xcblog/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/html/category/">文章分类</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="mobile-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!-- //header -->
    <!-- about breadcrumb -->
    <section class="w3l-about-breadcrumb text-center">
        <div class="breadcrumb-bg breadcrumb-bg-about py-sm-5 py-4">
            <div class="container py-2">
                <h1 class="title">2024-03 归档</h1>
                <ul class="breadcrumbs-custom-path mt-2">
                    <li><a href="/">首页</a></li>
                    <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 2024-03 归档</li>
                </ul>
            </div>
        </div>
    </section>
    <!-- //about breadcrumb -->
    <div class="container py-lg-5 py-3">
        <div class="row">
            <div class="col-md-8">
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-100.htm">
                                <img src="/uploads/20240214/7caaec5e02bb1ce363bb9268b81306bf.webp" alt="css文本垂直居中详解" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-100.htm">
                            <h3 class="title-big">css文本垂直居中详解</h3>
                        </a>
                        <p class="mt-4">文本垂直居中，分为“单行”与“多行”文本两种情况，多行又分为“固定”与“不固定”高度两种情况，看下图效果。  文本垂直居中  1. line-height height 搭配 line-height </p>
                        <p class="title-small mb-2 pull-right">
                            3月21日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-99.htm">
                                <img src="/uploads/20240214/1694a934d953b0dc61fe40ac4034f27c.webp" alt="Spring Boot 2.3.x 分层构建 Docker 镜像实战" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-99.htm">
                            <h3 class="title-big">Spring Boot 2.3.x 分层构建 Docker 镜像实战</h3>
                        </a>
                        <p class="mt-4">目录 一、什么是镜像分层 二、SpringBoot 2.3.x 新增对分层的支持 三、创建测试的 SpringBoot 应用  1、Maven 中引入相关依赖和插件 2、创建测试的 Controlle</p>
                        <p class="title-small mb-2 pull-right">
                            3月21日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-98.htm">
                                <img src="/uploads/20240214/5609cbe4a2710c44400fb8b4e8928ba9.webp" alt="数据库基础知识详解四：存储过程、视图、游标、SQL语句优化以及索引" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-98.htm">
                            <h3 class="title-big">数据库基础知识详解四：存储过程、视图、游标、SQL语句优化以及索引</h3>
                        </a>
                        <p class="mt-4">写在文章前：本系列文章用于博主自己归纳复习一些基础知识，同时也分享给可能需要的人，因为水平有限，肯定存在诸多不足以及技术性错误，请大佬们及时指正。 11、存储过程 存储过程是事先经过编译并存储在数据库</p>
                        <p class="title-small mb-2 pull-right">
                            3月20日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-97.htm">
                                <img src="/uploads/20240214/15f3c4212f40fda7ce92fc452dc790b7.webp" alt="PHP 全局空间" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-97.htm">
                            <h3 class="title-big">PHP 全局空间</h3>
                        </a>
                        <p class="mt-4">介绍 在没有任何命名空间定义的情况下，所有类，函数等定义都放置在全局命名空间中。如果名称以&nbsp;\开头，则意味着即使在命名空间的上下文中，全局空间也需要该名称。 使用全局空间规范 示例 &lt;</p>
                        <p class="title-small mb-2 pull-right">
                            3月20日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-96.htm">
                                <img src="/uploads/20240214/80e1ae8826f43c44269c88a9b207db4c.webp" alt="python -mysql-excel数据导出-如何把python的list列表中的数据放入sql语句的in后的语句中的办法" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-96.htm">
                            <h3 class="title-big">python -mysql-excel数据导出-如何把python的list列表中的数据放入sql语句的in后的语句中的办法</h3>
                        </a>
                        <p class="mt-4">1.重要内容分析： 如何把python的list列表中的数据放入sql语句的in后的语句中的办法：  idlists=dics["data"]["cameraIdList"]   #返回一个列表【“i</p>
                        <p class="title-small mb-2 pull-right">
                            3月19日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-95.htm">
                                <img src="/uploads/20240214/76102f0ccd571ad24bf10b61732c8d20.webp" alt="Python OpenCV实现3种滤镜效果实例_python_" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-95.htm">
                            <h3 class="title-big">Python OpenCV实现3种滤镜效果实例_python_</h3>
                        </a>
                        <p class="mt-4">目录  前言 浮雕滤镜效果 雕刻滤镜效果 凸透镜滤镜效果 总结    前言 本篇文章要使用OpenCV、Numpy 和Math这3个工具包实现一个简单的滤镜编辑器。在这个滤镜编辑器中，包含了3种滤镜效</p>
                        <p class="title-small mb-2 pull-right">
                            3月19日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-94.htm">
                                <img src="/uploads/20240214/e1cb19dc65fe145e5652417f9d9ba379.webp" alt="史上最简便的可以直接用的登录验证码攻略（前后端都有）" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-94.htm">
                            <h3 class="title-big">史上最简便的可以直接用的登录验证码攻略（前后端都有）</h3>
                        </a>
                        <p class="mt-4">首先，我们要知道为什么要设置验证码、 原因很简单： 加验证码的目的是：必须要人工操作，防止提交错误登录信息，暴力破解密码，如果有人恶意登录，服务器压力会很大，甚至宕机。 为了防止我们用的别人的验证码图</p>
                        <p class="title-small mb-2 pull-right">
                            3月18日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-93.htm">
                                <img src="/uploads/20240214/15f3c4212f40fda7ce92fc452dc790b7.webp" alt="python访问hdfs" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-93.htm">
                            <h3 class="title-big">python访问hdfs</h3>
                        </a>
                        <p class="mt-4">pip install hdfs python 读取hdfs目录或文件 import hdfs  client =hdfs.Client("http://10.10.1.4:50070") fileD</p>
                        <p class="title-small mb-2 pull-right">
                            3月18日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-92.htm">
                                <img src="/uploads/20240214/15f3c4212f40fda7ce92fc452dc790b7.webp" alt="在C ++ STL中列出swap()" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-92.htm">
                            <h3 class="title-big">在C ++ STL中列出swap()</h3>
                        </a>
                        <p class="mt-4">给出的任务是显示STL中C ++中的功能列表swap()函数。 什么是STL中的列表？ 列表是允许在任何地方按顺序进行恒定时间插入和删除的容器。列表被实现为双链表。列表允许不连续的内存分配。与数组，向</p>
                        <p class="title-small mb-2 pull-right">
                            3月17日                        </p>
                    </div>
                </div>
                                <div class="row mb-3">
                    <div class="col-lg-4">
                        <div class="position-relative">
                            <a href="/html/category/article-91.htm">
                                <img src="/uploads/20240214/3f1275233c413ecd16089d50a0615f3d.webp" alt="这几个关于Spring 依赖注入的问题你清楚吗？" class="radius-image img-fluid">
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-8 mt-lg-0 mt-5">
                        <a href="/html/category/article-91.htm">
                            <h3 class="title-big">这几个关于Spring 依赖注入的问题你清楚吗？</h3>
                        </a>
                        <p class="mt-4">前言 本章的内容主要是想探讨我们在进行Spring 开发过程当中，关于依赖注入的几个知识点。感兴趣的读者可以先看下以下问题：  @Autowired, @Resource, @Inject 三个注解的</p>
                        <p class="title-small mb-2 pull-right">
                            3月17日                        </p>
                    </div>
                </div>
                
                <ul class="pagination"><li><a href="/date/2024-03/page-2.htm">&laquo;</a></li> <li><a href="/date/2024-03/">1</a></li><li><a href="/date/2024-03/page-2.htm">2</a></li><li class="active"><span>3</span></li><li><a href="/date/2024-03/page-4.htm">4</a></li><li><a href="/date/2024-03/page-5.htm">5</a></li><li><a href="/date/2024-03/page-6.htm">6</a></li><li><a href="/date/2024-03/page-7.htm">7</a></li> <li><a href="/date/2024-03/page-4.htm">&raquo;</a></li></ul>            </div>
            <div class="col-md-4 w3l-services">
                <h3 class="title-big mb-sm-3 mb-3">热门文章</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-223.htm">Git 代码管理（代码提交和代码回退）</a></h4>
                <p>Git 代码管理（代码提交和代码回退） Git的主要功能是代码管理，版本管理，分支管理。 在远程代码管理平台上，项目的代码被管理在一个远程代码仓库中，在本地，代码保存在一个本地代码仓库中。通过Git，</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-261.htm">Java 集合框架ArrayList 储存自定义数组</a></h4>
                <p>package LinkedList;  import java.util.ArrayList; import java.util.Iterator;  import p.bean.Person;  </p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-206.htm">读取spring的配置来定义常量</a></h4>
                <p>问题背景 1、在spring配置中有一个【在线地址】的配置  2、有一个工具类，可以读取spring的配置  需求：将spring的配置定义为一个常量 问题分析 1、常量定义原则：要用final和st</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-256.htm">feign post 参数对象不加@RequestBody的用法</a></h4>
                <p>最近在做小程序调支付服务接口的一个功能，这个feign接口传参真的太费事。 代码我就改造了下，不直接上真实代码。 比如小程序调支付服务的订单查询接口，支付服务那边的controller的订单查询方法是</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-254.htm">图像处理学习笔记——BMP图片详解</a></h4>
                <p>一、位图和调色板的概念  1.位图（Bitmap）： 例如我们常说的屏幕分辨率为 640*480，刷新频率为70Hz，意思是说每行要扫描 640 个象素，一共有 480 行，每秒重复扫描屏幕 70 次</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-213.htm">C/C++内存申请函数总结</a></h4>
                <p>#include &lt;stdlib.h&gt; new char[size] void* malloc(unsigned size); void* realloc(void* ptr, unsig</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-232.htm">Android中EditText光标的显示与隐藏方法</a></h4>
                <p>目录  Android EditText的光标的显示和隐藏 Android之第一次不显示EditText光标 总结   Android EditText的光标的显示和隐藏 一、java代码 1.编辑框</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-219.htm">Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现</a></h4>
                <p>Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现  目录  Golang学习之网络参数请求-Query Params及Path Variables</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-241.htm">如何保证redis和数据库的一致性</a></h4>
                <p>在项目中难免会使用到redis作为缓存，去减轻数据库的访问压力，但是涉及到数据更新时，如果redis和数据库的操作设计出现问题，就会导致redis缓存中和数据库中的数据不一致的情况。那么我们如何去保证</p>
            </div>
        </div>
    </div>
</div>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                <h4><a href="/html/category/article-208.htm">PHP字符串运算符详解</a></h4>
                <p>介绍 有两个用于处理字符串数据类型的运算符。在&nbsp;“”（点）运算符是PHP的串联运算符。两个字符串操作数结合在一起（右手字符串附加在左手字符串上），并返回一个新字符串。PHP还具有&nbsp;</p>
            </div>
        </div>
    </div>
</div>

<h3 class="title-big mb-sm-3 mb-3">归纳</h3>
<div class="row w3l-achievements">
    <div class="col-lg-12 item">
        <div class="card">
            <div class="box-wrap">
                                <h4><span class="badge" style="float: right;">20</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
                                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
                                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
                                <h4><span class="badge" style="float: right;">58</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
                            </div>
        </div>
    </div>
</div>
            </div>
        </div>
    </div>
        <!-- Footer -->
    <section class="w3l-footer py-sm-5 py-4">
        <div class="container">
            <div class="footer-content">
                <div class="row">
                    <div class="col-lg-8 footer-left">
                        <p class="m-0">EgyptAddress 版权所有</p>
                    </div>
                    <div class="col-lg-4 footer-right text-lg-right text-center mt-lg-0 mt-3">
                        <ul class="social m-0 p-0">
                            <li><a href="#facebook"><span class="fa fa-facebook-official"></span></a></li>
                            <li><a href="#linkedin"><span class="fa fa-linkedin-square"></span></a></li>
                            <li><a href="#instagram"><span class="fa fa-instagram"></span></a></li>
                            <li><a href="#twitter"><span class="fa fa-twitter"></span></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- //Footer -->
    <!-- all js scripts and files here -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/theme-change.js"></script><!-- theme switch js (light and dark)-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery-3.3.1.min.js"></script><!-- default jQuery -->
    <!-- /typig-text-->
    <script>
    const typedTextSpan = document.querySelector(".typed-text");
    const cursorSpan = document.querySelector(".cursor");

    const textArray = ["UI/UX Designer", "Freelancer", "Web developer"];
    const typingDelay = 200;
    const erasingDelay = 10;
    const newTextDelay = 100; // Delay between current and next text
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            if (!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            // add class 'typing' if there's none
            if (!cursorSpan.classList.contains("typing")) {
                cursorSpan.classList.add("typing");
            }
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, 0);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            cursorSpan.classList.remove("typing");
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay);
        }
    }

    document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
        if (textArray.length) setTimeout(type, newTextDelay + 250);
    });
    </script>
    <!-- //typig-text-->
    <!-- services owlcarousel -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/owl.carousel.js"></script>
    <!-- script for services -->
    <script>
    $(document).ready(function() {
        $('.owl-two').owlCarousel({
            loop: true,
            margin: 30,
            nav: false,
            responsiveClass: true,
            autoplay: false,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                700: {
                    items: 1,
                    nav: false
                },
                1090: {
                    items: 3,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //script for services -->
    <!-- script for tesimonials carousel slider -->
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                736: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 2,
                    nav: false,
                    loop: false
                }
            }
        })
    })
    </script>
    <!-- //script for tesimonials carousel slider -->
    <!-- video popup -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //video popup -->
    <!-- stats number counter-->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.waypoints.min.js"></script>
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <!-- bootstrap js -->
    <script src="/assets/addons/xcblog/js/frontend/egyptaddress/bootstrap.min.js"></script>
</body>

</html>